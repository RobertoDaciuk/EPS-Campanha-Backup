import { UsuarioService } from './usuario.service';
import { CriarUsuarioAdminDto } from './dto/criar-usuario-admin.dto';
import { AtualizarUsuarioDto } from './dto/atualizar-usuario.dto';
import { ListarUsuariosFiltroDto } from './dto/listar-usuarios.filtro.dto';
export declare class UsuarioController {
    private readonly usuarioService;
    private readonly logger;
    constructor(usuarioService: UsuarioService);
    listar(filtros: ListarUsuariosFiltroDto): Promise<{
        nome: string;
        email: string;
        cpf: string | null;
        opticaId: string | null;
        id: string;
        whatsapp: string | null;
        senhaHash: string;
        avatarUrl: string | null;
        papel: import(".prisma/client").$Enums.PapelUsuario;
        status: import(".prisma/client").$Enums.StatusUsuario;
        saldoMoedinhas: number;
        rankingMoedinhas: number;
        nivel: import(".prisma/client").$Enums.NivelVendedor;
        tokenResetarSenha: string | null;
        tokenResetarSenhaExpira: Date | null;
        mapeamentoPlanilhaSalvo: import("@prisma/client/runtime/library").JsonValue | null;
        criadoEm: Date;
        atualizadoEm: Date;
        gerenteId: string | null;
    }[]>;
    criar(dados: CriarUsuarioAdminDto): Promise<import("./usuario.service").CriacaoUsuarioResposta>;
    buscarPorId(id: string): Promise<{
        nome: string;
        email: string;
        cpf: string | null;
        opticaId: string | null;
        id: string;
        whatsapp: string | null;
        senhaHash: string;
        avatarUrl: string | null;
        papel: import(".prisma/client").$Enums.PapelUsuario;
        status: import(".prisma/client").$Enums.StatusUsuario;
        saldoMoedinhas: number;
        rankingMoedinhas: number;
        nivel: import(".prisma/client").$Enums.NivelVendedor;
        tokenResetarSenha: string | null;
        tokenResetarSenhaExpira: Date | null;
        mapeamentoPlanilhaSalvo: import("@prisma/client/runtime/library").JsonValue | null;
        criadoEm: Date;
        atualizadoEm: Date;
        gerenteId: string | null;
    }>;
    atualizar(id: string, dados: AtualizarUsuarioDto): Promise<{
        nome: string;
        email: string;
        cpf: string | null;
        opticaId: string | null;
        id: string;
        whatsapp: string | null;
        senhaHash: string;
        avatarUrl: string | null;
        papel: import(".prisma/client").$Enums.PapelUsuario;
        status: import(".prisma/client").$Enums.StatusUsuario;
        saldoMoedinhas: number;
        rankingMoedinhas: number;
        nivel: import(".prisma/client").$Enums.NivelVendedor;
        tokenResetarSenha: string | null;
        tokenResetarSenhaExpira: Date | null;
        mapeamentoPlanilhaSalvo: import("@prisma/client/runtime/library").JsonValue | null;
        criadoEm: Date;
        atualizadoEm: Date;
        gerenteId: string | null;
    }>;
    remover(id: string): Promise<{
        nome: string;
        email: string;
        cpf: string | null;
        opticaId: string | null;
        id: string;
        whatsapp: string | null;
        senhaHash: string;
        avatarUrl: string | null;
        papel: import(".prisma/client").$Enums.PapelUsuario;
        status: import(".prisma/client").$Enums.StatusUsuario;
        saldoMoedinhas: number;
        rankingMoedinhas: number;
        nivel: import(".prisma/client").$Enums.NivelVendedor;
        tokenResetarSenha: string | null;
        tokenResetarSenhaExpira: Date | null;
        mapeamentoPlanilhaSalvo: import("@prisma/client/runtime/library").JsonValue | null;
        criadoEm: Date;
        atualizadoEm: Date;
        gerenteId: string | null;
    }>;
    aprovar(id: string): Promise<{
        message: string;
        usuario: {
            nome: string;
            email: string;
            cpf: string | null;
            opticaId: string | null;
            id: string;
            whatsapp: string | null;
            senhaHash: string;
            avatarUrl: string | null;
            papel: import(".prisma/client").$Enums.PapelUsuario;
            status: import(".prisma/client").$Enums.StatusUsuario;
            saldoMoedinhas: number;
            rankingMoedinhas: number;
            nivel: import(".prisma/client").$Enums.NivelVendedor;
            tokenResetarSenha: string | null;
            tokenResetarSenhaExpira: Date | null;
            mapeamentoPlanilhaSalvo: import("@prisma/client/runtime/library").JsonValue | null;
            criadoEm: Date;
            atualizadoEm: Date;
            gerenteId: string | null;
        };
    }>;
    bloquear(id: string): Promise<{
        message: string;
        usuario: {
            nome: string;
            email: string;
            cpf: string | null;
            opticaId: string | null;
            id: string;
            whatsapp: string | null;
            senhaHash: string;
            avatarUrl: string | null;
            papel: import(".prisma/client").$Enums.PapelUsuario;
            status: import(".prisma/client").$Enums.StatusUsuario;
            saldoMoedinhas: number;
            rankingMoedinhas: number;
            nivel: import(".prisma/client").$Enums.NivelVendedor;
            tokenResetarSenha: string | null;
            tokenResetarSenhaExpira: Date | null;
            mapeamentoPlanilhaSalvo: import("@prisma/client/runtime/library").JsonValue | null;
            criadoEm: Date;
            atualizadoEm: Date;
            gerenteId: string | null;
        };
    }>;
    desbloquear(id: string): Promise<{
        message: string;
        usuario: {
            nome: string;
            email: string;
            cpf: string | null;
            opticaId: string | null;
            id: string;
            whatsapp: string | null;
            senhaHash: string;
            avatarUrl: string | null;
            papel: import(".prisma/client").$Enums.PapelUsuario;
            status: import(".prisma/client").$Enums.StatusUsuario;
            saldoMoedinhas: number;
            rankingMoedinhas: number;
            nivel: import(".prisma/client").$Enums.NivelVendedor;
            tokenResetarSenha: string | null;
            tokenResetarSenhaExpira: Date | null;
            mapeamentoPlanilhaSalvo: import("@prisma/client/runtime/library").JsonValue | null;
            criadoEm: Date;
            atualizadoEm: Date;
            gerenteId: string | null;
        };
    }>;
    personificar(id: string, req: any): Promise<string>;
    iniciarResetSenha(id: string): Promise<{
        tokenOriginal: string;
    }>;
}
