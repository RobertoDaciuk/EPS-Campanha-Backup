
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model Optica
 * Representa uma ótica parceira da plataforma.
 * 
 * Alterações da Versão 5.0 (Sprint 17 - Hierarquia Matriz/Filial):
 * - ADICIONADO: campo ehMatriz (Boolean) - indica se é uma Matriz
 * - ADICIONADO: auto-relação matrizId/matriz/filiais - hierarquia Matriz→Filial
 * - ADICIONADO: relação M2M campanhasAlvo - targeting de campanhas por ótica
 */
export type Optica = $Result.DefaultSelection<Prisma.$OpticaPayload>
/**
 * Model Usuario
 * Representa todos os usuários do sistema (Admin, Gerente, Vendedor).
 * 
 * Alterações da Versão 4.1:
 * - ADICIONADO: campo mapeamentoPlanilhaSalvo (Json, nullable)
 * para armazenar preferências de mapeamento de colunas da planilha
 */
export type Usuario = $Result.DefaultSelection<Prisma.$UsuarioPayload>
/**
 * Model Campanha
 * Representa uma campanha de vendas com regras de cartelas e pontuação.
 * 
 * Alterações da Versão 5.0 (Sprint 17 - Targeting por Óticas):
 * - ADICIONADO: relação M2M oticasAlvo - define quais óticas podem participar
 * - ADICIONADO: campo paraTodasOticas - bypass do targeting (campanha para todos)
 */
export type Campanha = $Result.DefaultSelection<Prisma.$CampanhaPayload>
/**
 * Model RegraCartela
 * Define uma cartela específica de uma campanha (ex: Cartela 1, Cartela 2).
 */
export type RegraCartela = $Result.DefaultSelection<Prisma.$RegraCartelaPayload>
/**
 * Model RequisitoCartela
 * Define um requisito (card) de uma cartela com validação dinâmica via Rule Builder.
 */
export type RequisitoCartela = $Result.DefaultSelection<Prisma.$RequisitoCartelaPayload>
/**
 * Model CondicaoRequisito
 * Representa uma condição individual do Rule Builder.
 */
export type CondicaoRequisito = $Result.DefaultSelection<Prisma.$CondicaoRequisitoPayload>
/**
 * Model EnvioVenda
 * Representa uma submissão de venda feita pelo vendedor.
 */
export type EnvioVenda = $Result.DefaultSelection<Prisma.$EnvioVendaPayload>
/**
 * Model Premio
 * Catálogo de prêmios disponíveis para resgate com saldoMoedinhas.
 */
export type Premio = $Result.DefaultSelection<Prisma.$PremioPayload>
/**
 * Model ResgatePremio
 * Histórico de resgates de prêmios pelos vendedores.
 * Agora é uma "ordem de serviço" que reflete o fluxo logístico.
 */
export type ResgatePremio = $Result.DefaultSelection<Prisma.$ResgatePremioPayload>
/**
 * Model RelatorioFinanceiro
 * Registros de pagamentos devidos a Vendedores e Gerentes.
 */
export type RelatorioFinanceiro = $Result.DefaultSelection<Prisma.$RelatorioFinanceiroPayload>
/**
 * Model Notificacao
 * Sistema de notificações para o "Feed de Atividades".
 */
export type Notificacao = $Result.DefaultSelection<Prisma.$NotificacaoPayload>
/**
 * Model ConfiguracaoGlobal
 * Armazena configurações globais do sistema.
 */
export type ConfiguracaoGlobal = $Result.DefaultSelection<Prisma.$ConfiguracaoGlobalPayload>
/**
 * Model CartelaConcluida
 * Livro-razão para registrar cartelas concluídas e prevenir pagamentos duplicados.
 * Um vendedor só pode concluir a cartela N da campanha X uma única vez.
 */
export type CartelaConcluida = $Result.DefaultSelection<Prisma.$CartelaConcluidaPayload>

/**
 * Enums
 */
export namespace $Enums {
  export const PapelUsuario: {
  ADMIN: 'ADMIN',
  GERENTE: 'GERENTE',
  VENDEDOR: 'VENDEDOR'
};

export type PapelUsuario = (typeof PapelUsuario)[keyof typeof PapelUsuario]


export const StatusUsuario: {
  PENDENTE: 'PENDENTE',
  ATIVO: 'ATIVO',
  BLOQUEADO: 'BLOQUEADO'
};

export type StatusUsuario = (typeof StatusUsuario)[keyof typeof StatusUsuario]


export const StatusEnvioVenda: {
  EM_ANALISE: 'EM_ANALISE',
  VALIDADO: 'VALIDADO',
  REJEITADO: 'REJEITADO',
  CONFLITO_MANUAL: 'CONFLITO_MANUAL'
};

export type StatusEnvioVenda = (typeof StatusEnvioVenda)[keyof typeof StatusEnvioVenda]


export const StatusPagamento: {
  PENDENTE: 'PENDENTE',
  PAGO: 'PAGO'
};

export type StatusPagamento = (typeof StatusPagamento)[keyof typeof StatusPagamento]


export const NivelVendedor: {
  BRONZE: 'BRONZE',
  PRATA: 'PRATA',
  OURO: 'OURO',
  DIAMANTE: 'DIAMANTE'
};

export type NivelVendedor = (typeof NivelVendedor)[keyof typeof NivelVendedor]


export const TipoUnidade: {
  PAR: 'PAR',
  UNIDADE: 'UNIDADE'
};

export type TipoUnidade = (typeof TipoUnidade)[keyof typeof TipoUnidade]


export const CampoVerificacao: {
  NOME_PRODUTO: 'NOME_PRODUTO',
  CODIGO_PRODUTO: 'CODIGO_PRODUTO',
  VALOR_VENDA: 'VALOR_VENDA',
  CATEGORIA_PRODUTO: 'CATEGORIA_PRODUTO'
};

export type CampoVerificacao = (typeof CampoVerificacao)[keyof typeof CampoVerificacao]


export const OperadorCondicao: {
  CONTEM: 'CONTEM',
  NAO_CONTEM: 'NAO_CONTEM',
  IGUAL_A: 'IGUAL_A',
  NAO_IGUAL_A: 'NAO_IGUAL_A',
  MAIOR_QUE: 'MAIOR_QUE',
  MENOR_QUE: 'MENOR_QUE'
};

export type OperadorCondicao = (typeof OperadorCondicao)[keyof typeof OperadorCondicao]


export const StatusResgate: {
  SOLICITADO: 'SOLICITADO',
  ENVIADO: 'ENVIADO',
  CANCELADO: 'CANCELADO'
};

export type StatusResgate = (typeof StatusResgate)[keyof typeof StatusResgate]

}

export type PapelUsuario = $Enums.PapelUsuario

export const PapelUsuario: typeof $Enums.PapelUsuario

export type StatusUsuario = $Enums.StatusUsuario

export const StatusUsuario: typeof $Enums.StatusUsuario

export type StatusEnvioVenda = $Enums.StatusEnvioVenda

export const StatusEnvioVenda: typeof $Enums.StatusEnvioVenda

export type StatusPagamento = $Enums.StatusPagamento

export const StatusPagamento: typeof $Enums.StatusPagamento

export type NivelVendedor = $Enums.NivelVendedor

export const NivelVendedor: typeof $Enums.NivelVendedor

export type TipoUnidade = $Enums.TipoUnidade

export const TipoUnidade: typeof $Enums.TipoUnidade

export type CampoVerificacao = $Enums.CampoVerificacao

export const CampoVerificacao: typeof $Enums.CampoVerificacao

export type OperadorCondicao = $Enums.OperadorCondicao

export const OperadorCondicao: typeof $Enums.OperadorCondicao

export type StatusResgate = $Enums.StatusResgate

export const StatusResgate: typeof $Enums.StatusResgate

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Opticas
 * const opticas = await prisma.optica.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  const U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Opticas
   * const opticas = await prisma.optica.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.optica`: Exposes CRUD operations for the **Optica** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Opticas
    * const opticas = await prisma.optica.findMany()
    * ```
    */
  get optica(): Prisma.OpticaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.usuario`: Exposes CRUD operations for the **Usuario** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Usuarios
    * const usuarios = await prisma.usuario.findMany()
    * ```
    */
  get usuario(): Prisma.UsuarioDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.campanha`: Exposes CRUD operations for the **Campanha** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Campanhas
    * const campanhas = await prisma.campanha.findMany()
    * ```
    */
  get campanha(): Prisma.CampanhaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.regraCartela`: Exposes CRUD operations for the **RegraCartela** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more RegraCartelas
    * const regraCartelas = await prisma.regraCartela.findMany()
    * ```
    */
  get regraCartela(): Prisma.RegraCartelaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.requisitoCartela`: Exposes CRUD operations for the **RequisitoCartela** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more RequisitoCartelas
    * const requisitoCartelas = await prisma.requisitoCartela.findMany()
    * ```
    */
  get requisitoCartela(): Prisma.RequisitoCartelaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.condicaoRequisito`: Exposes CRUD operations for the **CondicaoRequisito** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more CondicaoRequisitos
    * const condicaoRequisitos = await prisma.condicaoRequisito.findMany()
    * ```
    */
  get condicaoRequisito(): Prisma.CondicaoRequisitoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.envioVenda`: Exposes CRUD operations for the **EnvioVenda** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more EnvioVendas
    * const envioVendas = await prisma.envioVenda.findMany()
    * ```
    */
  get envioVenda(): Prisma.EnvioVendaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.premio`: Exposes CRUD operations for the **Premio** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Premios
    * const premios = await prisma.premio.findMany()
    * ```
    */
  get premio(): Prisma.PremioDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.resgatePremio`: Exposes CRUD operations for the **ResgatePremio** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ResgatePremios
    * const resgatePremios = await prisma.resgatePremio.findMany()
    * ```
    */
  get resgatePremio(): Prisma.ResgatePremioDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.relatorioFinanceiro`: Exposes CRUD operations for the **RelatorioFinanceiro** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more RelatorioFinanceiros
    * const relatorioFinanceiros = await prisma.relatorioFinanceiro.findMany()
    * ```
    */
  get relatorioFinanceiro(): Prisma.RelatorioFinanceiroDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.notificacao`: Exposes CRUD operations for the **Notificacao** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Notificacaos
    * const notificacaos = await prisma.notificacao.findMany()
    * ```
    */
  get notificacao(): Prisma.NotificacaoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.configuracaoGlobal`: Exposes CRUD operations for the **ConfiguracaoGlobal** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ConfiguracaoGlobals
    * const configuracaoGlobals = await prisma.configuracaoGlobal.findMany()
    * ```
    */
  get configuracaoGlobal(): Prisma.ConfiguracaoGlobalDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.cartelaConcluida`: Exposes CRUD operations for the **CartelaConcluida** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more CartelaConcluidas
    * const cartelaConcluidas = await prisma.cartelaConcluida.findMany()
    * ```
    */
  get cartelaConcluida(): Prisma.CartelaConcluidaDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.18.0
   * Query Engine version: 34b5a692b7bd79939a9a2c3ef97d816e749cda2f
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import Bytes = runtime.Bytes
  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    Optica: 'Optica',
    Usuario: 'Usuario',
    Campanha: 'Campanha',
    RegraCartela: 'RegraCartela',
    RequisitoCartela: 'RequisitoCartela',
    CondicaoRequisito: 'CondicaoRequisito',
    EnvioVenda: 'EnvioVenda',
    Premio: 'Premio',
    ResgatePremio: 'ResgatePremio',
    RelatorioFinanceiro: 'RelatorioFinanceiro',
    Notificacao: 'Notificacao',
    ConfiguracaoGlobal: 'ConfiguracaoGlobal',
    CartelaConcluida: 'CartelaConcluida'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "optica" | "usuario" | "campanha" | "regraCartela" | "requisitoCartela" | "condicaoRequisito" | "envioVenda" | "premio" | "resgatePremio" | "relatorioFinanceiro" | "notificacao" | "configuracaoGlobal" | "cartelaConcluida"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      Optica: {
        payload: Prisma.$OpticaPayload<ExtArgs>
        fields: Prisma.OpticaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.OpticaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OpticaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.OpticaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OpticaPayload>
          }
          findFirst: {
            args: Prisma.OpticaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OpticaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.OpticaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OpticaPayload>
          }
          findMany: {
            args: Prisma.OpticaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OpticaPayload>[]
          }
          create: {
            args: Prisma.OpticaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OpticaPayload>
          }
          createMany: {
            args: Prisma.OpticaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.OpticaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OpticaPayload>[]
          }
          delete: {
            args: Prisma.OpticaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OpticaPayload>
          }
          update: {
            args: Prisma.OpticaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OpticaPayload>
          }
          deleteMany: {
            args: Prisma.OpticaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.OpticaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.OpticaUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OpticaPayload>[]
          }
          upsert: {
            args: Prisma.OpticaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OpticaPayload>
          }
          aggregate: {
            args: Prisma.OpticaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateOptica>
          }
          groupBy: {
            args: Prisma.OpticaGroupByArgs<ExtArgs>
            result: $Utils.Optional<OpticaGroupByOutputType>[]
          }
          count: {
            args: Prisma.OpticaCountArgs<ExtArgs>
            result: $Utils.Optional<OpticaCountAggregateOutputType> | number
          }
        }
      }
      Usuario: {
        payload: Prisma.$UsuarioPayload<ExtArgs>
        fields: Prisma.UsuarioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UsuarioFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UsuarioFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          findFirst: {
            args: Prisma.UsuarioFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UsuarioFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          findMany: {
            args: Prisma.UsuarioFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>[]
          }
          create: {
            args: Prisma.UsuarioCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          createMany: {
            args: Prisma.UsuarioCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UsuarioCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>[]
          }
          delete: {
            args: Prisma.UsuarioDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          update: {
            args: Prisma.UsuarioUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          deleteMany: {
            args: Prisma.UsuarioDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UsuarioUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.UsuarioUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>[]
          }
          upsert: {
            args: Prisma.UsuarioUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          aggregate: {
            args: Prisma.UsuarioAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUsuario>
          }
          groupBy: {
            args: Prisma.UsuarioGroupByArgs<ExtArgs>
            result: $Utils.Optional<UsuarioGroupByOutputType>[]
          }
          count: {
            args: Prisma.UsuarioCountArgs<ExtArgs>
            result: $Utils.Optional<UsuarioCountAggregateOutputType> | number
          }
        }
      }
      Campanha: {
        payload: Prisma.$CampanhaPayload<ExtArgs>
        fields: Prisma.CampanhaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CampanhaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CampanhaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CampanhaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CampanhaPayload>
          }
          findFirst: {
            args: Prisma.CampanhaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CampanhaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CampanhaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CampanhaPayload>
          }
          findMany: {
            args: Prisma.CampanhaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CampanhaPayload>[]
          }
          create: {
            args: Prisma.CampanhaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CampanhaPayload>
          }
          createMany: {
            args: Prisma.CampanhaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CampanhaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CampanhaPayload>[]
          }
          delete: {
            args: Prisma.CampanhaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CampanhaPayload>
          }
          update: {
            args: Prisma.CampanhaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CampanhaPayload>
          }
          deleteMany: {
            args: Prisma.CampanhaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CampanhaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.CampanhaUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CampanhaPayload>[]
          }
          upsert: {
            args: Prisma.CampanhaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CampanhaPayload>
          }
          aggregate: {
            args: Prisma.CampanhaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCampanha>
          }
          groupBy: {
            args: Prisma.CampanhaGroupByArgs<ExtArgs>
            result: $Utils.Optional<CampanhaGroupByOutputType>[]
          }
          count: {
            args: Prisma.CampanhaCountArgs<ExtArgs>
            result: $Utils.Optional<CampanhaCountAggregateOutputType> | number
          }
        }
      }
      RegraCartela: {
        payload: Prisma.$RegraCartelaPayload<ExtArgs>
        fields: Prisma.RegraCartelaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.RegraCartelaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegraCartelaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.RegraCartelaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegraCartelaPayload>
          }
          findFirst: {
            args: Prisma.RegraCartelaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegraCartelaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.RegraCartelaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegraCartelaPayload>
          }
          findMany: {
            args: Prisma.RegraCartelaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegraCartelaPayload>[]
          }
          create: {
            args: Prisma.RegraCartelaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegraCartelaPayload>
          }
          createMany: {
            args: Prisma.RegraCartelaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.RegraCartelaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegraCartelaPayload>[]
          }
          delete: {
            args: Prisma.RegraCartelaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegraCartelaPayload>
          }
          update: {
            args: Prisma.RegraCartelaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegraCartelaPayload>
          }
          deleteMany: {
            args: Prisma.RegraCartelaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.RegraCartelaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.RegraCartelaUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegraCartelaPayload>[]
          }
          upsert: {
            args: Prisma.RegraCartelaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegraCartelaPayload>
          }
          aggregate: {
            args: Prisma.RegraCartelaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRegraCartela>
          }
          groupBy: {
            args: Prisma.RegraCartelaGroupByArgs<ExtArgs>
            result: $Utils.Optional<RegraCartelaGroupByOutputType>[]
          }
          count: {
            args: Prisma.RegraCartelaCountArgs<ExtArgs>
            result: $Utils.Optional<RegraCartelaCountAggregateOutputType> | number
          }
        }
      }
      RequisitoCartela: {
        payload: Prisma.$RequisitoCartelaPayload<ExtArgs>
        fields: Prisma.RequisitoCartelaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.RequisitoCartelaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RequisitoCartelaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.RequisitoCartelaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RequisitoCartelaPayload>
          }
          findFirst: {
            args: Prisma.RequisitoCartelaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RequisitoCartelaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.RequisitoCartelaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RequisitoCartelaPayload>
          }
          findMany: {
            args: Prisma.RequisitoCartelaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RequisitoCartelaPayload>[]
          }
          create: {
            args: Prisma.RequisitoCartelaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RequisitoCartelaPayload>
          }
          createMany: {
            args: Prisma.RequisitoCartelaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.RequisitoCartelaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RequisitoCartelaPayload>[]
          }
          delete: {
            args: Prisma.RequisitoCartelaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RequisitoCartelaPayload>
          }
          update: {
            args: Prisma.RequisitoCartelaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RequisitoCartelaPayload>
          }
          deleteMany: {
            args: Prisma.RequisitoCartelaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.RequisitoCartelaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.RequisitoCartelaUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RequisitoCartelaPayload>[]
          }
          upsert: {
            args: Prisma.RequisitoCartelaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RequisitoCartelaPayload>
          }
          aggregate: {
            args: Prisma.RequisitoCartelaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRequisitoCartela>
          }
          groupBy: {
            args: Prisma.RequisitoCartelaGroupByArgs<ExtArgs>
            result: $Utils.Optional<RequisitoCartelaGroupByOutputType>[]
          }
          count: {
            args: Prisma.RequisitoCartelaCountArgs<ExtArgs>
            result: $Utils.Optional<RequisitoCartelaCountAggregateOutputType> | number
          }
        }
      }
      CondicaoRequisito: {
        payload: Prisma.$CondicaoRequisitoPayload<ExtArgs>
        fields: Prisma.CondicaoRequisitoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CondicaoRequisitoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CondicaoRequisitoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CondicaoRequisitoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CondicaoRequisitoPayload>
          }
          findFirst: {
            args: Prisma.CondicaoRequisitoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CondicaoRequisitoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CondicaoRequisitoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CondicaoRequisitoPayload>
          }
          findMany: {
            args: Prisma.CondicaoRequisitoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CondicaoRequisitoPayload>[]
          }
          create: {
            args: Prisma.CondicaoRequisitoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CondicaoRequisitoPayload>
          }
          createMany: {
            args: Prisma.CondicaoRequisitoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CondicaoRequisitoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CondicaoRequisitoPayload>[]
          }
          delete: {
            args: Prisma.CondicaoRequisitoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CondicaoRequisitoPayload>
          }
          update: {
            args: Prisma.CondicaoRequisitoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CondicaoRequisitoPayload>
          }
          deleteMany: {
            args: Prisma.CondicaoRequisitoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CondicaoRequisitoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.CondicaoRequisitoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CondicaoRequisitoPayload>[]
          }
          upsert: {
            args: Prisma.CondicaoRequisitoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CondicaoRequisitoPayload>
          }
          aggregate: {
            args: Prisma.CondicaoRequisitoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCondicaoRequisito>
          }
          groupBy: {
            args: Prisma.CondicaoRequisitoGroupByArgs<ExtArgs>
            result: $Utils.Optional<CondicaoRequisitoGroupByOutputType>[]
          }
          count: {
            args: Prisma.CondicaoRequisitoCountArgs<ExtArgs>
            result: $Utils.Optional<CondicaoRequisitoCountAggregateOutputType> | number
          }
        }
      }
      EnvioVenda: {
        payload: Prisma.$EnvioVendaPayload<ExtArgs>
        fields: Prisma.EnvioVendaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.EnvioVendaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EnvioVendaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.EnvioVendaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EnvioVendaPayload>
          }
          findFirst: {
            args: Prisma.EnvioVendaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EnvioVendaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.EnvioVendaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EnvioVendaPayload>
          }
          findMany: {
            args: Prisma.EnvioVendaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EnvioVendaPayload>[]
          }
          create: {
            args: Prisma.EnvioVendaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EnvioVendaPayload>
          }
          createMany: {
            args: Prisma.EnvioVendaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.EnvioVendaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EnvioVendaPayload>[]
          }
          delete: {
            args: Prisma.EnvioVendaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EnvioVendaPayload>
          }
          update: {
            args: Prisma.EnvioVendaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EnvioVendaPayload>
          }
          deleteMany: {
            args: Prisma.EnvioVendaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.EnvioVendaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.EnvioVendaUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EnvioVendaPayload>[]
          }
          upsert: {
            args: Prisma.EnvioVendaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EnvioVendaPayload>
          }
          aggregate: {
            args: Prisma.EnvioVendaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEnvioVenda>
          }
          groupBy: {
            args: Prisma.EnvioVendaGroupByArgs<ExtArgs>
            result: $Utils.Optional<EnvioVendaGroupByOutputType>[]
          }
          count: {
            args: Prisma.EnvioVendaCountArgs<ExtArgs>
            result: $Utils.Optional<EnvioVendaCountAggregateOutputType> | number
          }
        }
      }
      Premio: {
        payload: Prisma.$PremioPayload<ExtArgs>
        fields: Prisma.PremioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PremioFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PremioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PremioFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PremioPayload>
          }
          findFirst: {
            args: Prisma.PremioFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PremioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PremioFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PremioPayload>
          }
          findMany: {
            args: Prisma.PremioFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PremioPayload>[]
          }
          create: {
            args: Prisma.PremioCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PremioPayload>
          }
          createMany: {
            args: Prisma.PremioCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PremioCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PremioPayload>[]
          }
          delete: {
            args: Prisma.PremioDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PremioPayload>
          }
          update: {
            args: Prisma.PremioUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PremioPayload>
          }
          deleteMany: {
            args: Prisma.PremioDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PremioUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PremioUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PremioPayload>[]
          }
          upsert: {
            args: Prisma.PremioUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PremioPayload>
          }
          aggregate: {
            args: Prisma.PremioAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePremio>
          }
          groupBy: {
            args: Prisma.PremioGroupByArgs<ExtArgs>
            result: $Utils.Optional<PremioGroupByOutputType>[]
          }
          count: {
            args: Prisma.PremioCountArgs<ExtArgs>
            result: $Utils.Optional<PremioCountAggregateOutputType> | number
          }
        }
      }
      ResgatePremio: {
        payload: Prisma.$ResgatePremioPayload<ExtArgs>
        fields: Prisma.ResgatePremioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ResgatePremioFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ResgatePremioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ResgatePremioFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ResgatePremioPayload>
          }
          findFirst: {
            args: Prisma.ResgatePremioFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ResgatePremioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ResgatePremioFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ResgatePremioPayload>
          }
          findMany: {
            args: Prisma.ResgatePremioFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ResgatePremioPayload>[]
          }
          create: {
            args: Prisma.ResgatePremioCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ResgatePremioPayload>
          }
          createMany: {
            args: Prisma.ResgatePremioCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ResgatePremioCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ResgatePremioPayload>[]
          }
          delete: {
            args: Prisma.ResgatePremioDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ResgatePremioPayload>
          }
          update: {
            args: Prisma.ResgatePremioUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ResgatePremioPayload>
          }
          deleteMany: {
            args: Prisma.ResgatePremioDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ResgatePremioUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ResgatePremioUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ResgatePremioPayload>[]
          }
          upsert: {
            args: Prisma.ResgatePremioUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ResgatePremioPayload>
          }
          aggregate: {
            args: Prisma.ResgatePremioAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateResgatePremio>
          }
          groupBy: {
            args: Prisma.ResgatePremioGroupByArgs<ExtArgs>
            result: $Utils.Optional<ResgatePremioGroupByOutputType>[]
          }
          count: {
            args: Prisma.ResgatePremioCountArgs<ExtArgs>
            result: $Utils.Optional<ResgatePremioCountAggregateOutputType> | number
          }
        }
      }
      RelatorioFinanceiro: {
        payload: Prisma.$RelatorioFinanceiroPayload<ExtArgs>
        fields: Prisma.RelatorioFinanceiroFieldRefs
        operations: {
          findUnique: {
            args: Prisma.RelatorioFinanceiroFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RelatorioFinanceiroPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.RelatorioFinanceiroFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RelatorioFinanceiroPayload>
          }
          findFirst: {
            args: Prisma.RelatorioFinanceiroFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RelatorioFinanceiroPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.RelatorioFinanceiroFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RelatorioFinanceiroPayload>
          }
          findMany: {
            args: Prisma.RelatorioFinanceiroFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RelatorioFinanceiroPayload>[]
          }
          create: {
            args: Prisma.RelatorioFinanceiroCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RelatorioFinanceiroPayload>
          }
          createMany: {
            args: Prisma.RelatorioFinanceiroCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.RelatorioFinanceiroCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RelatorioFinanceiroPayload>[]
          }
          delete: {
            args: Prisma.RelatorioFinanceiroDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RelatorioFinanceiroPayload>
          }
          update: {
            args: Prisma.RelatorioFinanceiroUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RelatorioFinanceiroPayload>
          }
          deleteMany: {
            args: Prisma.RelatorioFinanceiroDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.RelatorioFinanceiroUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.RelatorioFinanceiroUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RelatorioFinanceiroPayload>[]
          }
          upsert: {
            args: Prisma.RelatorioFinanceiroUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RelatorioFinanceiroPayload>
          }
          aggregate: {
            args: Prisma.RelatorioFinanceiroAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRelatorioFinanceiro>
          }
          groupBy: {
            args: Prisma.RelatorioFinanceiroGroupByArgs<ExtArgs>
            result: $Utils.Optional<RelatorioFinanceiroGroupByOutputType>[]
          }
          count: {
            args: Prisma.RelatorioFinanceiroCountArgs<ExtArgs>
            result: $Utils.Optional<RelatorioFinanceiroCountAggregateOutputType> | number
          }
        }
      }
      Notificacao: {
        payload: Prisma.$NotificacaoPayload<ExtArgs>
        fields: Prisma.NotificacaoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.NotificacaoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificacaoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.NotificacaoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificacaoPayload>
          }
          findFirst: {
            args: Prisma.NotificacaoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificacaoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.NotificacaoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificacaoPayload>
          }
          findMany: {
            args: Prisma.NotificacaoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificacaoPayload>[]
          }
          create: {
            args: Prisma.NotificacaoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificacaoPayload>
          }
          createMany: {
            args: Prisma.NotificacaoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.NotificacaoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificacaoPayload>[]
          }
          delete: {
            args: Prisma.NotificacaoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificacaoPayload>
          }
          update: {
            args: Prisma.NotificacaoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificacaoPayload>
          }
          deleteMany: {
            args: Prisma.NotificacaoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.NotificacaoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.NotificacaoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificacaoPayload>[]
          }
          upsert: {
            args: Prisma.NotificacaoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificacaoPayload>
          }
          aggregate: {
            args: Prisma.NotificacaoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateNotificacao>
          }
          groupBy: {
            args: Prisma.NotificacaoGroupByArgs<ExtArgs>
            result: $Utils.Optional<NotificacaoGroupByOutputType>[]
          }
          count: {
            args: Prisma.NotificacaoCountArgs<ExtArgs>
            result: $Utils.Optional<NotificacaoCountAggregateOutputType> | number
          }
        }
      }
      ConfiguracaoGlobal: {
        payload: Prisma.$ConfiguracaoGlobalPayload<ExtArgs>
        fields: Prisma.ConfiguracaoGlobalFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ConfiguracaoGlobalFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConfiguracaoGlobalPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ConfiguracaoGlobalFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConfiguracaoGlobalPayload>
          }
          findFirst: {
            args: Prisma.ConfiguracaoGlobalFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConfiguracaoGlobalPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ConfiguracaoGlobalFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConfiguracaoGlobalPayload>
          }
          findMany: {
            args: Prisma.ConfiguracaoGlobalFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConfiguracaoGlobalPayload>[]
          }
          create: {
            args: Prisma.ConfiguracaoGlobalCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConfiguracaoGlobalPayload>
          }
          createMany: {
            args: Prisma.ConfiguracaoGlobalCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ConfiguracaoGlobalCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConfiguracaoGlobalPayload>[]
          }
          delete: {
            args: Prisma.ConfiguracaoGlobalDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConfiguracaoGlobalPayload>
          }
          update: {
            args: Prisma.ConfiguracaoGlobalUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConfiguracaoGlobalPayload>
          }
          deleteMany: {
            args: Prisma.ConfiguracaoGlobalDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ConfiguracaoGlobalUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ConfiguracaoGlobalUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConfiguracaoGlobalPayload>[]
          }
          upsert: {
            args: Prisma.ConfiguracaoGlobalUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConfiguracaoGlobalPayload>
          }
          aggregate: {
            args: Prisma.ConfiguracaoGlobalAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateConfiguracaoGlobal>
          }
          groupBy: {
            args: Prisma.ConfiguracaoGlobalGroupByArgs<ExtArgs>
            result: $Utils.Optional<ConfiguracaoGlobalGroupByOutputType>[]
          }
          count: {
            args: Prisma.ConfiguracaoGlobalCountArgs<ExtArgs>
            result: $Utils.Optional<ConfiguracaoGlobalCountAggregateOutputType> | number
          }
        }
      }
      CartelaConcluida: {
        payload: Prisma.$CartelaConcluidaPayload<ExtArgs>
        fields: Prisma.CartelaConcluidaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CartelaConcluidaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CartelaConcluidaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CartelaConcluidaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CartelaConcluidaPayload>
          }
          findFirst: {
            args: Prisma.CartelaConcluidaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CartelaConcluidaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CartelaConcluidaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CartelaConcluidaPayload>
          }
          findMany: {
            args: Prisma.CartelaConcluidaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CartelaConcluidaPayload>[]
          }
          create: {
            args: Prisma.CartelaConcluidaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CartelaConcluidaPayload>
          }
          createMany: {
            args: Prisma.CartelaConcluidaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CartelaConcluidaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CartelaConcluidaPayload>[]
          }
          delete: {
            args: Prisma.CartelaConcluidaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CartelaConcluidaPayload>
          }
          update: {
            args: Prisma.CartelaConcluidaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CartelaConcluidaPayload>
          }
          deleteMany: {
            args: Prisma.CartelaConcluidaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CartelaConcluidaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.CartelaConcluidaUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CartelaConcluidaPayload>[]
          }
          upsert: {
            args: Prisma.CartelaConcluidaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CartelaConcluidaPayload>
          }
          aggregate: {
            args: Prisma.CartelaConcluidaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCartelaConcluida>
          }
          groupBy: {
            args: Prisma.CartelaConcluidaGroupByArgs<ExtArgs>
            result: $Utils.Optional<CartelaConcluidaGroupByOutputType>[]
          }
          count: {
            args: Prisma.CartelaConcluidaCountArgs<ExtArgs>
            result: $Utils.Optional<CartelaConcluidaCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Shorthand for `emit: 'stdout'`
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events only
     * log: [
     *   { emit: 'event', level: 'query' },
     *   { emit: 'event', level: 'info' },
     *   { emit: 'event', level: 'warn' }
     *   { emit: 'event', level: 'error' }
     * ]
     * 
     * / Emit as events and log to stdout
     * og: [
     *  { emit: 'stdout', level: 'query' },
     *  { emit: 'stdout', level: 'info' },
     *  { emit: 'stdout', level: 'warn' }
     *  { emit: 'stdout', level: 'error' }
     * 
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Instance of a Driver Adapter, e.g., like one provided by `@prisma/adapter-planetscale`
     */
    adapter?: runtime.SqlDriverAdapterFactory | null
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    optica?: OpticaOmit
    usuario?: UsuarioOmit
    campanha?: CampanhaOmit
    regraCartela?: RegraCartelaOmit
    requisitoCartela?: RequisitoCartelaOmit
    condicaoRequisito?: CondicaoRequisitoOmit
    envioVenda?: EnvioVendaOmit
    premio?: PremioOmit
    resgatePremio?: ResgatePremioOmit
    relatorioFinanceiro?: RelatorioFinanceiroOmit
    notificacao?: NotificacaoOmit
    configuracaoGlobal?: ConfiguracaoGlobalOmit
    cartelaConcluida?: CartelaConcluidaOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type CheckIsLogLevel<T> = T extends LogLevel ? T : never;

  export type GetLogType<T> = CheckIsLogLevel<
    T extends LogDefinition ? T['level'] : T
  >;

  export type GetEvents<T extends any[]> = T extends Array<LogLevel | LogDefinition>
    ? GetLogType<T[number]>
    : never;

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type OpticaCountOutputType
   */

  export type OpticaCountOutputType = {
    filiais: number
    usuarios: number
    campanhasAlvo: number
  }

  export type OpticaCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    filiais?: boolean | OpticaCountOutputTypeCountFiliaisArgs
    usuarios?: boolean | OpticaCountOutputTypeCountUsuariosArgs
    campanhasAlvo?: boolean | OpticaCountOutputTypeCountCampanhasAlvoArgs
  }

  // Custom InputTypes
  /**
   * OpticaCountOutputType without action
   */
  export type OpticaCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OpticaCountOutputType
     */
    select?: OpticaCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * OpticaCountOutputType without action
   */
  export type OpticaCountOutputTypeCountFiliaisArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OpticaWhereInput
  }

  /**
   * OpticaCountOutputType without action
   */
  export type OpticaCountOutputTypeCountUsuariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UsuarioWhereInput
  }

  /**
   * OpticaCountOutputType without action
   */
  export type OpticaCountOutputTypeCountCampanhasAlvoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CampanhaWhereInput
  }


  /**
   * Count Type UsuarioCountOutputType
   */

  export type UsuarioCountOutputType = {
    vendedores: number
    enviosVenda: number
    resgatesPremios: number
    relatoriosFinanceiros: number
    notificacoes: number
    cartelasConcluidas: number
  }

  export type UsuarioCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    vendedores?: boolean | UsuarioCountOutputTypeCountVendedoresArgs
    enviosVenda?: boolean | UsuarioCountOutputTypeCountEnviosVendaArgs
    resgatesPremios?: boolean | UsuarioCountOutputTypeCountResgatesPremiosArgs
    relatoriosFinanceiros?: boolean | UsuarioCountOutputTypeCountRelatoriosFinanceirosArgs
    notificacoes?: boolean | UsuarioCountOutputTypeCountNotificacoesArgs
    cartelasConcluidas?: boolean | UsuarioCountOutputTypeCountCartelasConcluidasArgs
  }

  // Custom InputTypes
  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuarioCountOutputType
     */
    select?: UsuarioCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountVendedoresArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UsuarioWhereInput
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountEnviosVendaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EnvioVendaWhereInput
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountResgatesPremiosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ResgatePremioWhereInput
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountRelatoriosFinanceirosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RelatorioFinanceiroWhereInput
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountNotificacoesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NotificacaoWhereInput
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountCartelasConcluidasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CartelaConcluidaWhereInput
  }


  /**
   * Count Type CampanhaCountOutputType
   */

  export type CampanhaCountOutputType = {
    oticasAlvo: number
    cartelas: number
    enviosVenda: number
    relatoriosFinanceiros: number
    cartelasConcluidas: number
  }

  export type CampanhaCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    oticasAlvo?: boolean | CampanhaCountOutputTypeCountOticasAlvoArgs
    cartelas?: boolean | CampanhaCountOutputTypeCountCartelasArgs
    enviosVenda?: boolean | CampanhaCountOutputTypeCountEnviosVendaArgs
    relatoriosFinanceiros?: boolean | CampanhaCountOutputTypeCountRelatoriosFinanceirosArgs
    cartelasConcluidas?: boolean | CampanhaCountOutputTypeCountCartelasConcluidasArgs
  }

  // Custom InputTypes
  /**
   * CampanhaCountOutputType without action
   */
  export type CampanhaCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CampanhaCountOutputType
     */
    select?: CampanhaCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CampanhaCountOutputType without action
   */
  export type CampanhaCountOutputTypeCountOticasAlvoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OpticaWhereInput
  }

  /**
   * CampanhaCountOutputType without action
   */
  export type CampanhaCountOutputTypeCountCartelasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RegraCartelaWhereInput
  }

  /**
   * CampanhaCountOutputType without action
   */
  export type CampanhaCountOutputTypeCountEnviosVendaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EnvioVendaWhereInput
  }

  /**
   * CampanhaCountOutputType without action
   */
  export type CampanhaCountOutputTypeCountRelatoriosFinanceirosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RelatorioFinanceiroWhereInput
  }

  /**
   * CampanhaCountOutputType without action
   */
  export type CampanhaCountOutputTypeCountCartelasConcluidasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CartelaConcluidaWhereInput
  }


  /**
   * Count Type RegraCartelaCountOutputType
   */

  export type RegraCartelaCountOutputType = {
    requisitos: number
  }

  export type RegraCartelaCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    requisitos?: boolean | RegraCartelaCountOutputTypeCountRequisitosArgs
  }

  // Custom InputTypes
  /**
   * RegraCartelaCountOutputType without action
   */
  export type RegraCartelaCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegraCartelaCountOutputType
     */
    select?: RegraCartelaCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * RegraCartelaCountOutputType without action
   */
  export type RegraCartelaCountOutputTypeCountRequisitosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RequisitoCartelaWhereInput
  }


  /**
   * Count Type RequisitoCartelaCountOutputType
   */

  export type RequisitoCartelaCountOutputType = {
    condicoes: number
    enviosVenda: number
  }

  export type RequisitoCartelaCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    condicoes?: boolean | RequisitoCartelaCountOutputTypeCountCondicoesArgs
    enviosVenda?: boolean | RequisitoCartelaCountOutputTypeCountEnviosVendaArgs
  }

  // Custom InputTypes
  /**
   * RequisitoCartelaCountOutputType without action
   */
  export type RequisitoCartelaCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RequisitoCartelaCountOutputType
     */
    select?: RequisitoCartelaCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * RequisitoCartelaCountOutputType without action
   */
  export type RequisitoCartelaCountOutputTypeCountCondicoesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CondicaoRequisitoWhereInput
  }

  /**
   * RequisitoCartelaCountOutputType without action
   */
  export type RequisitoCartelaCountOutputTypeCountEnviosVendaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EnvioVendaWhereInput
  }


  /**
   * Count Type PremioCountOutputType
   */

  export type PremioCountOutputType = {
    resgates: number
  }

  export type PremioCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    resgates?: boolean | PremioCountOutputTypeCountResgatesArgs
  }

  // Custom InputTypes
  /**
   * PremioCountOutputType without action
   */
  export type PremioCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PremioCountOutputType
     */
    select?: PremioCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * PremioCountOutputType without action
   */
  export type PremioCountOutputTypeCountResgatesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ResgatePremioWhereInput
  }


  /**
   * Models
   */

  /**
   * Model Optica
   */

  export type AggregateOptica = {
    _count: OpticaCountAggregateOutputType | null
    _min: OpticaMinAggregateOutputType | null
    _max: OpticaMaxAggregateOutputType | null
  }

  export type OpticaMinAggregateOutputType = {
    id: string | null
    cnpj: string | null
    nome: string | null
    endereco: string | null
    cidade: string | null
    estado: string | null
    telefone: string | null
    email: string | null
    ativa: boolean | null
    ehMatriz: boolean | null
    matrizId: string | null
    criadoEm: Date | null
    atualizadoEm: Date | null
  }

  export type OpticaMaxAggregateOutputType = {
    id: string | null
    cnpj: string | null
    nome: string | null
    endereco: string | null
    cidade: string | null
    estado: string | null
    telefone: string | null
    email: string | null
    ativa: boolean | null
    ehMatriz: boolean | null
    matrizId: string | null
    criadoEm: Date | null
    atualizadoEm: Date | null
  }

  export type OpticaCountAggregateOutputType = {
    id: number
    cnpj: number
    nome: number
    endereco: number
    cidade: number
    estado: number
    telefone: number
    email: number
    ativa: number
    ehMatriz: number
    matrizId: number
    criadoEm: number
    atualizadoEm: number
    _all: number
  }


  export type OpticaMinAggregateInputType = {
    id?: true
    cnpj?: true
    nome?: true
    endereco?: true
    cidade?: true
    estado?: true
    telefone?: true
    email?: true
    ativa?: true
    ehMatriz?: true
    matrizId?: true
    criadoEm?: true
    atualizadoEm?: true
  }

  export type OpticaMaxAggregateInputType = {
    id?: true
    cnpj?: true
    nome?: true
    endereco?: true
    cidade?: true
    estado?: true
    telefone?: true
    email?: true
    ativa?: true
    ehMatriz?: true
    matrizId?: true
    criadoEm?: true
    atualizadoEm?: true
  }

  export type OpticaCountAggregateInputType = {
    id?: true
    cnpj?: true
    nome?: true
    endereco?: true
    cidade?: true
    estado?: true
    telefone?: true
    email?: true
    ativa?: true
    ehMatriz?: true
    matrizId?: true
    criadoEm?: true
    atualizadoEm?: true
    _all?: true
  }

  export type OpticaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Optica to aggregate.
     */
    where?: OpticaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Opticas to fetch.
     */
    orderBy?: OpticaOrderByWithRelationInput | OpticaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: OpticaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Opticas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Opticas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Opticas
    **/
    _count?: true | OpticaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: OpticaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: OpticaMaxAggregateInputType
  }

  export type GetOpticaAggregateType<T extends OpticaAggregateArgs> = {
        [P in keyof T & keyof AggregateOptica]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOptica[P]>
      : GetScalarType<T[P], AggregateOptica[P]>
  }




  export type OpticaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OpticaWhereInput
    orderBy?: OpticaOrderByWithAggregationInput | OpticaOrderByWithAggregationInput[]
    by: OpticaScalarFieldEnum[] | OpticaScalarFieldEnum
    having?: OpticaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: OpticaCountAggregateInputType | true
    _min?: OpticaMinAggregateInputType
    _max?: OpticaMaxAggregateInputType
  }

  export type OpticaGroupByOutputType = {
    id: string
    cnpj: string
    nome: string
    endereco: string | null
    cidade: string | null
    estado: string | null
    telefone: string | null
    email: string | null
    ativa: boolean
    ehMatriz: boolean
    matrizId: string | null
    criadoEm: Date
    atualizadoEm: Date
    _count: OpticaCountAggregateOutputType | null
    _min: OpticaMinAggregateOutputType | null
    _max: OpticaMaxAggregateOutputType | null
  }

  type GetOpticaGroupByPayload<T extends OpticaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<OpticaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof OpticaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], OpticaGroupByOutputType[P]>
            : GetScalarType<T[P], OpticaGroupByOutputType[P]>
        }
      >
    >


  export type OpticaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    cnpj?: boolean
    nome?: boolean
    endereco?: boolean
    cidade?: boolean
    estado?: boolean
    telefone?: boolean
    email?: boolean
    ativa?: boolean
    ehMatriz?: boolean
    matrizId?: boolean
    criadoEm?: boolean
    atualizadoEm?: boolean
    matriz?: boolean | Optica$matrizArgs<ExtArgs>
    filiais?: boolean | Optica$filiaisArgs<ExtArgs>
    usuarios?: boolean | Optica$usuariosArgs<ExtArgs>
    campanhasAlvo?: boolean | Optica$campanhasAlvoArgs<ExtArgs>
    _count?: boolean | OpticaCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["optica"]>

  export type OpticaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    cnpj?: boolean
    nome?: boolean
    endereco?: boolean
    cidade?: boolean
    estado?: boolean
    telefone?: boolean
    email?: boolean
    ativa?: boolean
    ehMatriz?: boolean
    matrizId?: boolean
    criadoEm?: boolean
    atualizadoEm?: boolean
    matriz?: boolean | Optica$matrizArgs<ExtArgs>
  }, ExtArgs["result"]["optica"]>

  export type OpticaSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    cnpj?: boolean
    nome?: boolean
    endereco?: boolean
    cidade?: boolean
    estado?: boolean
    telefone?: boolean
    email?: boolean
    ativa?: boolean
    ehMatriz?: boolean
    matrizId?: boolean
    criadoEm?: boolean
    atualizadoEm?: boolean
    matriz?: boolean | Optica$matrizArgs<ExtArgs>
  }, ExtArgs["result"]["optica"]>

  export type OpticaSelectScalar = {
    id?: boolean
    cnpj?: boolean
    nome?: boolean
    endereco?: boolean
    cidade?: boolean
    estado?: boolean
    telefone?: boolean
    email?: boolean
    ativa?: boolean
    ehMatriz?: boolean
    matrizId?: boolean
    criadoEm?: boolean
    atualizadoEm?: boolean
  }

  export type OpticaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "cnpj" | "nome" | "endereco" | "cidade" | "estado" | "telefone" | "email" | "ativa" | "ehMatriz" | "matrizId" | "criadoEm" | "atualizadoEm", ExtArgs["result"]["optica"]>
  export type OpticaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    matriz?: boolean | Optica$matrizArgs<ExtArgs>
    filiais?: boolean | Optica$filiaisArgs<ExtArgs>
    usuarios?: boolean | Optica$usuariosArgs<ExtArgs>
    campanhasAlvo?: boolean | Optica$campanhasAlvoArgs<ExtArgs>
    _count?: boolean | OpticaCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type OpticaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    matriz?: boolean | Optica$matrizArgs<ExtArgs>
  }
  export type OpticaIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    matriz?: boolean | Optica$matrizArgs<ExtArgs>
  }

  export type $OpticaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Optica"
    objects: {
      /**
       * Referência à ótica Matriz (apenas para Filiais)
       */
      matriz: Prisma.$OpticaPayload<ExtArgs> | null
      /**
       * Lista de óticas Filiais (apenas para Matrizes)
       */
      filiais: Prisma.$OpticaPayload<ExtArgs>[]
      /**
       * Lista de usuários (Vendedores e Gerentes) vinculados a esta ótica
       */
      usuarios: Prisma.$UsuarioPayload<ExtArgs>[]
      /**
       * Campanhas nas quais esta ótica (ou seus vendedores) podem participar (Sprint 17)
       */
      campanhasAlvo: Prisma.$CampanhaPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      /**
       * ID único da ótica (UUID v4)
       */
      id: string
      /**
       * CNPJ da ótica (único, obrigatório para identificação fiscal)
       */
      cnpj: string
      /**
       * Nome fantasia ou razão social da ótica
       */
      nome: string
      /**
       * Endereço completo da ótica (opcional)
       */
      endereco: string | null
      /**
       * Cidade onde a ótica está localizada
       */
      cidade: string | null
      /**
       * Estado (UF) onde a ótica está localizada
       */
      estado: string | null
      /**
       * Telefone de contato da ótica
       */
      telefone: string | null
      /**
       * Email de contato da ótica
       */
      email: string | null
      /**
       * Indica se a ótica está ativa no sistema
       */
      ativa: boolean
      /**
       * Indica se esta ótica é uma Matriz (pode ter filiais vinculadas)
       */
      ehMatriz: boolean
      /**
       * ID da ótica Matriz (se esta ótica for uma Filial)
       */
      matrizId: string | null
      /**
       * Data de criação do registro
       */
      criadoEm: Date
      /**
       * Data da última atualização
       */
      atualizadoEm: Date
    }, ExtArgs["result"]["optica"]>
    composites: {}
  }

  type OpticaGetPayload<S extends boolean | null | undefined | OpticaDefaultArgs> = $Result.GetResult<Prisma.$OpticaPayload, S>

  type OpticaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<OpticaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: OpticaCountAggregateInputType | true
    }

  export interface OpticaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Optica'], meta: { name: 'Optica' } }
    /**
     * Find zero or one Optica that matches the filter.
     * @param {OpticaFindUniqueArgs} args - Arguments to find a Optica
     * @example
     * // Get one Optica
     * const optica = await prisma.optica.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends OpticaFindUniqueArgs>(args: SelectSubset<T, OpticaFindUniqueArgs<ExtArgs>>): Prisma__OpticaClient<$Result.GetResult<Prisma.$OpticaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Optica that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {OpticaFindUniqueOrThrowArgs} args - Arguments to find a Optica
     * @example
     * // Get one Optica
     * const optica = await prisma.optica.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends OpticaFindUniqueOrThrowArgs>(args: SelectSubset<T, OpticaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__OpticaClient<$Result.GetResult<Prisma.$OpticaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Optica that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OpticaFindFirstArgs} args - Arguments to find a Optica
     * @example
     * // Get one Optica
     * const optica = await prisma.optica.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends OpticaFindFirstArgs>(args?: SelectSubset<T, OpticaFindFirstArgs<ExtArgs>>): Prisma__OpticaClient<$Result.GetResult<Prisma.$OpticaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Optica that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OpticaFindFirstOrThrowArgs} args - Arguments to find a Optica
     * @example
     * // Get one Optica
     * const optica = await prisma.optica.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends OpticaFindFirstOrThrowArgs>(args?: SelectSubset<T, OpticaFindFirstOrThrowArgs<ExtArgs>>): Prisma__OpticaClient<$Result.GetResult<Prisma.$OpticaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Opticas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OpticaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Opticas
     * const opticas = await prisma.optica.findMany()
     * 
     * // Get first 10 Opticas
     * const opticas = await prisma.optica.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const opticaWithIdOnly = await prisma.optica.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends OpticaFindManyArgs>(args?: SelectSubset<T, OpticaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OpticaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Optica.
     * @param {OpticaCreateArgs} args - Arguments to create a Optica.
     * @example
     * // Create one Optica
     * const Optica = await prisma.optica.create({
     *   data: {
     *     // ... data to create a Optica
     *   }
     * })
     * 
     */
    create<T extends OpticaCreateArgs>(args: SelectSubset<T, OpticaCreateArgs<ExtArgs>>): Prisma__OpticaClient<$Result.GetResult<Prisma.$OpticaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Opticas.
     * @param {OpticaCreateManyArgs} args - Arguments to create many Opticas.
     * @example
     * // Create many Opticas
     * const optica = await prisma.optica.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends OpticaCreateManyArgs>(args?: SelectSubset<T, OpticaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Opticas and returns the data saved in the database.
     * @param {OpticaCreateManyAndReturnArgs} args - Arguments to create many Opticas.
     * @example
     * // Create many Opticas
     * const optica = await prisma.optica.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Opticas and only return the `id`
     * const opticaWithIdOnly = await prisma.optica.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends OpticaCreateManyAndReturnArgs>(args?: SelectSubset<T, OpticaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OpticaPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Optica.
     * @param {OpticaDeleteArgs} args - Arguments to delete one Optica.
     * @example
     * // Delete one Optica
     * const Optica = await prisma.optica.delete({
     *   where: {
     *     // ... filter to delete one Optica
     *   }
     * })
     * 
     */
    delete<T extends OpticaDeleteArgs>(args: SelectSubset<T, OpticaDeleteArgs<ExtArgs>>): Prisma__OpticaClient<$Result.GetResult<Prisma.$OpticaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Optica.
     * @param {OpticaUpdateArgs} args - Arguments to update one Optica.
     * @example
     * // Update one Optica
     * const optica = await prisma.optica.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends OpticaUpdateArgs>(args: SelectSubset<T, OpticaUpdateArgs<ExtArgs>>): Prisma__OpticaClient<$Result.GetResult<Prisma.$OpticaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Opticas.
     * @param {OpticaDeleteManyArgs} args - Arguments to filter Opticas to delete.
     * @example
     * // Delete a few Opticas
     * const { count } = await prisma.optica.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends OpticaDeleteManyArgs>(args?: SelectSubset<T, OpticaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Opticas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OpticaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Opticas
     * const optica = await prisma.optica.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends OpticaUpdateManyArgs>(args: SelectSubset<T, OpticaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Opticas and returns the data updated in the database.
     * @param {OpticaUpdateManyAndReturnArgs} args - Arguments to update many Opticas.
     * @example
     * // Update many Opticas
     * const optica = await prisma.optica.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Opticas and only return the `id`
     * const opticaWithIdOnly = await prisma.optica.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends OpticaUpdateManyAndReturnArgs>(args: SelectSubset<T, OpticaUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OpticaPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Optica.
     * @param {OpticaUpsertArgs} args - Arguments to update or create a Optica.
     * @example
     * // Update or create a Optica
     * const optica = await prisma.optica.upsert({
     *   create: {
     *     // ... data to create a Optica
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Optica we want to update
     *   }
     * })
     */
    upsert<T extends OpticaUpsertArgs>(args: SelectSubset<T, OpticaUpsertArgs<ExtArgs>>): Prisma__OpticaClient<$Result.GetResult<Prisma.$OpticaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Opticas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OpticaCountArgs} args - Arguments to filter Opticas to count.
     * @example
     * // Count the number of Opticas
     * const count = await prisma.optica.count({
     *   where: {
     *     // ... the filter for the Opticas we want to count
     *   }
     * })
    **/
    count<T extends OpticaCountArgs>(
      args?: Subset<T, OpticaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], OpticaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Optica.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OpticaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends OpticaAggregateArgs>(args: Subset<T, OpticaAggregateArgs>): Prisma.PrismaPromise<GetOpticaAggregateType<T>>

    /**
     * Group by Optica.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OpticaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends OpticaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: OpticaGroupByArgs['orderBy'] }
        : { orderBy?: OpticaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, OpticaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOpticaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Optica model
   */
  readonly fields: OpticaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Optica.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__OpticaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    matriz<T extends Optica$matrizArgs<ExtArgs> = {}>(args?: Subset<T, Optica$matrizArgs<ExtArgs>>): Prisma__OpticaClient<$Result.GetResult<Prisma.$OpticaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    filiais<T extends Optica$filiaisArgs<ExtArgs> = {}>(args?: Subset<T, Optica$filiaisArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OpticaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    usuarios<T extends Optica$usuariosArgs<ExtArgs> = {}>(args?: Subset<T, Optica$usuariosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    campanhasAlvo<T extends Optica$campanhasAlvoArgs<ExtArgs> = {}>(args?: Subset<T, Optica$campanhasAlvoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CampanhaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Optica model
   */
  interface OpticaFieldRefs {
    readonly id: FieldRef<"Optica", 'String'>
    readonly cnpj: FieldRef<"Optica", 'String'>
    readonly nome: FieldRef<"Optica", 'String'>
    readonly endereco: FieldRef<"Optica", 'String'>
    readonly cidade: FieldRef<"Optica", 'String'>
    readonly estado: FieldRef<"Optica", 'String'>
    readonly telefone: FieldRef<"Optica", 'String'>
    readonly email: FieldRef<"Optica", 'String'>
    readonly ativa: FieldRef<"Optica", 'Boolean'>
    readonly ehMatriz: FieldRef<"Optica", 'Boolean'>
    readonly matrizId: FieldRef<"Optica", 'String'>
    readonly criadoEm: FieldRef<"Optica", 'DateTime'>
    readonly atualizadoEm: FieldRef<"Optica", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Optica findUnique
   */
  export type OpticaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Optica
     */
    select?: OpticaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Optica
     */
    omit?: OpticaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OpticaInclude<ExtArgs> | null
    /**
     * Filter, which Optica to fetch.
     */
    where: OpticaWhereUniqueInput
  }

  /**
   * Optica findUniqueOrThrow
   */
  export type OpticaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Optica
     */
    select?: OpticaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Optica
     */
    omit?: OpticaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OpticaInclude<ExtArgs> | null
    /**
     * Filter, which Optica to fetch.
     */
    where: OpticaWhereUniqueInput
  }

  /**
   * Optica findFirst
   */
  export type OpticaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Optica
     */
    select?: OpticaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Optica
     */
    omit?: OpticaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OpticaInclude<ExtArgs> | null
    /**
     * Filter, which Optica to fetch.
     */
    where?: OpticaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Opticas to fetch.
     */
    orderBy?: OpticaOrderByWithRelationInput | OpticaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Opticas.
     */
    cursor?: OpticaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Opticas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Opticas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Opticas.
     */
    distinct?: OpticaScalarFieldEnum | OpticaScalarFieldEnum[]
  }

  /**
   * Optica findFirstOrThrow
   */
  export type OpticaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Optica
     */
    select?: OpticaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Optica
     */
    omit?: OpticaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OpticaInclude<ExtArgs> | null
    /**
     * Filter, which Optica to fetch.
     */
    where?: OpticaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Opticas to fetch.
     */
    orderBy?: OpticaOrderByWithRelationInput | OpticaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Opticas.
     */
    cursor?: OpticaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Opticas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Opticas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Opticas.
     */
    distinct?: OpticaScalarFieldEnum | OpticaScalarFieldEnum[]
  }

  /**
   * Optica findMany
   */
  export type OpticaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Optica
     */
    select?: OpticaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Optica
     */
    omit?: OpticaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OpticaInclude<ExtArgs> | null
    /**
     * Filter, which Opticas to fetch.
     */
    where?: OpticaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Opticas to fetch.
     */
    orderBy?: OpticaOrderByWithRelationInput | OpticaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Opticas.
     */
    cursor?: OpticaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Opticas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Opticas.
     */
    skip?: number
    distinct?: OpticaScalarFieldEnum | OpticaScalarFieldEnum[]
  }

  /**
   * Optica create
   */
  export type OpticaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Optica
     */
    select?: OpticaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Optica
     */
    omit?: OpticaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OpticaInclude<ExtArgs> | null
    /**
     * The data needed to create a Optica.
     */
    data: XOR<OpticaCreateInput, OpticaUncheckedCreateInput>
  }

  /**
   * Optica createMany
   */
  export type OpticaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Opticas.
     */
    data: OpticaCreateManyInput | OpticaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Optica createManyAndReturn
   */
  export type OpticaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Optica
     */
    select?: OpticaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Optica
     */
    omit?: OpticaOmit<ExtArgs> | null
    /**
     * The data used to create many Opticas.
     */
    data: OpticaCreateManyInput | OpticaCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OpticaIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Optica update
   */
  export type OpticaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Optica
     */
    select?: OpticaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Optica
     */
    omit?: OpticaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OpticaInclude<ExtArgs> | null
    /**
     * The data needed to update a Optica.
     */
    data: XOR<OpticaUpdateInput, OpticaUncheckedUpdateInput>
    /**
     * Choose, which Optica to update.
     */
    where: OpticaWhereUniqueInput
  }

  /**
   * Optica updateMany
   */
  export type OpticaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Opticas.
     */
    data: XOR<OpticaUpdateManyMutationInput, OpticaUncheckedUpdateManyInput>
    /**
     * Filter which Opticas to update
     */
    where?: OpticaWhereInput
    /**
     * Limit how many Opticas to update.
     */
    limit?: number
  }

  /**
   * Optica updateManyAndReturn
   */
  export type OpticaUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Optica
     */
    select?: OpticaSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Optica
     */
    omit?: OpticaOmit<ExtArgs> | null
    /**
     * The data used to update Opticas.
     */
    data: XOR<OpticaUpdateManyMutationInput, OpticaUncheckedUpdateManyInput>
    /**
     * Filter which Opticas to update
     */
    where?: OpticaWhereInput
    /**
     * Limit how many Opticas to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OpticaIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Optica upsert
   */
  export type OpticaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Optica
     */
    select?: OpticaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Optica
     */
    omit?: OpticaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OpticaInclude<ExtArgs> | null
    /**
     * The filter to search for the Optica to update in case it exists.
     */
    where: OpticaWhereUniqueInput
    /**
     * In case the Optica found by the `where` argument doesn't exist, create a new Optica with this data.
     */
    create: XOR<OpticaCreateInput, OpticaUncheckedCreateInput>
    /**
     * In case the Optica was found with the provided `where` argument, update it with this data.
     */
    update: XOR<OpticaUpdateInput, OpticaUncheckedUpdateInput>
  }

  /**
   * Optica delete
   */
  export type OpticaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Optica
     */
    select?: OpticaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Optica
     */
    omit?: OpticaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OpticaInclude<ExtArgs> | null
    /**
     * Filter which Optica to delete.
     */
    where: OpticaWhereUniqueInput
  }

  /**
   * Optica deleteMany
   */
  export type OpticaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Opticas to delete
     */
    where?: OpticaWhereInput
    /**
     * Limit how many Opticas to delete.
     */
    limit?: number
  }

  /**
   * Optica.matriz
   */
  export type Optica$matrizArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Optica
     */
    select?: OpticaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Optica
     */
    omit?: OpticaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OpticaInclude<ExtArgs> | null
    where?: OpticaWhereInput
  }

  /**
   * Optica.filiais
   */
  export type Optica$filiaisArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Optica
     */
    select?: OpticaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Optica
     */
    omit?: OpticaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OpticaInclude<ExtArgs> | null
    where?: OpticaWhereInput
    orderBy?: OpticaOrderByWithRelationInput | OpticaOrderByWithRelationInput[]
    cursor?: OpticaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OpticaScalarFieldEnum | OpticaScalarFieldEnum[]
  }

  /**
   * Optica.usuarios
   */
  export type Optica$usuariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    where?: UsuarioWhereInput
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    cursor?: UsuarioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * Optica.campanhasAlvo
   */
  export type Optica$campanhasAlvoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Campanha
     */
    select?: CampanhaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Campanha
     */
    omit?: CampanhaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CampanhaInclude<ExtArgs> | null
    where?: CampanhaWhereInput
    orderBy?: CampanhaOrderByWithRelationInput | CampanhaOrderByWithRelationInput[]
    cursor?: CampanhaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CampanhaScalarFieldEnum | CampanhaScalarFieldEnum[]
  }

  /**
   * Optica without action
   */
  export type OpticaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Optica
     */
    select?: OpticaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Optica
     */
    omit?: OpticaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OpticaInclude<ExtArgs> | null
  }


  /**
   * Model Usuario
   */

  export type AggregateUsuario = {
    _count: UsuarioCountAggregateOutputType | null
    _avg: UsuarioAvgAggregateOutputType | null
    _sum: UsuarioSumAggregateOutputType | null
    _min: UsuarioMinAggregateOutputType | null
    _max: UsuarioMaxAggregateOutputType | null
  }

  export type UsuarioAvgAggregateOutputType = {
    saldoMoedinhas: number | null
    rankingMoedinhas: number | null
  }

  export type UsuarioSumAggregateOutputType = {
    saldoMoedinhas: number | null
    rankingMoedinhas: number | null
  }

  export type UsuarioMinAggregateOutputType = {
    id: string | null
    email: string | null
    cpf: string | null
    nome: string | null
    whatsapp: string | null
    senhaHash: string | null
    avatarUrl: string | null
    papel: $Enums.PapelUsuario | null
    status: $Enums.StatusUsuario | null
    saldoMoedinhas: number | null
    rankingMoedinhas: number | null
    nivel: $Enums.NivelVendedor | null
    tokenResetarSenha: string | null
    tokenResetarSenhaExpira: Date | null
    opticaId: string | null
    gerenteId: string | null
    criadoEm: Date | null
    atualizadoEm: Date | null
  }

  export type UsuarioMaxAggregateOutputType = {
    id: string | null
    email: string | null
    cpf: string | null
    nome: string | null
    whatsapp: string | null
    senhaHash: string | null
    avatarUrl: string | null
    papel: $Enums.PapelUsuario | null
    status: $Enums.StatusUsuario | null
    saldoMoedinhas: number | null
    rankingMoedinhas: number | null
    nivel: $Enums.NivelVendedor | null
    tokenResetarSenha: string | null
    tokenResetarSenhaExpira: Date | null
    opticaId: string | null
    gerenteId: string | null
    criadoEm: Date | null
    atualizadoEm: Date | null
  }

  export type UsuarioCountAggregateOutputType = {
    id: number
    email: number
    cpf: number
    nome: number
    whatsapp: number
    senhaHash: number
    avatarUrl: number
    papel: number
    status: number
    saldoMoedinhas: number
    rankingMoedinhas: number
    nivel: number
    tokenResetarSenha: number
    tokenResetarSenhaExpira: number
    mapeamentoPlanilhaSalvo: number
    opticaId: number
    gerenteId: number
    criadoEm: number
    atualizadoEm: number
    _all: number
  }


  export type UsuarioAvgAggregateInputType = {
    saldoMoedinhas?: true
    rankingMoedinhas?: true
  }

  export type UsuarioSumAggregateInputType = {
    saldoMoedinhas?: true
    rankingMoedinhas?: true
  }

  export type UsuarioMinAggregateInputType = {
    id?: true
    email?: true
    cpf?: true
    nome?: true
    whatsapp?: true
    senhaHash?: true
    avatarUrl?: true
    papel?: true
    status?: true
    saldoMoedinhas?: true
    rankingMoedinhas?: true
    nivel?: true
    tokenResetarSenha?: true
    tokenResetarSenhaExpira?: true
    opticaId?: true
    gerenteId?: true
    criadoEm?: true
    atualizadoEm?: true
  }

  export type UsuarioMaxAggregateInputType = {
    id?: true
    email?: true
    cpf?: true
    nome?: true
    whatsapp?: true
    senhaHash?: true
    avatarUrl?: true
    papel?: true
    status?: true
    saldoMoedinhas?: true
    rankingMoedinhas?: true
    nivel?: true
    tokenResetarSenha?: true
    tokenResetarSenhaExpira?: true
    opticaId?: true
    gerenteId?: true
    criadoEm?: true
    atualizadoEm?: true
  }

  export type UsuarioCountAggregateInputType = {
    id?: true
    email?: true
    cpf?: true
    nome?: true
    whatsapp?: true
    senhaHash?: true
    avatarUrl?: true
    papel?: true
    status?: true
    saldoMoedinhas?: true
    rankingMoedinhas?: true
    nivel?: true
    tokenResetarSenha?: true
    tokenResetarSenhaExpira?: true
    mapeamentoPlanilhaSalvo?: true
    opticaId?: true
    gerenteId?: true
    criadoEm?: true
    atualizadoEm?: true
    _all?: true
  }

  export type UsuarioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Usuario to aggregate.
     */
    where?: UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Usuarios
    **/
    _count?: true | UsuarioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UsuarioAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UsuarioSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UsuarioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UsuarioMaxAggregateInputType
  }

  export type GetUsuarioAggregateType<T extends UsuarioAggregateArgs> = {
        [P in keyof T & keyof AggregateUsuario]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUsuario[P]>
      : GetScalarType<T[P], AggregateUsuario[P]>
  }




  export type UsuarioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UsuarioWhereInput
    orderBy?: UsuarioOrderByWithAggregationInput | UsuarioOrderByWithAggregationInput[]
    by: UsuarioScalarFieldEnum[] | UsuarioScalarFieldEnum
    having?: UsuarioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UsuarioCountAggregateInputType | true
    _avg?: UsuarioAvgAggregateInputType
    _sum?: UsuarioSumAggregateInputType
    _min?: UsuarioMinAggregateInputType
    _max?: UsuarioMaxAggregateInputType
  }

  export type UsuarioGroupByOutputType = {
    id: string
    email: string
    cpf: string | null
    nome: string
    whatsapp: string | null
    senhaHash: string
    avatarUrl: string | null
    papel: $Enums.PapelUsuario
    status: $Enums.StatusUsuario
    saldoMoedinhas: number
    rankingMoedinhas: number
    nivel: $Enums.NivelVendedor
    tokenResetarSenha: string | null
    tokenResetarSenhaExpira: Date | null
    mapeamentoPlanilhaSalvo: JsonValue | null
    opticaId: string | null
    gerenteId: string | null
    criadoEm: Date
    atualizadoEm: Date
    _count: UsuarioCountAggregateOutputType | null
    _avg: UsuarioAvgAggregateOutputType | null
    _sum: UsuarioSumAggregateOutputType | null
    _min: UsuarioMinAggregateOutputType | null
    _max: UsuarioMaxAggregateOutputType | null
  }

  type GetUsuarioGroupByPayload<T extends UsuarioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UsuarioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UsuarioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UsuarioGroupByOutputType[P]>
            : GetScalarType<T[P], UsuarioGroupByOutputType[P]>
        }
      >
    >


  export type UsuarioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    cpf?: boolean
    nome?: boolean
    whatsapp?: boolean
    senhaHash?: boolean
    avatarUrl?: boolean
    papel?: boolean
    status?: boolean
    saldoMoedinhas?: boolean
    rankingMoedinhas?: boolean
    nivel?: boolean
    tokenResetarSenha?: boolean
    tokenResetarSenhaExpira?: boolean
    mapeamentoPlanilhaSalvo?: boolean
    opticaId?: boolean
    gerenteId?: boolean
    criadoEm?: boolean
    atualizadoEm?: boolean
    optica?: boolean | Usuario$opticaArgs<ExtArgs>
    gerente?: boolean | Usuario$gerenteArgs<ExtArgs>
    vendedores?: boolean | Usuario$vendedoresArgs<ExtArgs>
    enviosVenda?: boolean | Usuario$enviosVendaArgs<ExtArgs>
    resgatesPremios?: boolean | Usuario$resgatesPremiosArgs<ExtArgs>
    relatoriosFinanceiros?: boolean | Usuario$relatoriosFinanceirosArgs<ExtArgs>
    notificacoes?: boolean | Usuario$notificacoesArgs<ExtArgs>
    cartelasConcluidas?: boolean | Usuario$cartelasConcluidasArgs<ExtArgs>
    _count?: boolean | UsuarioCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["usuario"]>

  export type UsuarioSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    cpf?: boolean
    nome?: boolean
    whatsapp?: boolean
    senhaHash?: boolean
    avatarUrl?: boolean
    papel?: boolean
    status?: boolean
    saldoMoedinhas?: boolean
    rankingMoedinhas?: boolean
    nivel?: boolean
    tokenResetarSenha?: boolean
    tokenResetarSenhaExpira?: boolean
    mapeamentoPlanilhaSalvo?: boolean
    opticaId?: boolean
    gerenteId?: boolean
    criadoEm?: boolean
    atualizadoEm?: boolean
    optica?: boolean | Usuario$opticaArgs<ExtArgs>
    gerente?: boolean | Usuario$gerenteArgs<ExtArgs>
  }, ExtArgs["result"]["usuario"]>

  export type UsuarioSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    cpf?: boolean
    nome?: boolean
    whatsapp?: boolean
    senhaHash?: boolean
    avatarUrl?: boolean
    papel?: boolean
    status?: boolean
    saldoMoedinhas?: boolean
    rankingMoedinhas?: boolean
    nivel?: boolean
    tokenResetarSenha?: boolean
    tokenResetarSenhaExpira?: boolean
    mapeamentoPlanilhaSalvo?: boolean
    opticaId?: boolean
    gerenteId?: boolean
    criadoEm?: boolean
    atualizadoEm?: boolean
    optica?: boolean | Usuario$opticaArgs<ExtArgs>
    gerente?: boolean | Usuario$gerenteArgs<ExtArgs>
  }, ExtArgs["result"]["usuario"]>

  export type UsuarioSelectScalar = {
    id?: boolean
    email?: boolean
    cpf?: boolean
    nome?: boolean
    whatsapp?: boolean
    senhaHash?: boolean
    avatarUrl?: boolean
    papel?: boolean
    status?: boolean
    saldoMoedinhas?: boolean
    rankingMoedinhas?: boolean
    nivel?: boolean
    tokenResetarSenha?: boolean
    tokenResetarSenhaExpira?: boolean
    mapeamentoPlanilhaSalvo?: boolean
    opticaId?: boolean
    gerenteId?: boolean
    criadoEm?: boolean
    atualizadoEm?: boolean
  }

  export type UsuarioOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "email" | "cpf" | "nome" | "whatsapp" | "senhaHash" | "avatarUrl" | "papel" | "status" | "saldoMoedinhas" | "rankingMoedinhas" | "nivel" | "tokenResetarSenha" | "tokenResetarSenhaExpira" | "mapeamentoPlanilhaSalvo" | "opticaId" | "gerenteId" | "criadoEm" | "atualizadoEm", ExtArgs["result"]["usuario"]>
  export type UsuarioInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    optica?: boolean | Usuario$opticaArgs<ExtArgs>
    gerente?: boolean | Usuario$gerenteArgs<ExtArgs>
    vendedores?: boolean | Usuario$vendedoresArgs<ExtArgs>
    enviosVenda?: boolean | Usuario$enviosVendaArgs<ExtArgs>
    resgatesPremios?: boolean | Usuario$resgatesPremiosArgs<ExtArgs>
    relatoriosFinanceiros?: boolean | Usuario$relatoriosFinanceirosArgs<ExtArgs>
    notificacoes?: boolean | Usuario$notificacoesArgs<ExtArgs>
    cartelasConcluidas?: boolean | Usuario$cartelasConcluidasArgs<ExtArgs>
    _count?: boolean | UsuarioCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type UsuarioIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    optica?: boolean | Usuario$opticaArgs<ExtArgs>
    gerente?: boolean | Usuario$gerenteArgs<ExtArgs>
  }
  export type UsuarioIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    optica?: boolean | Usuario$opticaArgs<ExtArgs>
    gerente?: boolean | Usuario$gerenteArgs<ExtArgs>
  }

  export type $UsuarioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Usuario"
    objects: {
      /**
       * Referência à Ótica parceira
       */
      optica: Prisma.$OpticaPayload<ExtArgs> | null
      /**
       * Referência ao Gerente (se este usuário for VENDEDOR)
       */
      gerente: Prisma.$UsuarioPayload<ExtArgs> | null
      /**
       * Lista de Vendedores gerenciados (se este usuário for GERENTE)
       */
      vendedores: Prisma.$UsuarioPayload<ExtArgs>[]
      /**
       * Envios de venda submetidos pelo vendedor
       */
      enviosVenda: Prisma.$EnvioVendaPayload<ExtArgs>[]
      /**
       * Histórico de resgates de prêmios
       */
      resgatesPremios: Prisma.$ResgatePremioPayload<ExtArgs>[]
      /**
       * Relatórios financeiros relacionados (pagamentos)
       */
      relatoriosFinanceiros: Prisma.$RelatorioFinanceiroPayload<ExtArgs>[]
      /**
       * Notificações recebidas (feed de atividades)
       */
      notificacoes: Prisma.$NotificacaoPayload<ExtArgs>[]
      /**
       * Ledger de cartelas concluídas (livro-razão)
       */
      cartelasConcluidas: Prisma.$CartelaConcluidaPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      /**
       * ID único do usuário (UUID v4)
       */
      id: string
      /**
       * Email único para login
       */
      email: string
      /**
       * CPF único (opcional, pode ser necessário para pagamentos)
       */
      cpf: string | null
      /**
       * Nome completo do usuário
       */
      nome: string
      whatsapp: string | null
      /**
       * Hash da senha (bcrypt, argon2, etc.) - NUNCA armazene senha em texto puro
       */
      senhaHash: string
      /**
       * URL do avatar (opcional, para perfil)
       */
      avatarUrl: string | null
      /**
       * Papel do usuário no sistema (ADMIN, GERENTE, VENDEDOR)
       */
      papel: $Enums.PapelUsuario
      /**
       * Status do usuário no fluxo de aprovação (PENDENTE, ATIVO, BLOQUEADO)
       */
      status: $Enums.StatusUsuario
      /**
       * Saldo de Moedinhas EPS (moeda virtual interna) disponível para resgate de prêmios.
       * SUBTRAI ao resgatar prêmios. NÃO afeta o ranking.
       */
      saldoMoedinhas: number
      /**
       * Total de Moedinhas EPS acumuladas ao longo do tempo (base do ranking).
       * NUNCA subtrai, sempre cresce. Define posição no ranking global.
       */
      rankingMoedinhas: number
      /**
       * Nível de gamificação atual (atualizado baseado em rankingMoedinhas)
       */
      nivel: $Enums.NivelVendedor
      /**
       * Hash do token de reset de senha (SHA-256)
       */
      tokenResetarSenha: string | null
      /**
       * Data/hora de expiração do token de reset
       */
      tokenResetarSenhaExpira: Date | null
      /**
       * Armazena as preferências de mapeamento de colunas da planilha salvas pelo Admin.
       * Estrutura JSON esperada:
       * {
       * "Coluna A": "NOME_PRODUTO",
       * "Coluna B": "CODIGO_PRODUTO",
       * "Coluna C": "VALOR_VENDA",
       * "Coluna D": "NUMERO_PEDIDO"
       * }
       */
      mapeamentoPlanilhaSalvo: Prisma.JsonValue | null
      /**
       * ID da ótica à qual este usuário pertence (apenas para GERENTE e VENDEDOR)
       */
      opticaId: string | null
      /**
       * ID do gerente responsável (apenas para VENDEDOR)
       */
      gerenteId: string | null
      /**
       * Data de criação do registro
       */
      criadoEm: Date
      /**
       * Data da última atualização
       */
      atualizadoEm: Date
    }, ExtArgs["result"]["usuario"]>
    composites: {}
  }

  type UsuarioGetPayload<S extends boolean | null | undefined | UsuarioDefaultArgs> = $Result.GetResult<Prisma.$UsuarioPayload, S>

  type UsuarioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UsuarioFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UsuarioCountAggregateInputType | true
    }

  export interface UsuarioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Usuario'], meta: { name: 'Usuario' } }
    /**
     * Find zero or one Usuario that matches the filter.
     * @param {UsuarioFindUniqueArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UsuarioFindUniqueArgs>(args: SelectSubset<T, UsuarioFindUniqueArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Usuario that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UsuarioFindUniqueOrThrowArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UsuarioFindUniqueOrThrowArgs>(args: SelectSubset<T, UsuarioFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Usuario that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioFindFirstArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UsuarioFindFirstArgs>(args?: SelectSubset<T, UsuarioFindFirstArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Usuario that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioFindFirstOrThrowArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UsuarioFindFirstOrThrowArgs>(args?: SelectSubset<T, UsuarioFindFirstOrThrowArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Usuarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Usuarios
     * const usuarios = await prisma.usuario.findMany()
     * 
     * // Get first 10 Usuarios
     * const usuarios = await prisma.usuario.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const usuarioWithIdOnly = await prisma.usuario.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UsuarioFindManyArgs>(args?: SelectSubset<T, UsuarioFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Usuario.
     * @param {UsuarioCreateArgs} args - Arguments to create a Usuario.
     * @example
     * // Create one Usuario
     * const Usuario = await prisma.usuario.create({
     *   data: {
     *     // ... data to create a Usuario
     *   }
     * })
     * 
     */
    create<T extends UsuarioCreateArgs>(args: SelectSubset<T, UsuarioCreateArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Usuarios.
     * @param {UsuarioCreateManyArgs} args - Arguments to create many Usuarios.
     * @example
     * // Create many Usuarios
     * const usuario = await prisma.usuario.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UsuarioCreateManyArgs>(args?: SelectSubset<T, UsuarioCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Usuarios and returns the data saved in the database.
     * @param {UsuarioCreateManyAndReturnArgs} args - Arguments to create many Usuarios.
     * @example
     * // Create many Usuarios
     * const usuario = await prisma.usuario.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Usuarios and only return the `id`
     * const usuarioWithIdOnly = await prisma.usuario.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UsuarioCreateManyAndReturnArgs>(args?: SelectSubset<T, UsuarioCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Usuario.
     * @param {UsuarioDeleteArgs} args - Arguments to delete one Usuario.
     * @example
     * // Delete one Usuario
     * const Usuario = await prisma.usuario.delete({
     *   where: {
     *     // ... filter to delete one Usuario
     *   }
     * })
     * 
     */
    delete<T extends UsuarioDeleteArgs>(args: SelectSubset<T, UsuarioDeleteArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Usuario.
     * @param {UsuarioUpdateArgs} args - Arguments to update one Usuario.
     * @example
     * // Update one Usuario
     * const usuario = await prisma.usuario.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UsuarioUpdateArgs>(args: SelectSubset<T, UsuarioUpdateArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Usuarios.
     * @param {UsuarioDeleteManyArgs} args - Arguments to filter Usuarios to delete.
     * @example
     * // Delete a few Usuarios
     * const { count } = await prisma.usuario.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UsuarioDeleteManyArgs>(args?: SelectSubset<T, UsuarioDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Usuarios
     * const usuario = await prisma.usuario.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UsuarioUpdateManyArgs>(args: SelectSubset<T, UsuarioUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Usuarios and returns the data updated in the database.
     * @param {UsuarioUpdateManyAndReturnArgs} args - Arguments to update many Usuarios.
     * @example
     * // Update many Usuarios
     * const usuario = await prisma.usuario.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Usuarios and only return the `id`
     * const usuarioWithIdOnly = await prisma.usuario.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends UsuarioUpdateManyAndReturnArgs>(args: SelectSubset<T, UsuarioUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Usuario.
     * @param {UsuarioUpsertArgs} args - Arguments to update or create a Usuario.
     * @example
     * // Update or create a Usuario
     * const usuario = await prisma.usuario.upsert({
     *   create: {
     *     // ... data to create a Usuario
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Usuario we want to update
     *   }
     * })
     */
    upsert<T extends UsuarioUpsertArgs>(args: SelectSubset<T, UsuarioUpsertArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioCountArgs} args - Arguments to filter Usuarios to count.
     * @example
     * // Count the number of Usuarios
     * const count = await prisma.usuario.count({
     *   where: {
     *     // ... the filter for the Usuarios we want to count
     *   }
     * })
    **/
    count<T extends UsuarioCountArgs>(
      args?: Subset<T, UsuarioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UsuarioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Usuario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UsuarioAggregateArgs>(args: Subset<T, UsuarioAggregateArgs>): Prisma.PrismaPromise<GetUsuarioAggregateType<T>>

    /**
     * Group by Usuario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UsuarioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UsuarioGroupByArgs['orderBy'] }
        : { orderBy?: UsuarioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UsuarioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUsuarioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Usuario model
   */
  readonly fields: UsuarioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Usuario.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UsuarioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    optica<T extends Usuario$opticaArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$opticaArgs<ExtArgs>>): Prisma__OpticaClient<$Result.GetResult<Prisma.$OpticaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    gerente<T extends Usuario$gerenteArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$gerenteArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    vendedores<T extends Usuario$vendedoresArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$vendedoresArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    enviosVenda<T extends Usuario$enviosVendaArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$enviosVendaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EnvioVendaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    resgatesPremios<T extends Usuario$resgatesPremiosArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$resgatesPremiosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ResgatePremioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    relatoriosFinanceiros<T extends Usuario$relatoriosFinanceirosArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$relatoriosFinanceirosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RelatorioFinanceiroPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    notificacoes<T extends Usuario$notificacoesArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$notificacoesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotificacaoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    cartelasConcluidas<T extends Usuario$cartelasConcluidasArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$cartelasConcluidasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CartelaConcluidaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Usuario model
   */
  interface UsuarioFieldRefs {
    readonly id: FieldRef<"Usuario", 'String'>
    readonly email: FieldRef<"Usuario", 'String'>
    readonly cpf: FieldRef<"Usuario", 'String'>
    readonly nome: FieldRef<"Usuario", 'String'>
    readonly whatsapp: FieldRef<"Usuario", 'String'>
    readonly senhaHash: FieldRef<"Usuario", 'String'>
    readonly avatarUrl: FieldRef<"Usuario", 'String'>
    readonly papel: FieldRef<"Usuario", 'PapelUsuario'>
    readonly status: FieldRef<"Usuario", 'StatusUsuario'>
    readonly saldoMoedinhas: FieldRef<"Usuario", 'Int'>
    readonly rankingMoedinhas: FieldRef<"Usuario", 'Int'>
    readonly nivel: FieldRef<"Usuario", 'NivelVendedor'>
    readonly tokenResetarSenha: FieldRef<"Usuario", 'String'>
    readonly tokenResetarSenhaExpira: FieldRef<"Usuario", 'DateTime'>
    readonly mapeamentoPlanilhaSalvo: FieldRef<"Usuario", 'Json'>
    readonly opticaId: FieldRef<"Usuario", 'String'>
    readonly gerenteId: FieldRef<"Usuario", 'String'>
    readonly criadoEm: FieldRef<"Usuario", 'DateTime'>
    readonly atualizadoEm: FieldRef<"Usuario", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Usuario findUnique
   */
  export type UsuarioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuario to fetch.
     */
    where: UsuarioWhereUniqueInput
  }

  /**
   * Usuario findUniqueOrThrow
   */
  export type UsuarioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuario to fetch.
     */
    where: UsuarioWhereUniqueInput
  }

  /**
   * Usuario findFirst
   */
  export type UsuarioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuario to fetch.
     */
    where?: UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Usuarios.
     */
    cursor?: UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Usuarios.
     */
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * Usuario findFirstOrThrow
   */
  export type UsuarioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuario to fetch.
     */
    where?: UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Usuarios.
     */
    cursor?: UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Usuarios.
     */
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * Usuario findMany
   */
  export type UsuarioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuarios to fetch.
     */
    where?: UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Usuarios.
     */
    cursor?: UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * Usuario create
   */
  export type UsuarioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * The data needed to create a Usuario.
     */
    data: XOR<UsuarioCreateInput, UsuarioUncheckedCreateInput>
  }

  /**
   * Usuario createMany
   */
  export type UsuarioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Usuarios.
     */
    data: UsuarioCreateManyInput | UsuarioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Usuario createManyAndReturn
   */
  export type UsuarioCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * The data used to create many Usuarios.
     */
    data: UsuarioCreateManyInput | UsuarioCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Usuario update
   */
  export type UsuarioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * The data needed to update a Usuario.
     */
    data: XOR<UsuarioUpdateInput, UsuarioUncheckedUpdateInput>
    /**
     * Choose, which Usuario to update.
     */
    where: UsuarioWhereUniqueInput
  }

  /**
   * Usuario updateMany
   */
  export type UsuarioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Usuarios.
     */
    data: XOR<UsuarioUpdateManyMutationInput, UsuarioUncheckedUpdateManyInput>
    /**
     * Filter which Usuarios to update
     */
    where?: UsuarioWhereInput
    /**
     * Limit how many Usuarios to update.
     */
    limit?: number
  }

  /**
   * Usuario updateManyAndReturn
   */
  export type UsuarioUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * The data used to update Usuarios.
     */
    data: XOR<UsuarioUpdateManyMutationInput, UsuarioUncheckedUpdateManyInput>
    /**
     * Filter which Usuarios to update
     */
    where?: UsuarioWhereInput
    /**
     * Limit how many Usuarios to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Usuario upsert
   */
  export type UsuarioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * The filter to search for the Usuario to update in case it exists.
     */
    where: UsuarioWhereUniqueInput
    /**
     * In case the Usuario found by the `where` argument doesn't exist, create a new Usuario with this data.
     */
    create: XOR<UsuarioCreateInput, UsuarioUncheckedCreateInput>
    /**
     * In case the Usuario was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UsuarioUpdateInput, UsuarioUncheckedUpdateInput>
  }

  /**
   * Usuario delete
   */
  export type UsuarioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter which Usuario to delete.
     */
    where: UsuarioWhereUniqueInput
  }

  /**
   * Usuario deleteMany
   */
  export type UsuarioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Usuarios to delete
     */
    where?: UsuarioWhereInput
    /**
     * Limit how many Usuarios to delete.
     */
    limit?: number
  }

  /**
   * Usuario.optica
   */
  export type Usuario$opticaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Optica
     */
    select?: OpticaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Optica
     */
    omit?: OpticaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OpticaInclude<ExtArgs> | null
    where?: OpticaWhereInput
  }

  /**
   * Usuario.gerente
   */
  export type Usuario$gerenteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    where?: UsuarioWhereInput
  }

  /**
   * Usuario.vendedores
   */
  export type Usuario$vendedoresArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    where?: UsuarioWhereInput
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    cursor?: UsuarioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * Usuario.enviosVenda
   */
  export type Usuario$enviosVendaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EnvioVenda
     */
    select?: EnvioVendaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EnvioVenda
     */
    omit?: EnvioVendaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EnvioVendaInclude<ExtArgs> | null
    where?: EnvioVendaWhereInput
    orderBy?: EnvioVendaOrderByWithRelationInput | EnvioVendaOrderByWithRelationInput[]
    cursor?: EnvioVendaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EnvioVendaScalarFieldEnum | EnvioVendaScalarFieldEnum[]
  }

  /**
   * Usuario.resgatesPremios
   */
  export type Usuario$resgatesPremiosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ResgatePremio
     */
    select?: ResgatePremioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ResgatePremio
     */
    omit?: ResgatePremioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ResgatePremioInclude<ExtArgs> | null
    where?: ResgatePremioWhereInput
    orderBy?: ResgatePremioOrderByWithRelationInput | ResgatePremioOrderByWithRelationInput[]
    cursor?: ResgatePremioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ResgatePremioScalarFieldEnum | ResgatePremioScalarFieldEnum[]
  }

  /**
   * Usuario.relatoriosFinanceiros
   */
  export type Usuario$relatoriosFinanceirosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RelatorioFinanceiro
     */
    select?: RelatorioFinanceiroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RelatorioFinanceiro
     */
    omit?: RelatorioFinanceiroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RelatorioFinanceiroInclude<ExtArgs> | null
    where?: RelatorioFinanceiroWhereInput
    orderBy?: RelatorioFinanceiroOrderByWithRelationInput | RelatorioFinanceiroOrderByWithRelationInput[]
    cursor?: RelatorioFinanceiroWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RelatorioFinanceiroScalarFieldEnum | RelatorioFinanceiroScalarFieldEnum[]
  }

  /**
   * Usuario.notificacoes
   */
  export type Usuario$notificacoesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notificacao
     */
    select?: NotificacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notificacao
     */
    omit?: NotificacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificacaoInclude<ExtArgs> | null
    where?: NotificacaoWhereInput
    orderBy?: NotificacaoOrderByWithRelationInput | NotificacaoOrderByWithRelationInput[]
    cursor?: NotificacaoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: NotificacaoScalarFieldEnum | NotificacaoScalarFieldEnum[]
  }

  /**
   * Usuario.cartelasConcluidas
   */
  export type Usuario$cartelasConcluidasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CartelaConcluida
     */
    select?: CartelaConcluidaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CartelaConcluida
     */
    omit?: CartelaConcluidaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CartelaConcluidaInclude<ExtArgs> | null
    where?: CartelaConcluidaWhereInput
    orderBy?: CartelaConcluidaOrderByWithRelationInput | CartelaConcluidaOrderByWithRelationInput[]
    cursor?: CartelaConcluidaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CartelaConcluidaScalarFieldEnum | CartelaConcluidaScalarFieldEnum[]
  }

  /**
   * Usuario without action
   */
  export type UsuarioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
  }


  /**
   * Model Campanha
   */

  export type AggregateCampanha = {
    _count: CampanhaCountAggregateOutputType | null
    _avg: CampanhaAvgAggregateOutputType | null
    _sum: CampanhaSumAggregateOutputType | null
    _min: CampanhaMinAggregateOutputType | null
    _max: CampanhaMaxAggregateOutputType | null
  }

  export type CampanhaAvgAggregateOutputType = {
    moedinhasPorCartela: number | null
    pontosReaisPorCartela: Decimal | null
    percentualGerente: Decimal | null
  }

  export type CampanhaSumAggregateOutputType = {
    moedinhasPorCartela: number | null
    pontosReaisPorCartela: Decimal | null
    percentualGerente: Decimal | null
  }

  export type CampanhaMinAggregateOutputType = {
    id: string | null
    titulo: string | null
    descricao: string | null
    dataInicio: Date | null
    dataFim: Date | null
    moedinhasPorCartela: number | null
    pontosReaisPorCartela: Decimal | null
    status: string | null
    percentualGerente: Decimal | null
    paraTodasOticas: boolean | null
    criadoEm: Date | null
    atualizadoEm: Date | null
  }

  export type CampanhaMaxAggregateOutputType = {
    id: string | null
    titulo: string | null
    descricao: string | null
    dataInicio: Date | null
    dataFim: Date | null
    moedinhasPorCartela: number | null
    pontosReaisPorCartela: Decimal | null
    status: string | null
    percentualGerente: Decimal | null
    paraTodasOticas: boolean | null
    criadoEm: Date | null
    atualizadoEm: Date | null
  }

  export type CampanhaCountAggregateOutputType = {
    id: number
    titulo: number
    descricao: number
    dataInicio: number
    dataFim: number
    moedinhasPorCartela: number
    pontosReaisPorCartela: number
    status: number
    percentualGerente: number
    paraTodasOticas: number
    criadoEm: number
    atualizadoEm: number
    _all: number
  }


  export type CampanhaAvgAggregateInputType = {
    moedinhasPorCartela?: true
    pontosReaisPorCartela?: true
    percentualGerente?: true
  }

  export type CampanhaSumAggregateInputType = {
    moedinhasPorCartela?: true
    pontosReaisPorCartela?: true
    percentualGerente?: true
  }

  export type CampanhaMinAggregateInputType = {
    id?: true
    titulo?: true
    descricao?: true
    dataInicio?: true
    dataFim?: true
    moedinhasPorCartela?: true
    pontosReaisPorCartela?: true
    status?: true
    percentualGerente?: true
    paraTodasOticas?: true
    criadoEm?: true
    atualizadoEm?: true
  }

  export type CampanhaMaxAggregateInputType = {
    id?: true
    titulo?: true
    descricao?: true
    dataInicio?: true
    dataFim?: true
    moedinhasPorCartela?: true
    pontosReaisPorCartela?: true
    status?: true
    percentualGerente?: true
    paraTodasOticas?: true
    criadoEm?: true
    atualizadoEm?: true
  }

  export type CampanhaCountAggregateInputType = {
    id?: true
    titulo?: true
    descricao?: true
    dataInicio?: true
    dataFim?: true
    moedinhasPorCartela?: true
    pontosReaisPorCartela?: true
    status?: true
    percentualGerente?: true
    paraTodasOticas?: true
    criadoEm?: true
    atualizadoEm?: true
    _all?: true
  }

  export type CampanhaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Campanha to aggregate.
     */
    where?: CampanhaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Campanhas to fetch.
     */
    orderBy?: CampanhaOrderByWithRelationInput | CampanhaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CampanhaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Campanhas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Campanhas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Campanhas
    **/
    _count?: true | CampanhaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CampanhaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CampanhaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CampanhaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CampanhaMaxAggregateInputType
  }

  export type GetCampanhaAggregateType<T extends CampanhaAggregateArgs> = {
        [P in keyof T & keyof AggregateCampanha]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCampanha[P]>
      : GetScalarType<T[P], AggregateCampanha[P]>
  }




  export type CampanhaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CampanhaWhereInput
    orderBy?: CampanhaOrderByWithAggregationInput | CampanhaOrderByWithAggregationInput[]
    by: CampanhaScalarFieldEnum[] | CampanhaScalarFieldEnum
    having?: CampanhaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CampanhaCountAggregateInputType | true
    _avg?: CampanhaAvgAggregateInputType
    _sum?: CampanhaSumAggregateInputType
    _min?: CampanhaMinAggregateInputType
    _max?: CampanhaMaxAggregateInputType
  }

  export type CampanhaGroupByOutputType = {
    id: string
    titulo: string
    descricao: string
    dataInicio: Date
    dataFim: Date
    moedinhasPorCartela: number
    pontosReaisPorCartela: Decimal
    status: string
    percentualGerente: Decimal
    paraTodasOticas: boolean
    criadoEm: Date
    atualizadoEm: Date
    _count: CampanhaCountAggregateOutputType | null
    _avg: CampanhaAvgAggregateOutputType | null
    _sum: CampanhaSumAggregateOutputType | null
    _min: CampanhaMinAggregateOutputType | null
    _max: CampanhaMaxAggregateOutputType | null
  }

  type GetCampanhaGroupByPayload<T extends CampanhaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CampanhaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CampanhaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CampanhaGroupByOutputType[P]>
            : GetScalarType<T[P], CampanhaGroupByOutputType[P]>
        }
      >
    >


  export type CampanhaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    titulo?: boolean
    descricao?: boolean
    dataInicio?: boolean
    dataFim?: boolean
    moedinhasPorCartela?: boolean
    pontosReaisPorCartela?: boolean
    status?: boolean
    percentualGerente?: boolean
    paraTodasOticas?: boolean
    criadoEm?: boolean
    atualizadoEm?: boolean
    oticasAlvo?: boolean | Campanha$oticasAlvoArgs<ExtArgs>
    cartelas?: boolean | Campanha$cartelasArgs<ExtArgs>
    enviosVenda?: boolean | Campanha$enviosVendaArgs<ExtArgs>
    relatoriosFinanceiros?: boolean | Campanha$relatoriosFinanceirosArgs<ExtArgs>
    cartelasConcluidas?: boolean | Campanha$cartelasConcluidasArgs<ExtArgs>
    _count?: boolean | CampanhaCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["campanha"]>

  export type CampanhaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    titulo?: boolean
    descricao?: boolean
    dataInicio?: boolean
    dataFim?: boolean
    moedinhasPorCartela?: boolean
    pontosReaisPorCartela?: boolean
    status?: boolean
    percentualGerente?: boolean
    paraTodasOticas?: boolean
    criadoEm?: boolean
    atualizadoEm?: boolean
  }, ExtArgs["result"]["campanha"]>

  export type CampanhaSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    titulo?: boolean
    descricao?: boolean
    dataInicio?: boolean
    dataFim?: boolean
    moedinhasPorCartela?: boolean
    pontosReaisPorCartela?: boolean
    status?: boolean
    percentualGerente?: boolean
    paraTodasOticas?: boolean
    criadoEm?: boolean
    atualizadoEm?: boolean
  }, ExtArgs["result"]["campanha"]>

  export type CampanhaSelectScalar = {
    id?: boolean
    titulo?: boolean
    descricao?: boolean
    dataInicio?: boolean
    dataFim?: boolean
    moedinhasPorCartela?: boolean
    pontosReaisPorCartela?: boolean
    status?: boolean
    percentualGerente?: boolean
    paraTodasOticas?: boolean
    criadoEm?: boolean
    atualizadoEm?: boolean
  }

  export type CampanhaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "titulo" | "descricao" | "dataInicio" | "dataFim" | "moedinhasPorCartela" | "pontosReaisPorCartela" | "status" | "percentualGerente" | "paraTodasOticas" | "criadoEm" | "atualizadoEm", ExtArgs["result"]["campanha"]>
  export type CampanhaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    oticasAlvo?: boolean | Campanha$oticasAlvoArgs<ExtArgs>
    cartelas?: boolean | Campanha$cartelasArgs<ExtArgs>
    enviosVenda?: boolean | Campanha$enviosVendaArgs<ExtArgs>
    relatoriosFinanceiros?: boolean | Campanha$relatoriosFinanceirosArgs<ExtArgs>
    cartelasConcluidas?: boolean | Campanha$cartelasConcluidasArgs<ExtArgs>
    _count?: boolean | CampanhaCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type CampanhaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type CampanhaIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $CampanhaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Campanha"
    objects: {
      /**
       * Lista de Óticas (Matriz e/ou Filiais) que são alvo desta campanha (ignorado se paraTodasOticas=true)
       */
      oticasAlvo: Prisma.$OpticaPayload<ExtArgs>[]
      /**
       * Regras de cartelas desta campanha (Cartela 1, 2, 3, etc.)
       */
      cartelas: Prisma.$RegraCartelaPayload<ExtArgs>[]
      /**
       * Envios de venda vinculados a esta campanha
       */
      enviosVenda: Prisma.$EnvioVendaPayload<ExtArgs>[]
      /**
       * Relatórios financeiros gerados para esta campanha
       */
      relatoriosFinanceiros: Prisma.$RelatorioFinanceiroPayload<ExtArgs>[]
      /**
       * Ledger de cartelas concluídas (livro-razão)
       */
      cartelasConcluidas: Prisma.$CartelaConcluidaPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      /**
       * ID único da campanha (UUID v4)
       */
      id: string
      /**
       * Título da campanha (ex: "Campanha Lentes Q1 2025")
       */
      titulo: string
      /**
       * Descrição detalhada da campanha
       */
      descricao: string
      /**
       * Data de início da campanha
       */
      dataInicio: Date
      /**
       * Data de término da campanha
       */
      dataFim: Date
      /**
       * Moedinhas virtuais (gamificação) creditadas ao vendedor por cartela completada.
       * Usadas para ranking e resgate de prêmios.
       */
      moedinhasPorCartela: number
      /**
       * Pontos equivalentes a R$ (1 Ponto = R$ 1,00) que o vendedor recebe por cartela completada.
       * Gera RelatorioFinanceiro para pagamento real.
       */
      pontosReaisPorCartela: Prisma.Decimal
      /**
       * Status da campanha (ex: "ATIVA", "PAUSADA", "CONCLUIDA")
       */
      status: string
      /**
       * Percentual de comissão que o gerente recebe (0.0 a 1.0, ex: 0.10 = 10%)
       */
      percentualGerente: Prisma.Decimal
      /**
       * Indica se a campanha é para todas as óticas (ignora oticasAlvo se true)
       */
      paraTodasOticas: boolean
      /**
       * Data de criação do registro
       */
      criadoEm: Date
      /**
       * Data da última atualização
       */
      atualizadoEm: Date
    }, ExtArgs["result"]["campanha"]>
    composites: {}
  }

  type CampanhaGetPayload<S extends boolean | null | undefined | CampanhaDefaultArgs> = $Result.GetResult<Prisma.$CampanhaPayload, S>

  type CampanhaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CampanhaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CampanhaCountAggregateInputType | true
    }

  export interface CampanhaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Campanha'], meta: { name: 'Campanha' } }
    /**
     * Find zero or one Campanha that matches the filter.
     * @param {CampanhaFindUniqueArgs} args - Arguments to find a Campanha
     * @example
     * // Get one Campanha
     * const campanha = await prisma.campanha.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CampanhaFindUniqueArgs>(args: SelectSubset<T, CampanhaFindUniqueArgs<ExtArgs>>): Prisma__CampanhaClient<$Result.GetResult<Prisma.$CampanhaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Campanha that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CampanhaFindUniqueOrThrowArgs} args - Arguments to find a Campanha
     * @example
     * // Get one Campanha
     * const campanha = await prisma.campanha.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CampanhaFindUniqueOrThrowArgs>(args: SelectSubset<T, CampanhaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CampanhaClient<$Result.GetResult<Prisma.$CampanhaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Campanha that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CampanhaFindFirstArgs} args - Arguments to find a Campanha
     * @example
     * // Get one Campanha
     * const campanha = await prisma.campanha.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CampanhaFindFirstArgs>(args?: SelectSubset<T, CampanhaFindFirstArgs<ExtArgs>>): Prisma__CampanhaClient<$Result.GetResult<Prisma.$CampanhaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Campanha that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CampanhaFindFirstOrThrowArgs} args - Arguments to find a Campanha
     * @example
     * // Get one Campanha
     * const campanha = await prisma.campanha.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CampanhaFindFirstOrThrowArgs>(args?: SelectSubset<T, CampanhaFindFirstOrThrowArgs<ExtArgs>>): Prisma__CampanhaClient<$Result.GetResult<Prisma.$CampanhaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Campanhas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CampanhaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Campanhas
     * const campanhas = await prisma.campanha.findMany()
     * 
     * // Get first 10 Campanhas
     * const campanhas = await prisma.campanha.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const campanhaWithIdOnly = await prisma.campanha.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CampanhaFindManyArgs>(args?: SelectSubset<T, CampanhaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CampanhaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Campanha.
     * @param {CampanhaCreateArgs} args - Arguments to create a Campanha.
     * @example
     * // Create one Campanha
     * const Campanha = await prisma.campanha.create({
     *   data: {
     *     // ... data to create a Campanha
     *   }
     * })
     * 
     */
    create<T extends CampanhaCreateArgs>(args: SelectSubset<T, CampanhaCreateArgs<ExtArgs>>): Prisma__CampanhaClient<$Result.GetResult<Prisma.$CampanhaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Campanhas.
     * @param {CampanhaCreateManyArgs} args - Arguments to create many Campanhas.
     * @example
     * // Create many Campanhas
     * const campanha = await prisma.campanha.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CampanhaCreateManyArgs>(args?: SelectSubset<T, CampanhaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Campanhas and returns the data saved in the database.
     * @param {CampanhaCreateManyAndReturnArgs} args - Arguments to create many Campanhas.
     * @example
     * // Create many Campanhas
     * const campanha = await prisma.campanha.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Campanhas and only return the `id`
     * const campanhaWithIdOnly = await prisma.campanha.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CampanhaCreateManyAndReturnArgs>(args?: SelectSubset<T, CampanhaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CampanhaPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Campanha.
     * @param {CampanhaDeleteArgs} args - Arguments to delete one Campanha.
     * @example
     * // Delete one Campanha
     * const Campanha = await prisma.campanha.delete({
     *   where: {
     *     // ... filter to delete one Campanha
     *   }
     * })
     * 
     */
    delete<T extends CampanhaDeleteArgs>(args: SelectSubset<T, CampanhaDeleteArgs<ExtArgs>>): Prisma__CampanhaClient<$Result.GetResult<Prisma.$CampanhaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Campanha.
     * @param {CampanhaUpdateArgs} args - Arguments to update one Campanha.
     * @example
     * // Update one Campanha
     * const campanha = await prisma.campanha.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CampanhaUpdateArgs>(args: SelectSubset<T, CampanhaUpdateArgs<ExtArgs>>): Prisma__CampanhaClient<$Result.GetResult<Prisma.$CampanhaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Campanhas.
     * @param {CampanhaDeleteManyArgs} args - Arguments to filter Campanhas to delete.
     * @example
     * // Delete a few Campanhas
     * const { count } = await prisma.campanha.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CampanhaDeleteManyArgs>(args?: SelectSubset<T, CampanhaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Campanhas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CampanhaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Campanhas
     * const campanha = await prisma.campanha.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CampanhaUpdateManyArgs>(args: SelectSubset<T, CampanhaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Campanhas and returns the data updated in the database.
     * @param {CampanhaUpdateManyAndReturnArgs} args - Arguments to update many Campanhas.
     * @example
     * // Update many Campanhas
     * const campanha = await prisma.campanha.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Campanhas and only return the `id`
     * const campanhaWithIdOnly = await prisma.campanha.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends CampanhaUpdateManyAndReturnArgs>(args: SelectSubset<T, CampanhaUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CampanhaPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Campanha.
     * @param {CampanhaUpsertArgs} args - Arguments to update or create a Campanha.
     * @example
     * // Update or create a Campanha
     * const campanha = await prisma.campanha.upsert({
     *   create: {
     *     // ... data to create a Campanha
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Campanha we want to update
     *   }
     * })
     */
    upsert<T extends CampanhaUpsertArgs>(args: SelectSubset<T, CampanhaUpsertArgs<ExtArgs>>): Prisma__CampanhaClient<$Result.GetResult<Prisma.$CampanhaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Campanhas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CampanhaCountArgs} args - Arguments to filter Campanhas to count.
     * @example
     * // Count the number of Campanhas
     * const count = await prisma.campanha.count({
     *   where: {
     *     // ... the filter for the Campanhas we want to count
     *   }
     * })
    **/
    count<T extends CampanhaCountArgs>(
      args?: Subset<T, CampanhaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CampanhaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Campanha.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CampanhaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CampanhaAggregateArgs>(args: Subset<T, CampanhaAggregateArgs>): Prisma.PrismaPromise<GetCampanhaAggregateType<T>>

    /**
     * Group by Campanha.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CampanhaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CampanhaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CampanhaGroupByArgs['orderBy'] }
        : { orderBy?: CampanhaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CampanhaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCampanhaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Campanha model
   */
  readonly fields: CampanhaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Campanha.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CampanhaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    oticasAlvo<T extends Campanha$oticasAlvoArgs<ExtArgs> = {}>(args?: Subset<T, Campanha$oticasAlvoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OpticaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    cartelas<T extends Campanha$cartelasArgs<ExtArgs> = {}>(args?: Subset<T, Campanha$cartelasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RegraCartelaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    enviosVenda<T extends Campanha$enviosVendaArgs<ExtArgs> = {}>(args?: Subset<T, Campanha$enviosVendaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EnvioVendaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    relatoriosFinanceiros<T extends Campanha$relatoriosFinanceirosArgs<ExtArgs> = {}>(args?: Subset<T, Campanha$relatoriosFinanceirosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RelatorioFinanceiroPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    cartelasConcluidas<T extends Campanha$cartelasConcluidasArgs<ExtArgs> = {}>(args?: Subset<T, Campanha$cartelasConcluidasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CartelaConcluidaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Campanha model
   */
  interface CampanhaFieldRefs {
    readonly id: FieldRef<"Campanha", 'String'>
    readonly titulo: FieldRef<"Campanha", 'String'>
    readonly descricao: FieldRef<"Campanha", 'String'>
    readonly dataInicio: FieldRef<"Campanha", 'DateTime'>
    readonly dataFim: FieldRef<"Campanha", 'DateTime'>
    readonly moedinhasPorCartela: FieldRef<"Campanha", 'Int'>
    readonly pontosReaisPorCartela: FieldRef<"Campanha", 'Decimal'>
    readonly status: FieldRef<"Campanha", 'String'>
    readonly percentualGerente: FieldRef<"Campanha", 'Decimal'>
    readonly paraTodasOticas: FieldRef<"Campanha", 'Boolean'>
    readonly criadoEm: FieldRef<"Campanha", 'DateTime'>
    readonly atualizadoEm: FieldRef<"Campanha", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Campanha findUnique
   */
  export type CampanhaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Campanha
     */
    select?: CampanhaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Campanha
     */
    omit?: CampanhaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CampanhaInclude<ExtArgs> | null
    /**
     * Filter, which Campanha to fetch.
     */
    where: CampanhaWhereUniqueInput
  }

  /**
   * Campanha findUniqueOrThrow
   */
  export type CampanhaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Campanha
     */
    select?: CampanhaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Campanha
     */
    omit?: CampanhaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CampanhaInclude<ExtArgs> | null
    /**
     * Filter, which Campanha to fetch.
     */
    where: CampanhaWhereUniqueInput
  }

  /**
   * Campanha findFirst
   */
  export type CampanhaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Campanha
     */
    select?: CampanhaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Campanha
     */
    omit?: CampanhaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CampanhaInclude<ExtArgs> | null
    /**
     * Filter, which Campanha to fetch.
     */
    where?: CampanhaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Campanhas to fetch.
     */
    orderBy?: CampanhaOrderByWithRelationInput | CampanhaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Campanhas.
     */
    cursor?: CampanhaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Campanhas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Campanhas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Campanhas.
     */
    distinct?: CampanhaScalarFieldEnum | CampanhaScalarFieldEnum[]
  }

  /**
   * Campanha findFirstOrThrow
   */
  export type CampanhaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Campanha
     */
    select?: CampanhaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Campanha
     */
    omit?: CampanhaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CampanhaInclude<ExtArgs> | null
    /**
     * Filter, which Campanha to fetch.
     */
    where?: CampanhaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Campanhas to fetch.
     */
    orderBy?: CampanhaOrderByWithRelationInput | CampanhaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Campanhas.
     */
    cursor?: CampanhaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Campanhas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Campanhas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Campanhas.
     */
    distinct?: CampanhaScalarFieldEnum | CampanhaScalarFieldEnum[]
  }

  /**
   * Campanha findMany
   */
  export type CampanhaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Campanha
     */
    select?: CampanhaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Campanha
     */
    omit?: CampanhaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CampanhaInclude<ExtArgs> | null
    /**
     * Filter, which Campanhas to fetch.
     */
    where?: CampanhaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Campanhas to fetch.
     */
    orderBy?: CampanhaOrderByWithRelationInput | CampanhaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Campanhas.
     */
    cursor?: CampanhaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Campanhas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Campanhas.
     */
    skip?: number
    distinct?: CampanhaScalarFieldEnum | CampanhaScalarFieldEnum[]
  }

  /**
   * Campanha create
   */
  export type CampanhaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Campanha
     */
    select?: CampanhaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Campanha
     */
    omit?: CampanhaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CampanhaInclude<ExtArgs> | null
    /**
     * The data needed to create a Campanha.
     */
    data: XOR<CampanhaCreateInput, CampanhaUncheckedCreateInput>
  }

  /**
   * Campanha createMany
   */
  export type CampanhaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Campanhas.
     */
    data: CampanhaCreateManyInput | CampanhaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Campanha createManyAndReturn
   */
  export type CampanhaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Campanha
     */
    select?: CampanhaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Campanha
     */
    omit?: CampanhaOmit<ExtArgs> | null
    /**
     * The data used to create many Campanhas.
     */
    data: CampanhaCreateManyInput | CampanhaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Campanha update
   */
  export type CampanhaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Campanha
     */
    select?: CampanhaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Campanha
     */
    omit?: CampanhaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CampanhaInclude<ExtArgs> | null
    /**
     * The data needed to update a Campanha.
     */
    data: XOR<CampanhaUpdateInput, CampanhaUncheckedUpdateInput>
    /**
     * Choose, which Campanha to update.
     */
    where: CampanhaWhereUniqueInput
  }

  /**
   * Campanha updateMany
   */
  export type CampanhaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Campanhas.
     */
    data: XOR<CampanhaUpdateManyMutationInput, CampanhaUncheckedUpdateManyInput>
    /**
     * Filter which Campanhas to update
     */
    where?: CampanhaWhereInput
    /**
     * Limit how many Campanhas to update.
     */
    limit?: number
  }

  /**
   * Campanha updateManyAndReturn
   */
  export type CampanhaUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Campanha
     */
    select?: CampanhaSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Campanha
     */
    omit?: CampanhaOmit<ExtArgs> | null
    /**
     * The data used to update Campanhas.
     */
    data: XOR<CampanhaUpdateManyMutationInput, CampanhaUncheckedUpdateManyInput>
    /**
     * Filter which Campanhas to update
     */
    where?: CampanhaWhereInput
    /**
     * Limit how many Campanhas to update.
     */
    limit?: number
  }

  /**
   * Campanha upsert
   */
  export type CampanhaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Campanha
     */
    select?: CampanhaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Campanha
     */
    omit?: CampanhaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CampanhaInclude<ExtArgs> | null
    /**
     * The filter to search for the Campanha to update in case it exists.
     */
    where: CampanhaWhereUniqueInput
    /**
     * In case the Campanha found by the `where` argument doesn't exist, create a new Campanha with this data.
     */
    create: XOR<CampanhaCreateInput, CampanhaUncheckedCreateInput>
    /**
     * In case the Campanha was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CampanhaUpdateInput, CampanhaUncheckedUpdateInput>
  }

  /**
   * Campanha delete
   */
  export type CampanhaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Campanha
     */
    select?: CampanhaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Campanha
     */
    omit?: CampanhaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CampanhaInclude<ExtArgs> | null
    /**
     * Filter which Campanha to delete.
     */
    where: CampanhaWhereUniqueInput
  }

  /**
   * Campanha deleteMany
   */
  export type CampanhaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Campanhas to delete
     */
    where?: CampanhaWhereInput
    /**
     * Limit how many Campanhas to delete.
     */
    limit?: number
  }

  /**
   * Campanha.oticasAlvo
   */
  export type Campanha$oticasAlvoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Optica
     */
    select?: OpticaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Optica
     */
    omit?: OpticaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OpticaInclude<ExtArgs> | null
    where?: OpticaWhereInput
    orderBy?: OpticaOrderByWithRelationInput | OpticaOrderByWithRelationInput[]
    cursor?: OpticaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OpticaScalarFieldEnum | OpticaScalarFieldEnum[]
  }

  /**
   * Campanha.cartelas
   */
  export type Campanha$cartelasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegraCartela
     */
    select?: RegraCartelaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RegraCartela
     */
    omit?: RegraCartelaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegraCartelaInclude<ExtArgs> | null
    where?: RegraCartelaWhereInput
    orderBy?: RegraCartelaOrderByWithRelationInput | RegraCartelaOrderByWithRelationInput[]
    cursor?: RegraCartelaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RegraCartelaScalarFieldEnum | RegraCartelaScalarFieldEnum[]
  }

  /**
   * Campanha.enviosVenda
   */
  export type Campanha$enviosVendaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EnvioVenda
     */
    select?: EnvioVendaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EnvioVenda
     */
    omit?: EnvioVendaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EnvioVendaInclude<ExtArgs> | null
    where?: EnvioVendaWhereInput
    orderBy?: EnvioVendaOrderByWithRelationInput | EnvioVendaOrderByWithRelationInput[]
    cursor?: EnvioVendaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EnvioVendaScalarFieldEnum | EnvioVendaScalarFieldEnum[]
  }

  /**
   * Campanha.relatoriosFinanceiros
   */
  export type Campanha$relatoriosFinanceirosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RelatorioFinanceiro
     */
    select?: RelatorioFinanceiroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RelatorioFinanceiro
     */
    omit?: RelatorioFinanceiroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RelatorioFinanceiroInclude<ExtArgs> | null
    where?: RelatorioFinanceiroWhereInput
    orderBy?: RelatorioFinanceiroOrderByWithRelationInput | RelatorioFinanceiroOrderByWithRelationInput[]
    cursor?: RelatorioFinanceiroWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RelatorioFinanceiroScalarFieldEnum | RelatorioFinanceiroScalarFieldEnum[]
  }

  /**
   * Campanha.cartelasConcluidas
   */
  export type Campanha$cartelasConcluidasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CartelaConcluida
     */
    select?: CartelaConcluidaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CartelaConcluida
     */
    omit?: CartelaConcluidaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CartelaConcluidaInclude<ExtArgs> | null
    where?: CartelaConcluidaWhereInput
    orderBy?: CartelaConcluidaOrderByWithRelationInput | CartelaConcluidaOrderByWithRelationInput[]
    cursor?: CartelaConcluidaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CartelaConcluidaScalarFieldEnum | CartelaConcluidaScalarFieldEnum[]
  }

  /**
   * Campanha without action
   */
  export type CampanhaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Campanha
     */
    select?: CampanhaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Campanha
     */
    omit?: CampanhaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CampanhaInclude<ExtArgs> | null
  }


  /**
   * Model RegraCartela
   */

  export type AggregateRegraCartela = {
    _count: RegraCartelaCountAggregateOutputType | null
    _avg: RegraCartelaAvgAggregateOutputType | null
    _sum: RegraCartelaSumAggregateOutputType | null
    _min: RegraCartelaMinAggregateOutputType | null
    _max: RegraCartelaMaxAggregateOutputType | null
  }

  export type RegraCartelaAvgAggregateOutputType = {
    numeroCartela: number | null
  }

  export type RegraCartelaSumAggregateOutputType = {
    numeroCartela: number | null
  }

  export type RegraCartelaMinAggregateOutputType = {
    id: string | null
    numeroCartela: number | null
    descricao: string | null
    campanhaId: string | null
    criadoEm: Date | null
    atualizadoEm: Date | null
  }

  export type RegraCartelaMaxAggregateOutputType = {
    id: string | null
    numeroCartela: number | null
    descricao: string | null
    campanhaId: string | null
    criadoEm: Date | null
    atualizadoEm: Date | null
  }

  export type RegraCartelaCountAggregateOutputType = {
    id: number
    numeroCartela: number
    descricao: number
    campanhaId: number
    criadoEm: number
    atualizadoEm: number
    _all: number
  }


  export type RegraCartelaAvgAggregateInputType = {
    numeroCartela?: true
  }

  export type RegraCartelaSumAggregateInputType = {
    numeroCartela?: true
  }

  export type RegraCartelaMinAggregateInputType = {
    id?: true
    numeroCartela?: true
    descricao?: true
    campanhaId?: true
    criadoEm?: true
    atualizadoEm?: true
  }

  export type RegraCartelaMaxAggregateInputType = {
    id?: true
    numeroCartela?: true
    descricao?: true
    campanhaId?: true
    criadoEm?: true
    atualizadoEm?: true
  }

  export type RegraCartelaCountAggregateInputType = {
    id?: true
    numeroCartela?: true
    descricao?: true
    campanhaId?: true
    criadoEm?: true
    atualizadoEm?: true
    _all?: true
  }

  export type RegraCartelaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RegraCartela to aggregate.
     */
    where?: RegraCartelaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RegraCartelas to fetch.
     */
    orderBy?: RegraCartelaOrderByWithRelationInput | RegraCartelaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: RegraCartelaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RegraCartelas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RegraCartelas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned RegraCartelas
    **/
    _count?: true | RegraCartelaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: RegraCartelaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: RegraCartelaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RegraCartelaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RegraCartelaMaxAggregateInputType
  }

  export type GetRegraCartelaAggregateType<T extends RegraCartelaAggregateArgs> = {
        [P in keyof T & keyof AggregateRegraCartela]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRegraCartela[P]>
      : GetScalarType<T[P], AggregateRegraCartela[P]>
  }




  export type RegraCartelaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RegraCartelaWhereInput
    orderBy?: RegraCartelaOrderByWithAggregationInput | RegraCartelaOrderByWithAggregationInput[]
    by: RegraCartelaScalarFieldEnum[] | RegraCartelaScalarFieldEnum
    having?: RegraCartelaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RegraCartelaCountAggregateInputType | true
    _avg?: RegraCartelaAvgAggregateInputType
    _sum?: RegraCartelaSumAggregateInputType
    _min?: RegraCartelaMinAggregateInputType
    _max?: RegraCartelaMaxAggregateInputType
  }

  export type RegraCartelaGroupByOutputType = {
    id: string
    numeroCartela: number
    descricao: string | null
    campanhaId: string
    criadoEm: Date
    atualizadoEm: Date
    _count: RegraCartelaCountAggregateOutputType | null
    _avg: RegraCartelaAvgAggregateOutputType | null
    _sum: RegraCartelaSumAggregateOutputType | null
    _min: RegraCartelaMinAggregateOutputType | null
    _max: RegraCartelaMaxAggregateOutputType | null
  }

  type GetRegraCartelaGroupByPayload<T extends RegraCartelaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RegraCartelaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RegraCartelaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RegraCartelaGroupByOutputType[P]>
            : GetScalarType<T[P], RegraCartelaGroupByOutputType[P]>
        }
      >
    >


  export type RegraCartelaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    numeroCartela?: boolean
    descricao?: boolean
    campanhaId?: boolean
    criadoEm?: boolean
    atualizadoEm?: boolean
    campanha?: boolean | CampanhaDefaultArgs<ExtArgs>
    requisitos?: boolean | RegraCartela$requisitosArgs<ExtArgs>
    _count?: boolean | RegraCartelaCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["regraCartela"]>

  export type RegraCartelaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    numeroCartela?: boolean
    descricao?: boolean
    campanhaId?: boolean
    criadoEm?: boolean
    atualizadoEm?: boolean
    campanha?: boolean | CampanhaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["regraCartela"]>

  export type RegraCartelaSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    numeroCartela?: boolean
    descricao?: boolean
    campanhaId?: boolean
    criadoEm?: boolean
    atualizadoEm?: boolean
    campanha?: boolean | CampanhaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["regraCartela"]>

  export type RegraCartelaSelectScalar = {
    id?: boolean
    numeroCartela?: boolean
    descricao?: boolean
    campanhaId?: boolean
    criadoEm?: boolean
    atualizadoEm?: boolean
  }

  export type RegraCartelaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "numeroCartela" | "descricao" | "campanhaId" | "criadoEm" | "atualizadoEm", ExtArgs["result"]["regraCartela"]>
  export type RegraCartelaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    campanha?: boolean | CampanhaDefaultArgs<ExtArgs>
    requisitos?: boolean | RegraCartela$requisitosArgs<ExtArgs>
    _count?: boolean | RegraCartelaCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type RegraCartelaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    campanha?: boolean | CampanhaDefaultArgs<ExtArgs>
  }
  export type RegraCartelaIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    campanha?: boolean | CampanhaDefaultArgs<ExtArgs>
  }

  export type $RegraCartelaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "RegraCartela"
    objects: {
      /**
       * Referência à campanha
       */
      campanha: Prisma.$CampanhaPayload<ExtArgs>
      /**
       * Lista de requisitos (produtos) desta cartela
       */
      requisitos: Prisma.$RequisitoCartelaPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      /**
       * ID único da regra de cartela (UUID v4)
       */
      id: string
      /**
       * Número sequencial da cartela (1, 2, 3, ...)
       */
      numeroCartela: number
      /**
       * Descrição da cartela (ex: "Cartela Bronze - Produtos Básicos")
       */
      descricao: string | null
      /**
       * ID da campanha à qual esta cartela pertence
       */
      campanhaId: string
      /**
       * Data de criação do registro
       */
      criadoEm: Date
      /**
       * Data da última atualização
       */
      atualizadoEm: Date
    }, ExtArgs["result"]["regraCartela"]>
    composites: {}
  }

  type RegraCartelaGetPayload<S extends boolean | null | undefined | RegraCartelaDefaultArgs> = $Result.GetResult<Prisma.$RegraCartelaPayload, S>

  type RegraCartelaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<RegraCartelaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: RegraCartelaCountAggregateInputType | true
    }

  export interface RegraCartelaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['RegraCartela'], meta: { name: 'RegraCartela' } }
    /**
     * Find zero or one RegraCartela that matches the filter.
     * @param {RegraCartelaFindUniqueArgs} args - Arguments to find a RegraCartela
     * @example
     * // Get one RegraCartela
     * const regraCartela = await prisma.regraCartela.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends RegraCartelaFindUniqueArgs>(args: SelectSubset<T, RegraCartelaFindUniqueArgs<ExtArgs>>): Prisma__RegraCartelaClient<$Result.GetResult<Prisma.$RegraCartelaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one RegraCartela that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {RegraCartelaFindUniqueOrThrowArgs} args - Arguments to find a RegraCartela
     * @example
     * // Get one RegraCartela
     * const regraCartela = await prisma.regraCartela.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends RegraCartelaFindUniqueOrThrowArgs>(args: SelectSubset<T, RegraCartelaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__RegraCartelaClient<$Result.GetResult<Prisma.$RegraCartelaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first RegraCartela that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegraCartelaFindFirstArgs} args - Arguments to find a RegraCartela
     * @example
     * // Get one RegraCartela
     * const regraCartela = await prisma.regraCartela.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends RegraCartelaFindFirstArgs>(args?: SelectSubset<T, RegraCartelaFindFirstArgs<ExtArgs>>): Prisma__RegraCartelaClient<$Result.GetResult<Prisma.$RegraCartelaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first RegraCartela that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegraCartelaFindFirstOrThrowArgs} args - Arguments to find a RegraCartela
     * @example
     * // Get one RegraCartela
     * const regraCartela = await prisma.regraCartela.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends RegraCartelaFindFirstOrThrowArgs>(args?: SelectSubset<T, RegraCartelaFindFirstOrThrowArgs<ExtArgs>>): Prisma__RegraCartelaClient<$Result.GetResult<Prisma.$RegraCartelaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more RegraCartelas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegraCartelaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all RegraCartelas
     * const regraCartelas = await prisma.regraCartela.findMany()
     * 
     * // Get first 10 RegraCartelas
     * const regraCartelas = await prisma.regraCartela.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const regraCartelaWithIdOnly = await prisma.regraCartela.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends RegraCartelaFindManyArgs>(args?: SelectSubset<T, RegraCartelaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RegraCartelaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a RegraCartela.
     * @param {RegraCartelaCreateArgs} args - Arguments to create a RegraCartela.
     * @example
     * // Create one RegraCartela
     * const RegraCartela = await prisma.regraCartela.create({
     *   data: {
     *     // ... data to create a RegraCartela
     *   }
     * })
     * 
     */
    create<T extends RegraCartelaCreateArgs>(args: SelectSubset<T, RegraCartelaCreateArgs<ExtArgs>>): Prisma__RegraCartelaClient<$Result.GetResult<Prisma.$RegraCartelaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many RegraCartelas.
     * @param {RegraCartelaCreateManyArgs} args - Arguments to create many RegraCartelas.
     * @example
     * // Create many RegraCartelas
     * const regraCartela = await prisma.regraCartela.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends RegraCartelaCreateManyArgs>(args?: SelectSubset<T, RegraCartelaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many RegraCartelas and returns the data saved in the database.
     * @param {RegraCartelaCreateManyAndReturnArgs} args - Arguments to create many RegraCartelas.
     * @example
     * // Create many RegraCartelas
     * const regraCartela = await prisma.regraCartela.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many RegraCartelas and only return the `id`
     * const regraCartelaWithIdOnly = await prisma.regraCartela.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends RegraCartelaCreateManyAndReturnArgs>(args?: SelectSubset<T, RegraCartelaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RegraCartelaPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a RegraCartela.
     * @param {RegraCartelaDeleteArgs} args - Arguments to delete one RegraCartela.
     * @example
     * // Delete one RegraCartela
     * const RegraCartela = await prisma.regraCartela.delete({
     *   where: {
     *     // ... filter to delete one RegraCartela
     *   }
     * })
     * 
     */
    delete<T extends RegraCartelaDeleteArgs>(args: SelectSubset<T, RegraCartelaDeleteArgs<ExtArgs>>): Prisma__RegraCartelaClient<$Result.GetResult<Prisma.$RegraCartelaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one RegraCartela.
     * @param {RegraCartelaUpdateArgs} args - Arguments to update one RegraCartela.
     * @example
     * // Update one RegraCartela
     * const regraCartela = await prisma.regraCartela.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends RegraCartelaUpdateArgs>(args: SelectSubset<T, RegraCartelaUpdateArgs<ExtArgs>>): Prisma__RegraCartelaClient<$Result.GetResult<Prisma.$RegraCartelaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more RegraCartelas.
     * @param {RegraCartelaDeleteManyArgs} args - Arguments to filter RegraCartelas to delete.
     * @example
     * // Delete a few RegraCartelas
     * const { count } = await prisma.regraCartela.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends RegraCartelaDeleteManyArgs>(args?: SelectSubset<T, RegraCartelaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more RegraCartelas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegraCartelaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many RegraCartelas
     * const regraCartela = await prisma.regraCartela.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends RegraCartelaUpdateManyArgs>(args: SelectSubset<T, RegraCartelaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more RegraCartelas and returns the data updated in the database.
     * @param {RegraCartelaUpdateManyAndReturnArgs} args - Arguments to update many RegraCartelas.
     * @example
     * // Update many RegraCartelas
     * const regraCartela = await prisma.regraCartela.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more RegraCartelas and only return the `id`
     * const regraCartelaWithIdOnly = await prisma.regraCartela.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends RegraCartelaUpdateManyAndReturnArgs>(args: SelectSubset<T, RegraCartelaUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RegraCartelaPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one RegraCartela.
     * @param {RegraCartelaUpsertArgs} args - Arguments to update or create a RegraCartela.
     * @example
     * // Update or create a RegraCartela
     * const regraCartela = await prisma.regraCartela.upsert({
     *   create: {
     *     // ... data to create a RegraCartela
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the RegraCartela we want to update
     *   }
     * })
     */
    upsert<T extends RegraCartelaUpsertArgs>(args: SelectSubset<T, RegraCartelaUpsertArgs<ExtArgs>>): Prisma__RegraCartelaClient<$Result.GetResult<Prisma.$RegraCartelaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of RegraCartelas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegraCartelaCountArgs} args - Arguments to filter RegraCartelas to count.
     * @example
     * // Count the number of RegraCartelas
     * const count = await prisma.regraCartela.count({
     *   where: {
     *     // ... the filter for the RegraCartelas we want to count
     *   }
     * })
    **/
    count<T extends RegraCartelaCountArgs>(
      args?: Subset<T, RegraCartelaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RegraCartelaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a RegraCartela.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegraCartelaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RegraCartelaAggregateArgs>(args: Subset<T, RegraCartelaAggregateArgs>): Prisma.PrismaPromise<GetRegraCartelaAggregateType<T>>

    /**
     * Group by RegraCartela.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegraCartelaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends RegraCartelaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: RegraCartelaGroupByArgs['orderBy'] }
        : { orderBy?: RegraCartelaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, RegraCartelaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRegraCartelaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the RegraCartela model
   */
  readonly fields: RegraCartelaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for RegraCartela.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__RegraCartelaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    campanha<T extends CampanhaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CampanhaDefaultArgs<ExtArgs>>): Prisma__CampanhaClient<$Result.GetResult<Prisma.$CampanhaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    requisitos<T extends RegraCartela$requisitosArgs<ExtArgs> = {}>(args?: Subset<T, RegraCartela$requisitosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RequisitoCartelaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the RegraCartela model
   */
  interface RegraCartelaFieldRefs {
    readonly id: FieldRef<"RegraCartela", 'String'>
    readonly numeroCartela: FieldRef<"RegraCartela", 'Int'>
    readonly descricao: FieldRef<"RegraCartela", 'String'>
    readonly campanhaId: FieldRef<"RegraCartela", 'String'>
    readonly criadoEm: FieldRef<"RegraCartela", 'DateTime'>
    readonly atualizadoEm: FieldRef<"RegraCartela", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * RegraCartela findUnique
   */
  export type RegraCartelaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegraCartela
     */
    select?: RegraCartelaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RegraCartela
     */
    omit?: RegraCartelaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegraCartelaInclude<ExtArgs> | null
    /**
     * Filter, which RegraCartela to fetch.
     */
    where: RegraCartelaWhereUniqueInput
  }

  /**
   * RegraCartela findUniqueOrThrow
   */
  export type RegraCartelaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegraCartela
     */
    select?: RegraCartelaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RegraCartela
     */
    omit?: RegraCartelaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegraCartelaInclude<ExtArgs> | null
    /**
     * Filter, which RegraCartela to fetch.
     */
    where: RegraCartelaWhereUniqueInput
  }

  /**
   * RegraCartela findFirst
   */
  export type RegraCartelaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegraCartela
     */
    select?: RegraCartelaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RegraCartela
     */
    omit?: RegraCartelaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegraCartelaInclude<ExtArgs> | null
    /**
     * Filter, which RegraCartela to fetch.
     */
    where?: RegraCartelaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RegraCartelas to fetch.
     */
    orderBy?: RegraCartelaOrderByWithRelationInput | RegraCartelaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RegraCartelas.
     */
    cursor?: RegraCartelaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RegraCartelas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RegraCartelas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RegraCartelas.
     */
    distinct?: RegraCartelaScalarFieldEnum | RegraCartelaScalarFieldEnum[]
  }

  /**
   * RegraCartela findFirstOrThrow
   */
  export type RegraCartelaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegraCartela
     */
    select?: RegraCartelaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RegraCartela
     */
    omit?: RegraCartelaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegraCartelaInclude<ExtArgs> | null
    /**
     * Filter, which RegraCartela to fetch.
     */
    where?: RegraCartelaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RegraCartelas to fetch.
     */
    orderBy?: RegraCartelaOrderByWithRelationInput | RegraCartelaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RegraCartelas.
     */
    cursor?: RegraCartelaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RegraCartelas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RegraCartelas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RegraCartelas.
     */
    distinct?: RegraCartelaScalarFieldEnum | RegraCartelaScalarFieldEnum[]
  }

  /**
   * RegraCartela findMany
   */
  export type RegraCartelaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegraCartela
     */
    select?: RegraCartelaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RegraCartela
     */
    omit?: RegraCartelaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegraCartelaInclude<ExtArgs> | null
    /**
     * Filter, which RegraCartelas to fetch.
     */
    where?: RegraCartelaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RegraCartelas to fetch.
     */
    orderBy?: RegraCartelaOrderByWithRelationInput | RegraCartelaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing RegraCartelas.
     */
    cursor?: RegraCartelaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RegraCartelas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RegraCartelas.
     */
    skip?: number
    distinct?: RegraCartelaScalarFieldEnum | RegraCartelaScalarFieldEnum[]
  }

  /**
   * RegraCartela create
   */
  export type RegraCartelaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegraCartela
     */
    select?: RegraCartelaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RegraCartela
     */
    omit?: RegraCartelaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegraCartelaInclude<ExtArgs> | null
    /**
     * The data needed to create a RegraCartela.
     */
    data: XOR<RegraCartelaCreateInput, RegraCartelaUncheckedCreateInput>
  }

  /**
   * RegraCartela createMany
   */
  export type RegraCartelaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many RegraCartelas.
     */
    data: RegraCartelaCreateManyInput | RegraCartelaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * RegraCartela createManyAndReturn
   */
  export type RegraCartelaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegraCartela
     */
    select?: RegraCartelaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the RegraCartela
     */
    omit?: RegraCartelaOmit<ExtArgs> | null
    /**
     * The data used to create many RegraCartelas.
     */
    data: RegraCartelaCreateManyInput | RegraCartelaCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegraCartelaIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * RegraCartela update
   */
  export type RegraCartelaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegraCartela
     */
    select?: RegraCartelaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RegraCartela
     */
    omit?: RegraCartelaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegraCartelaInclude<ExtArgs> | null
    /**
     * The data needed to update a RegraCartela.
     */
    data: XOR<RegraCartelaUpdateInput, RegraCartelaUncheckedUpdateInput>
    /**
     * Choose, which RegraCartela to update.
     */
    where: RegraCartelaWhereUniqueInput
  }

  /**
   * RegraCartela updateMany
   */
  export type RegraCartelaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update RegraCartelas.
     */
    data: XOR<RegraCartelaUpdateManyMutationInput, RegraCartelaUncheckedUpdateManyInput>
    /**
     * Filter which RegraCartelas to update
     */
    where?: RegraCartelaWhereInput
    /**
     * Limit how many RegraCartelas to update.
     */
    limit?: number
  }

  /**
   * RegraCartela updateManyAndReturn
   */
  export type RegraCartelaUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegraCartela
     */
    select?: RegraCartelaSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the RegraCartela
     */
    omit?: RegraCartelaOmit<ExtArgs> | null
    /**
     * The data used to update RegraCartelas.
     */
    data: XOR<RegraCartelaUpdateManyMutationInput, RegraCartelaUncheckedUpdateManyInput>
    /**
     * Filter which RegraCartelas to update
     */
    where?: RegraCartelaWhereInput
    /**
     * Limit how many RegraCartelas to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegraCartelaIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * RegraCartela upsert
   */
  export type RegraCartelaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegraCartela
     */
    select?: RegraCartelaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RegraCartela
     */
    omit?: RegraCartelaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegraCartelaInclude<ExtArgs> | null
    /**
     * The filter to search for the RegraCartela to update in case it exists.
     */
    where: RegraCartelaWhereUniqueInput
    /**
     * In case the RegraCartela found by the `where` argument doesn't exist, create a new RegraCartela with this data.
     */
    create: XOR<RegraCartelaCreateInput, RegraCartelaUncheckedCreateInput>
    /**
     * In case the RegraCartela was found with the provided `where` argument, update it with this data.
     */
    update: XOR<RegraCartelaUpdateInput, RegraCartelaUncheckedUpdateInput>
  }

  /**
   * RegraCartela delete
   */
  export type RegraCartelaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegraCartela
     */
    select?: RegraCartelaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RegraCartela
     */
    omit?: RegraCartelaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegraCartelaInclude<ExtArgs> | null
    /**
     * Filter which RegraCartela to delete.
     */
    where: RegraCartelaWhereUniqueInput
  }

  /**
   * RegraCartela deleteMany
   */
  export type RegraCartelaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RegraCartelas to delete
     */
    where?: RegraCartelaWhereInput
    /**
     * Limit how many RegraCartelas to delete.
     */
    limit?: number
  }

  /**
   * RegraCartela.requisitos
   */
  export type RegraCartela$requisitosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RequisitoCartela
     */
    select?: RequisitoCartelaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RequisitoCartela
     */
    omit?: RequisitoCartelaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RequisitoCartelaInclude<ExtArgs> | null
    where?: RequisitoCartelaWhereInput
    orderBy?: RequisitoCartelaOrderByWithRelationInput | RequisitoCartelaOrderByWithRelationInput[]
    cursor?: RequisitoCartelaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RequisitoCartelaScalarFieldEnum | RequisitoCartelaScalarFieldEnum[]
  }

  /**
   * RegraCartela without action
   */
  export type RegraCartelaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegraCartela
     */
    select?: RegraCartelaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RegraCartela
     */
    omit?: RegraCartelaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegraCartelaInclude<ExtArgs> | null
  }


  /**
   * Model RequisitoCartela
   */

  export type AggregateRequisitoCartela = {
    _count: RequisitoCartelaCountAggregateOutputType | null
    _avg: RequisitoCartelaAvgAggregateOutputType | null
    _sum: RequisitoCartelaSumAggregateOutputType | null
    _min: RequisitoCartelaMinAggregateOutputType | null
    _max: RequisitoCartelaMaxAggregateOutputType | null
  }

  export type RequisitoCartelaAvgAggregateOutputType = {
    quantidade: number | null
    ordem: number | null
  }

  export type RequisitoCartelaSumAggregateOutputType = {
    quantidade: number | null
    ordem: number | null
  }

  export type RequisitoCartelaMinAggregateOutputType = {
    id: string | null
    descricao: string | null
    quantidade: number | null
    tipoUnidade: $Enums.TipoUnidade | null
    ordem: number | null
    regraCartelaId: string | null
    criadoEm: Date | null
    atualizadoEm: Date | null
  }

  export type RequisitoCartelaMaxAggregateOutputType = {
    id: string | null
    descricao: string | null
    quantidade: number | null
    tipoUnidade: $Enums.TipoUnidade | null
    ordem: number | null
    regraCartelaId: string | null
    criadoEm: Date | null
    atualizadoEm: Date | null
  }

  export type RequisitoCartelaCountAggregateOutputType = {
    id: number
    descricao: number
    quantidade: number
    tipoUnidade: number
    ordem: number
    regraCartelaId: number
    criadoEm: number
    atualizadoEm: number
    _all: number
  }


  export type RequisitoCartelaAvgAggregateInputType = {
    quantidade?: true
    ordem?: true
  }

  export type RequisitoCartelaSumAggregateInputType = {
    quantidade?: true
    ordem?: true
  }

  export type RequisitoCartelaMinAggregateInputType = {
    id?: true
    descricao?: true
    quantidade?: true
    tipoUnidade?: true
    ordem?: true
    regraCartelaId?: true
    criadoEm?: true
    atualizadoEm?: true
  }

  export type RequisitoCartelaMaxAggregateInputType = {
    id?: true
    descricao?: true
    quantidade?: true
    tipoUnidade?: true
    ordem?: true
    regraCartelaId?: true
    criadoEm?: true
    atualizadoEm?: true
  }

  export type RequisitoCartelaCountAggregateInputType = {
    id?: true
    descricao?: true
    quantidade?: true
    tipoUnidade?: true
    ordem?: true
    regraCartelaId?: true
    criadoEm?: true
    atualizadoEm?: true
    _all?: true
  }

  export type RequisitoCartelaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RequisitoCartela to aggregate.
     */
    where?: RequisitoCartelaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RequisitoCartelas to fetch.
     */
    orderBy?: RequisitoCartelaOrderByWithRelationInput | RequisitoCartelaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: RequisitoCartelaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RequisitoCartelas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RequisitoCartelas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned RequisitoCartelas
    **/
    _count?: true | RequisitoCartelaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: RequisitoCartelaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: RequisitoCartelaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RequisitoCartelaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RequisitoCartelaMaxAggregateInputType
  }

  export type GetRequisitoCartelaAggregateType<T extends RequisitoCartelaAggregateArgs> = {
        [P in keyof T & keyof AggregateRequisitoCartela]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRequisitoCartela[P]>
      : GetScalarType<T[P], AggregateRequisitoCartela[P]>
  }




  export type RequisitoCartelaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RequisitoCartelaWhereInput
    orderBy?: RequisitoCartelaOrderByWithAggregationInput | RequisitoCartelaOrderByWithAggregationInput[]
    by: RequisitoCartelaScalarFieldEnum[] | RequisitoCartelaScalarFieldEnum
    having?: RequisitoCartelaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RequisitoCartelaCountAggregateInputType | true
    _avg?: RequisitoCartelaAvgAggregateInputType
    _sum?: RequisitoCartelaSumAggregateInputType
    _min?: RequisitoCartelaMinAggregateInputType
    _max?: RequisitoCartelaMaxAggregateInputType
  }

  export type RequisitoCartelaGroupByOutputType = {
    id: string
    descricao: string
    quantidade: number
    tipoUnidade: $Enums.TipoUnidade
    ordem: number
    regraCartelaId: string
    criadoEm: Date
    atualizadoEm: Date
    _count: RequisitoCartelaCountAggregateOutputType | null
    _avg: RequisitoCartelaAvgAggregateOutputType | null
    _sum: RequisitoCartelaSumAggregateOutputType | null
    _min: RequisitoCartelaMinAggregateOutputType | null
    _max: RequisitoCartelaMaxAggregateOutputType | null
  }

  type GetRequisitoCartelaGroupByPayload<T extends RequisitoCartelaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RequisitoCartelaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RequisitoCartelaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RequisitoCartelaGroupByOutputType[P]>
            : GetScalarType<T[P], RequisitoCartelaGroupByOutputType[P]>
        }
      >
    >


  export type RequisitoCartelaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    descricao?: boolean
    quantidade?: boolean
    tipoUnidade?: boolean
    ordem?: boolean
    regraCartelaId?: boolean
    criadoEm?: boolean
    atualizadoEm?: boolean
    regraCartela?: boolean | RegraCartelaDefaultArgs<ExtArgs>
    condicoes?: boolean | RequisitoCartela$condicoesArgs<ExtArgs>
    enviosVenda?: boolean | RequisitoCartela$enviosVendaArgs<ExtArgs>
    _count?: boolean | RequisitoCartelaCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["requisitoCartela"]>

  export type RequisitoCartelaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    descricao?: boolean
    quantidade?: boolean
    tipoUnidade?: boolean
    ordem?: boolean
    regraCartelaId?: boolean
    criadoEm?: boolean
    atualizadoEm?: boolean
    regraCartela?: boolean | RegraCartelaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["requisitoCartela"]>

  export type RequisitoCartelaSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    descricao?: boolean
    quantidade?: boolean
    tipoUnidade?: boolean
    ordem?: boolean
    regraCartelaId?: boolean
    criadoEm?: boolean
    atualizadoEm?: boolean
    regraCartela?: boolean | RegraCartelaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["requisitoCartela"]>

  export type RequisitoCartelaSelectScalar = {
    id?: boolean
    descricao?: boolean
    quantidade?: boolean
    tipoUnidade?: boolean
    ordem?: boolean
    regraCartelaId?: boolean
    criadoEm?: boolean
    atualizadoEm?: boolean
  }

  export type RequisitoCartelaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "descricao" | "quantidade" | "tipoUnidade" | "ordem" | "regraCartelaId" | "criadoEm" | "atualizadoEm", ExtArgs["result"]["requisitoCartela"]>
  export type RequisitoCartelaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    regraCartela?: boolean | RegraCartelaDefaultArgs<ExtArgs>
    condicoes?: boolean | RequisitoCartela$condicoesArgs<ExtArgs>
    enviosVenda?: boolean | RequisitoCartela$enviosVendaArgs<ExtArgs>
    _count?: boolean | RequisitoCartelaCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type RequisitoCartelaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    regraCartela?: boolean | RegraCartelaDefaultArgs<ExtArgs>
  }
  export type RequisitoCartelaIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    regraCartela?: boolean | RegraCartelaDefaultArgs<ExtArgs>
  }

  export type $RequisitoCartelaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "RequisitoCartela"
    objects: {
      /**
       * Referência à regra de cartela
       */
      regraCartela: Prisma.$RegraCartelaPayload<ExtArgs>
      /**
       * Lista de condições de validação (Rule Builder)
       */
      condicoes: Prisma.$CondicaoRequisitoPayload<ExtArgs>[]
      /**
       * Envios de venda submetidos contra este requisito
       */
      enviosVenda: Prisma.$EnvioVendaPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      /**
       * ID único do requisito (UUID v4)
       */
      id: string
      /**
       * Título/descrição do card mostrado ao vendedor (ex: "Lentes BlueProtect Max")
       */
      descricao: string
      /**
       * Quantidade necessária para completar este requisito
       */
      quantidade: number
      /**
       * Tipo de unidade para contabilização (PAR ou UNIDADE)
       */
      tipoUnidade: $Enums.TipoUnidade
      /**
       * Ordem do requisito dentro da cartela (1, 2, 3...)
       * CRÍTICO para spillover: requisitos com a mesma ordem entre cartelas diferentes
       * são considerados "relacionados" (ex: "Lentes X" ordem=1 em todas as cartelas)
       */
      ordem: number
      /**
       * ID da regra de cartela à qual este requisito pertence
       */
      regraCartelaId: string
      /**
       * Data de criação do registro
       */
      criadoEm: Date
      /**
       * Data da última atualização
       */
      atualizadoEm: Date
    }, ExtArgs["result"]["requisitoCartela"]>
    composites: {}
  }

  type RequisitoCartelaGetPayload<S extends boolean | null | undefined | RequisitoCartelaDefaultArgs> = $Result.GetResult<Prisma.$RequisitoCartelaPayload, S>

  type RequisitoCartelaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<RequisitoCartelaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: RequisitoCartelaCountAggregateInputType | true
    }

  export interface RequisitoCartelaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['RequisitoCartela'], meta: { name: 'RequisitoCartela' } }
    /**
     * Find zero or one RequisitoCartela that matches the filter.
     * @param {RequisitoCartelaFindUniqueArgs} args - Arguments to find a RequisitoCartela
     * @example
     * // Get one RequisitoCartela
     * const requisitoCartela = await prisma.requisitoCartela.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends RequisitoCartelaFindUniqueArgs>(args: SelectSubset<T, RequisitoCartelaFindUniqueArgs<ExtArgs>>): Prisma__RequisitoCartelaClient<$Result.GetResult<Prisma.$RequisitoCartelaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one RequisitoCartela that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {RequisitoCartelaFindUniqueOrThrowArgs} args - Arguments to find a RequisitoCartela
     * @example
     * // Get one RequisitoCartela
     * const requisitoCartela = await prisma.requisitoCartela.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends RequisitoCartelaFindUniqueOrThrowArgs>(args: SelectSubset<T, RequisitoCartelaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__RequisitoCartelaClient<$Result.GetResult<Prisma.$RequisitoCartelaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first RequisitoCartela that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RequisitoCartelaFindFirstArgs} args - Arguments to find a RequisitoCartela
     * @example
     * // Get one RequisitoCartela
     * const requisitoCartela = await prisma.requisitoCartela.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends RequisitoCartelaFindFirstArgs>(args?: SelectSubset<T, RequisitoCartelaFindFirstArgs<ExtArgs>>): Prisma__RequisitoCartelaClient<$Result.GetResult<Prisma.$RequisitoCartelaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first RequisitoCartela that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RequisitoCartelaFindFirstOrThrowArgs} args - Arguments to find a RequisitoCartela
     * @example
     * // Get one RequisitoCartela
     * const requisitoCartela = await prisma.requisitoCartela.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends RequisitoCartelaFindFirstOrThrowArgs>(args?: SelectSubset<T, RequisitoCartelaFindFirstOrThrowArgs<ExtArgs>>): Prisma__RequisitoCartelaClient<$Result.GetResult<Prisma.$RequisitoCartelaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more RequisitoCartelas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RequisitoCartelaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all RequisitoCartelas
     * const requisitoCartelas = await prisma.requisitoCartela.findMany()
     * 
     * // Get first 10 RequisitoCartelas
     * const requisitoCartelas = await prisma.requisitoCartela.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const requisitoCartelaWithIdOnly = await prisma.requisitoCartela.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends RequisitoCartelaFindManyArgs>(args?: SelectSubset<T, RequisitoCartelaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RequisitoCartelaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a RequisitoCartela.
     * @param {RequisitoCartelaCreateArgs} args - Arguments to create a RequisitoCartela.
     * @example
     * // Create one RequisitoCartela
     * const RequisitoCartela = await prisma.requisitoCartela.create({
     *   data: {
     *     // ... data to create a RequisitoCartela
     *   }
     * })
     * 
     */
    create<T extends RequisitoCartelaCreateArgs>(args: SelectSubset<T, RequisitoCartelaCreateArgs<ExtArgs>>): Prisma__RequisitoCartelaClient<$Result.GetResult<Prisma.$RequisitoCartelaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many RequisitoCartelas.
     * @param {RequisitoCartelaCreateManyArgs} args - Arguments to create many RequisitoCartelas.
     * @example
     * // Create many RequisitoCartelas
     * const requisitoCartela = await prisma.requisitoCartela.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends RequisitoCartelaCreateManyArgs>(args?: SelectSubset<T, RequisitoCartelaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many RequisitoCartelas and returns the data saved in the database.
     * @param {RequisitoCartelaCreateManyAndReturnArgs} args - Arguments to create many RequisitoCartelas.
     * @example
     * // Create many RequisitoCartelas
     * const requisitoCartela = await prisma.requisitoCartela.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many RequisitoCartelas and only return the `id`
     * const requisitoCartelaWithIdOnly = await prisma.requisitoCartela.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends RequisitoCartelaCreateManyAndReturnArgs>(args?: SelectSubset<T, RequisitoCartelaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RequisitoCartelaPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a RequisitoCartela.
     * @param {RequisitoCartelaDeleteArgs} args - Arguments to delete one RequisitoCartela.
     * @example
     * // Delete one RequisitoCartela
     * const RequisitoCartela = await prisma.requisitoCartela.delete({
     *   where: {
     *     // ... filter to delete one RequisitoCartela
     *   }
     * })
     * 
     */
    delete<T extends RequisitoCartelaDeleteArgs>(args: SelectSubset<T, RequisitoCartelaDeleteArgs<ExtArgs>>): Prisma__RequisitoCartelaClient<$Result.GetResult<Prisma.$RequisitoCartelaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one RequisitoCartela.
     * @param {RequisitoCartelaUpdateArgs} args - Arguments to update one RequisitoCartela.
     * @example
     * // Update one RequisitoCartela
     * const requisitoCartela = await prisma.requisitoCartela.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends RequisitoCartelaUpdateArgs>(args: SelectSubset<T, RequisitoCartelaUpdateArgs<ExtArgs>>): Prisma__RequisitoCartelaClient<$Result.GetResult<Prisma.$RequisitoCartelaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more RequisitoCartelas.
     * @param {RequisitoCartelaDeleteManyArgs} args - Arguments to filter RequisitoCartelas to delete.
     * @example
     * // Delete a few RequisitoCartelas
     * const { count } = await prisma.requisitoCartela.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends RequisitoCartelaDeleteManyArgs>(args?: SelectSubset<T, RequisitoCartelaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more RequisitoCartelas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RequisitoCartelaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many RequisitoCartelas
     * const requisitoCartela = await prisma.requisitoCartela.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends RequisitoCartelaUpdateManyArgs>(args: SelectSubset<T, RequisitoCartelaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more RequisitoCartelas and returns the data updated in the database.
     * @param {RequisitoCartelaUpdateManyAndReturnArgs} args - Arguments to update many RequisitoCartelas.
     * @example
     * // Update many RequisitoCartelas
     * const requisitoCartela = await prisma.requisitoCartela.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more RequisitoCartelas and only return the `id`
     * const requisitoCartelaWithIdOnly = await prisma.requisitoCartela.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends RequisitoCartelaUpdateManyAndReturnArgs>(args: SelectSubset<T, RequisitoCartelaUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RequisitoCartelaPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one RequisitoCartela.
     * @param {RequisitoCartelaUpsertArgs} args - Arguments to update or create a RequisitoCartela.
     * @example
     * // Update or create a RequisitoCartela
     * const requisitoCartela = await prisma.requisitoCartela.upsert({
     *   create: {
     *     // ... data to create a RequisitoCartela
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the RequisitoCartela we want to update
     *   }
     * })
     */
    upsert<T extends RequisitoCartelaUpsertArgs>(args: SelectSubset<T, RequisitoCartelaUpsertArgs<ExtArgs>>): Prisma__RequisitoCartelaClient<$Result.GetResult<Prisma.$RequisitoCartelaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of RequisitoCartelas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RequisitoCartelaCountArgs} args - Arguments to filter RequisitoCartelas to count.
     * @example
     * // Count the number of RequisitoCartelas
     * const count = await prisma.requisitoCartela.count({
     *   where: {
     *     // ... the filter for the RequisitoCartelas we want to count
     *   }
     * })
    **/
    count<T extends RequisitoCartelaCountArgs>(
      args?: Subset<T, RequisitoCartelaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RequisitoCartelaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a RequisitoCartela.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RequisitoCartelaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RequisitoCartelaAggregateArgs>(args: Subset<T, RequisitoCartelaAggregateArgs>): Prisma.PrismaPromise<GetRequisitoCartelaAggregateType<T>>

    /**
     * Group by RequisitoCartela.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RequisitoCartelaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends RequisitoCartelaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: RequisitoCartelaGroupByArgs['orderBy'] }
        : { orderBy?: RequisitoCartelaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, RequisitoCartelaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRequisitoCartelaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the RequisitoCartela model
   */
  readonly fields: RequisitoCartelaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for RequisitoCartela.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__RequisitoCartelaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    regraCartela<T extends RegraCartelaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, RegraCartelaDefaultArgs<ExtArgs>>): Prisma__RegraCartelaClient<$Result.GetResult<Prisma.$RegraCartelaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    condicoes<T extends RequisitoCartela$condicoesArgs<ExtArgs> = {}>(args?: Subset<T, RequisitoCartela$condicoesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CondicaoRequisitoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    enviosVenda<T extends RequisitoCartela$enviosVendaArgs<ExtArgs> = {}>(args?: Subset<T, RequisitoCartela$enviosVendaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EnvioVendaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the RequisitoCartela model
   */
  interface RequisitoCartelaFieldRefs {
    readonly id: FieldRef<"RequisitoCartela", 'String'>
    readonly descricao: FieldRef<"RequisitoCartela", 'String'>
    readonly quantidade: FieldRef<"RequisitoCartela", 'Int'>
    readonly tipoUnidade: FieldRef<"RequisitoCartela", 'TipoUnidade'>
    readonly ordem: FieldRef<"RequisitoCartela", 'Int'>
    readonly regraCartelaId: FieldRef<"RequisitoCartela", 'String'>
    readonly criadoEm: FieldRef<"RequisitoCartela", 'DateTime'>
    readonly atualizadoEm: FieldRef<"RequisitoCartela", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * RequisitoCartela findUnique
   */
  export type RequisitoCartelaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RequisitoCartela
     */
    select?: RequisitoCartelaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RequisitoCartela
     */
    omit?: RequisitoCartelaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RequisitoCartelaInclude<ExtArgs> | null
    /**
     * Filter, which RequisitoCartela to fetch.
     */
    where: RequisitoCartelaWhereUniqueInput
  }

  /**
   * RequisitoCartela findUniqueOrThrow
   */
  export type RequisitoCartelaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RequisitoCartela
     */
    select?: RequisitoCartelaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RequisitoCartela
     */
    omit?: RequisitoCartelaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RequisitoCartelaInclude<ExtArgs> | null
    /**
     * Filter, which RequisitoCartela to fetch.
     */
    where: RequisitoCartelaWhereUniqueInput
  }

  /**
   * RequisitoCartela findFirst
   */
  export type RequisitoCartelaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RequisitoCartela
     */
    select?: RequisitoCartelaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RequisitoCartela
     */
    omit?: RequisitoCartelaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RequisitoCartelaInclude<ExtArgs> | null
    /**
     * Filter, which RequisitoCartela to fetch.
     */
    where?: RequisitoCartelaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RequisitoCartelas to fetch.
     */
    orderBy?: RequisitoCartelaOrderByWithRelationInput | RequisitoCartelaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RequisitoCartelas.
     */
    cursor?: RequisitoCartelaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RequisitoCartelas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RequisitoCartelas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RequisitoCartelas.
     */
    distinct?: RequisitoCartelaScalarFieldEnum | RequisitoCartelaScalarFieldEnum[]
  }

  /**
   * RequisitoCartela findFirstOrThrow
   */
  export type RequisitoCartelaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RequisitoCartela
     */
    select?: RequisitoCartelaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RequisitoCartela
     */
    omit?: RequisitoCartelaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RequisitoCartelaInclude<ExtArgs> | null
    /**
     * Filter, which RequisitoCartela to fetch.
     */
    where?: RequisitoCartelaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RequisitoCartelas to fetch.
     */
    orderBy?: RequisitoCartelaOrderByWithRelationInput | RequisitoCartelaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RequisitoCartelas.
     */
    cursor?: RequisitoCartelaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RequisitoCartelas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RequisitoCartelas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RequisitoCartelas.
     */
    distinct?: RequisitoCartelaScalarFieldEnum | RequisitoCartelaScalarFieldEnum[]
  }

  /**
   * RequisitoCartela findMany
   */
  export type RequisitoCartelaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RequisitoCartela
     */
    select?: RequisitoCartelaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RequisitoCartela
     */
    omit?: RequisitoCartelaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RequisitoCartelaInclude<ExtArgs> | null
    /**
     * Filter, which RequisitoCartelas to fetch.
     */
    where?: RequisitoCartelaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RequisitoCartelas to fetch.
     */
    orderBy?: RequisitoCartelaOrderByWithRelationInput | RequisitoCartelaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing RequisitoCartelas.
     */
    cursor?: RequisitoCartelaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RequisitoCartelas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RequisitoCartelas.
     */
    skip?: number
    distinct?: RequisitoCartelaScalarFieldEnum | RequisitoCartelaScalarFieldEnum[]
  }

  /**
   * RequisitoCartela create
   */
  export type RequisitoCartelaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RequisitoCartela
     */
    select?: RequisitoCartelaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RequisitoCartela
     */
    omit?: RequisitoCartelaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RequisitoCartelaInclude<ExtArgs> | null
    /**
     * The data needed to create a RequisitoCartela.
     */
    data: XOR<RequisitoCartelaCreateInput, RequisitoCartelaUncheckedCreateInput>
  }

  /**
   * RequisitoCartela createMany
   */
  export type RequisitoCartelaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many RequisitoCartelas.
     */
    data: RequisitoCartelaCreateManyInput | RequisitoCartelaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * RequisitoCartela createManyAndReturn
   */
  export type RequisitoCartelaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RequisitoCartela
     */
    select?: RequisitoCartelaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the RequisitoCartela
     */
    omit?: RequisitoCartelaOmit<ExtArgs> | null
    /**
     * The data used to create many RequisitoCartelas.
     */
    data: RequisitoCartelaCreateManyInput | RequisitoCartelaCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RequisitoCartelaIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * RequisitoCartela update
   */
  export type RequisitoCartelaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RequisitoCartela
     */
    select?: RequisitoCartelaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RequisitoCartela
     */
    omit?: RequisitoCartelaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RequisitoCartelaInclude<ExtArgs> | null
    /**
     * The data needed to update a RequisitoCartela.
     */
    data: XOR<RequisitoCartelaUpdateInput, RequisitoCartelaUncheckedUpdateInput>
    /**
     * Choose, which RequisitoCartela to update.
     */
    where: RequisitoCartelaWhereUniqueInput
  }

  /**
   * RequisitoCartela updateMany
   */
  export type RequisitoCartelaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update RequisitoCartelas.
     */
    data: XOR<RequisitoCartelaUpdateManyMutationInput, RequisitoCartelaUncheckedUpdateManyInput>
    /**
     * Filter which RequisitoCartelas to update
     */
    where?: RequisitoCartelaWhereInput
    /**
     * Limit how many RequisitoCartelas to update.
     */
    limit?: number
  }

  /**
   * RequisitoCartela updateManyAndReturn
   */
  export type RequisitoCartelaUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RequisitoCartela
     */
    select?: RequisitoCartelaSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the RequisitoCartela
     */
    omit?: RequisitoCartelaOmit<ExtArgs> | null
    /**
     * The data used to update RequisitoCartelas.
     */
    data: XOR<RequisitoCartelaUpdateManyMutationInput, RequisitoCartelaUncheckedUpdateManyInput>
    /**
     * Filter which RequisitoCartelas to update
     */
    where?: RequisitoCartelaWhereInput
    /**
     * Limit how many RequisitoCartelas to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RequisitoCartelaIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * RequisitoCartela upsert
   */
  export type RequisitoCartelaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RequisitoCartela
     */
    select?: RequisitoCartelaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RequisitoCartela
     */
    omit?: RequisitoCartelaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RequisitoCartelaInclude<ExtArgs> | null
    /**
     * The filter to search for the RequisitoCartela to update in case it exists.
     */
    where: RequisitoCartelaWhereUniqueInput
    /**
     * In case the RequisitoCartela found by the `where` argument doesn't exist, create a new RequisitoCartela with this data.
     */
    create: XOR<RequisitoCartelaCreateInput, RequisitoCartelaUncheckedCreateInput>
    /**
     * In case the RequisitoCartela was found with the provided `where` argument, update it with this data.
     */
    update: XOR<RequisitoCartelaUpdateInput, RequisitoCartelaUncheckedUpdateInput>
  }

  /**
   * RequisitoCartela delete
   */
  export type RequisitoCartelaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RequisitoCartela
     */
    select?: RequisitoCartelaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RequisitoCartela
     */
    omit?: RequisitoCartelaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RequisitoCartelaInclude<ExtArgs> | null
    /**
     * Filter which RequisitoCartela to delete.
     */
    where: RequisitoCartelaWhereUniqueInput
  }

  /**
   * RequisitoCartela deleteMany
   */
  export type RequisitoCartelaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RequisitoCartelas to delete
     */
    where?: RequisitoCartelaWhereInput
    /**
     * Limit how many RequisitoCartelas to delete.
     */
    limit?: number
  }

  /**
   * RequisitoCartela.condicoes
   */
  export type RequisitoCartela$condicoesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CondicaoRequisito
     */
    select?: CondicaoRequisitoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CondicaoRequisito
     */
    omit?: CondicaoRequisitoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CondicaoRequisitoInclude<ExtArgs> | null
    where?: CondicaoRequisitoWhereInput
    orderBy?: CondicaoRequisitoOrderByWithRelationInput | CondicaoRequisitoOrderByWithRelationInput[]
    cursor?: CondicaoRequisitoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CondicaoRequisitoScalarFieldEnum | CondicaoRequisitoScalarFieldEnum[]
  }

  /**
   * RequisitoCartela.enviosVenda
   */
  export type RequisitoCartela$enviosVendaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EnvioVenda
     */
    select?: EnvioVendaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EnvioVenda
     */
    omit?: EnvioVendaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EnvioVendaInclude<ExtArgs> | null
    where?: EnvioVendaWhereInput
    orderBy?: EnvioVendaOrderByWithRelationInput | EnvioVendaOrderByWithRelationInput[]
    cursor?: EnvioVendaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EnvioVendaScalarFieldEnum | EnvioVendaScalarFieldEnum[]
  }

  /**
   * RequisitoCartela without action
   */
  export type RequisitoCartelaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RequisitoCartela
     */
    select?: RequisitoCartelaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RequisitoCartela
     */
    omit?: RequisitoCartelaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RequisitoCartelaInclude<ExtArgs> | null
  }


  /**
   * Model CondicaoRequisito
   */

  export type AggregateCondicaoRequisito = {
    _count: CondicaoRequisitoCountAggregateOutputType | null
    _min: CondicaoRequisitoMinAggregateOutputType | null
    _max: CondicaoRequisitoMaxAggregateOutputType | null
  }

  export type CondicaoRequisitoMinAggregateOutputType = {
    id: string | null
    campo: $Enums.CampoVerificacao | null
    operador: $Enums.OperadorCondicao | null
    valor: string | null
    requisitoId: string | null
    criadoEm: Date | null
    atualizadoEm: Date | null
  }

  export type CondicaoRequisitoMaxAggregateOutputType = {
    id: string | null
    campo: $Enums.CampoVerificacao | null
    operador: $Enums.OperadorCondicao | null
    valor: string | null
    requisitoId: string | null
    criadoEm: Date | null
    atualizadoEm: Date | null
  }

  export type CondicaoRequisitoCountAggregateOutputType = {
    id: number
    campo: number
    operador: number
    valor: number
    requisitoId: number
    criadoEm: number
    atualizadoEm: number
    _all: number
  }


  export type CondicaoRequisitoMinAggregateInputType = {
    id?: true
    campo?: true
    operador?: true
    valor?: true
    requisitoId?: true
    criadoEm?: true
    atualizadoEm?: true
  }

  export type CondicaoRequisitoMaxAggregateInputType = {
    id?: true
    campo?: true
    operador?: true
    valor?: true
    requisitoId?: true
    criadoEm?: true
    atualizadoEm?: true
  }

  export type CondicaoRequisitoCountAggregateInputType = {
    id?: true
    campo?: true
    operador?: true
    valor?: true
    requisitoId?: true
    criadoEm?: true
    atualizadoEm?: true
    _all?: true
  }

  export type CondicaoRequisitoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CondicaoRequisito to aggregate.
     */
    where?: CondicaoRequisitoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CondicaoRequisitos to fetch.
     */
    orderBy?: CondicaoRequisitoOrderByWithRelationInput | CondicaoRequisitoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CondicaoRequisitoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CondicaoRequisitos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CondicaoRequisitos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned CondicaoRequisitos
    **/
    _count?: true | CondicaoRequisitoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CondicaoRequisitoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CondicaoRequisitoMaxAggregateInputType
  }

  export type GetCondicaoRequisitoAggregateType<T extends CondicaoRequisitoAggregateArgs> = {
        [P in keyof T & keyof AggregateCondicaoRequisito]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCondicaoRequisito[P]>
      : GetScalarType<T[P], AggregateCondicaoRequisito[P]>
  }




  export type CondicaoRequisitoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CondicaoRequisitoWhereInput
    orderBy?: CondicaoRequisitoOrderByWithAggregationInput | CondicaoRequisitoOrderByWithAggregationInput[]
    by: CondicaoRequisitoScalarFieldEnum[] | CondicaoRequisitoScalarFieldEnum
    having?: CondicaoRequisitoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CondicaoRequisitoCountAggregateInputType | true
    _min?: CondicaoRequisitoMinAggregateInputType
    _max?: CondicaoRequisitoMaxAggregateInputType
  }

  export type CondicaoRequisitoGroupByOutputType = {
    id: string
    campo: $Enums.CampoVerificacao
    operador: $Enums.OperadorCondicao
    valor: string
    requisitoId: string
    criadoEm: Date
    atualizadoEm: Date
    _count: CondicaoRequisitoCountAggregateOutputType | null
    _min: CondicaoRequisitoMinAggregateOutputType | null
    _max: CondicaoRequisitoMaxAggregateOutputType | null
  }

  type GetCondicaoRequisitoGroupByPayload<T extends CondicaoRequisitoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CondicaoRequisitoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CondicaoRequisitoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CondicaoRequisitoGroupByOutputType[P]>
            : GetScalarType<T[P], CondicaoRequisitoGroupByOutputType[P]>
        }
      >
    >


  export type CondicaoRequisitoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    campo?: boolean
    operador?: boolean
    valor?: boolean
    requisitoId?: boolean
    criadoEm?: boolean
    atualizadoEm?: boolean
    requisito?: boolean | RequisitoCartelaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["condicaoRequisito"]>

  export type CondicaoRequisitoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    campo?: boolean
    operador?: boolean
    valor?: boolean
    requisitoId?: boolean
    criadoEm?: boolean
    atualizadoEm?: boolean
    requisito?: boolean | RequisitoCartelaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["condicaoRequisito"]>

  export type CondicaoRequisitoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    campo?: boolean
    operador?: boolean
    valor?: boolean
    requisitoId?: boolean
    criadoEm?: boolean
    atualizadoEm?: boolean
    requisito?: boolean | RequisitoCartelaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["condicaoRequisito"]>

  export type CondicaoRequisitoSelectScalar = {
    id?: boolean
    campo?: boolean
    operador?: boolean
    valor?: boolean
    requisitoId?: boolean
    criadoEm?: boolean
    atualizadoEm?: boolean
  }

  export type CondicaoRequisitoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "campo" | "operador" | "valor" | "requisitoId" | "criadoEm" | "atualizadoEm", ExtArgs["result"]["condicaoRequisito"]>
  export type CondicaoRequisitoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    requisito?: boolean | RequisitoCartelaDefaultArgs<ExtArgs>
  }
  export type CondicaoRequisitoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    requisito?: boolean | RequisitoCartelaDefaultArgs<ExtArgs>
  }
  export type CondicaoRequisitoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    requisito?: boolean | RequisitoCartelaDefaultArgs<ExtArgs>
  }

  export type $CondicaoRequisitoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "CondicaoRequisito"
    objects: {
      /**
       * Referência ao requisito
       */
      requisito: Prisma.$RequisitoCartelaPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      /**
       * ID único da condição (UUID v4)
       */
      id: string
      /**
       * Campo do pedido que será verificado
       */
      campo: $Enums.CampoVerificacao
      /**
       * Operador lógico da comparação
       */
      operador: $Enums.OperadorCondicao
      /**
       * Valor de referência para a comparação
       */
      valor: string
      /**
       * ID do requisito ao qual esta condição pertence
       */
      requisitoId: string
      /**
       * Data de criação do registro
       */
      criadoEm: Date
      /**
       * Data da última atualização
       */
      atualizadoEm: Date
    }, ExtArgs["result"]["condicaoRequisito"]>
    composites: {}
  }

  type CondicaoRequisitoGetPayload<S extends boolean | null | undefined | CondicaoRequisitoDefaultArgs> = $Result.GetResult<Prisma.$CondicaoRequisitoPayload, S>

  type CondicaoRequisitoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CondicaoRequisitoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CondicaoRequisitoCountAggregateInputType | true
    }

  export interface CondicaoRequisitoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['CondicaoRequisito'], meta: { name: 'CondicaoRequisito' } }
    /**
     * Find zero or one CondicaoRequisito that matches the filter.
     * @param {CondicaoRequisitoFindUniqueArgs} args - Arguments to find a CondicaoRequisito
     * @example
     * // Get one CondicaoRequisito
     * const condicaoRequisito = await prisma.condicaoRequisito.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CondicaoRequisitoFindUniqueArgs>(args: SelectSubset<T, CondicaoRequisitoFindUniqueArgs<ExtArgs>>): Prisma__CondicaoRequisitoClient<$Result.GetResult<Prisma.$CondicaoRequisitoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one CondicaoRequisito that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CondicaoRequisitoFindUniqueOrThrowArgs} args - Arguments to find a CondicaoRequisito
     * @example
     * // Get one CondicaoRequisito
     * const condicaoRequisito = await prisma.condicaoRequisito.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CondicaoRequisitoFindUniqueOrThrowArgs>(args: SelectSubset<T, CondicaoRequisitoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CondicaoRequisitoClient<$Result.GetResult<Prisma.$CondicaoRequisitoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CondicaoRequisito that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CondicaoRequisitoFindFirstArgs} args - Arguments to find a CondicaoRequisito
     * @example
     * // Get one CondicaoRequisito
     * const condicaoRequisito = await prisma.condicaoRequisito.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CondicaoRequisitoFindFirstArgs>(args?: SelectSubset<T, CondicaoRequisitoFindFirstArgs<ExtArgs>>): Prisma__CondicaoRequisitoClient<$Result.GetResult<Prisma.$CondicaoRequisitoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CondicaoRequisito that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CondicaoRequisitoFindFirstOrThrowArgs} args - Arguments to find a CondicaoRequisito
     * @example
     * // Get one CondicaoRequisito
     * const condicaoRequisito = await prisma.condicaoRequisito.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CondicaoRequisitoFindFirstOrThrowArgs>(args?: SelectSubset<T, CondicaoRequisitoFindFirstOrThrowArgs<ExtArgs>>): Prisma__CondicaoRequisitoClient<$Result.GetResult<Prisma.$CondicaoRequisitoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more CondicaoRequisitos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CondicaoRequisitoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all CondicaoRequisitos
     * const condicaoRequisitos = await prisma.condicaoRequisito.findMany()
     * 
     * // Get first 10 CondicaoRequisitos
     * const condicaoRequisitos = await prisma.condicaoRequisito.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const condicaoRequisitoWithIdOnly = await prisma.condicaoRequisito.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CondicaoRequisitoFindManyArgs>(args?: SelectSubset<T, CondicaoRequisitoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CondicaoRequisitoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a CondicaoRequisito.
     * @param {CondicaoRequisitoCreateArgs} args - Arguments to create a CondicaoRequisito.
     * @example
     * // Create one CondicaoRequisito
     * const CondicaoRequisito = await prisma.condicaoRequisito.create({
     *   data: {
     *     // ... data to create a CondicaoRequisito
     *   }
     * })
     * 
     */
    create<T extends CondicaoRequisitoCreateArgs>(args: SelectSubset<T, CondicaoRequisitoCreateArgs<ExtArgs>>): Prisma__CondicaoRequisitoClient<$Result.GetResult<Prisma.$CondicaoRequisitoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many CondicaoRequisitos.
     * @param {CondicaoRequisitoCreateManyArgs} args - Arguments to create many CondicaoRequisitos.
     * @example
     * // Create many CondicaoRequisitos
     * const condicaoRequisito = await prisma.condicaoRequisito.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CondicaoRequisitoCreateManyArgs>(args?: SelectSubset<T, CondicaoRequisitoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many CondicaoRequisitos and returns the data saved in the database.
     * @param {CondicaoRequisitoCreateManyAndReturnArgs} args - Arguments to create many CondicaoRequisitos.
     * @example
     * // Create many CondicaoRequisitos
     * const condicaoRequisito = await prisma.condicaoRequisito.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many CondicaoRequisitos and only return the `id`
     * const condicaoRequisitoWithIdOnly = await prisma.condicaoRequisito.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CondicaoRequisitoCreateManyAndReturnArgs>(args?: SelectSubset<T, CondicaoRequisitoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CondicaoRequisitoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a CondicaoRequisito.
     * @param {CondicaoRequisitoDeleteArgs} args - Arguments to delete one CondicaoRequisito.
     * @example
     * // Delete one CondicaoRequisito
     * const CondicaoRequisito = await prisma.condicaoRequisito.delete({
     *   where: {
     *     // ... filter to delete one CondicaoRequisito
     *   }
     * })
     * 
     */
    delete<T extends CondicaoRequisitoDeleteArgs>(args: SelectSubset<T, CondicaoRequisitoDeleteArgs<ExtArgs>>): Prisma__CondicaoRequisitoClient<$Result.GetResult<Prisma.$CondicaoRequisitoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one CondicaoRequisito.
     * @param {CondicaoRequisitoUpdateArgs} args - Arguments to update one CondicaoRequisito.
     * @example
     * // Update one CondicaoRequisito
     * const condicaoRequisito = await prisma.condicaoRequisito.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CondicaoRequisitoUpdateArgs>(args: SelectSubset<T, CondicaoRequisitoUpdateArgs<ExtArgs>>): Prisma__CondicaoRequisitoClient<$Result.GetResult<Prisma.$CondicaoRequisitoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more CondicaoRequisitos.
     * @param {CondicaoRequisitoDeleteManyArgs} args - Arguments to filter CondicaoRequisitos to delete.
     * @example
     * // Delete a few CondicaoRequisitos
     * const { count } = await prisma.condicaoRequisito.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CondicaoRequisitoDeleteManyArgs>(args?: SelectSubset<T, CondicaoRequisitoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CondicaoRequisitos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CondicaoRequisitoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many CondicaoRequisitos
     * const condicaoRequisito = await prisma.condicaoRequisito.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CondicaoRequisitoUpdateManyArgs>(args: SelectSubset<T, CondicaoRequisitoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CondicaoRequisitos and returns the data updated in the database.
     * @param {CondicaoRequisitoUpdateManyAndReturnArgs} args - Arguments to update many CondicaoRequisitos.
     * @example
     * // Update many CondicaoRequisitos
     * const condicaoRequisito = await prisma.condicaoRequisito.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more CondicaoRequisitos and only return the `id`
     * const condicaoRequisitoWithIdOnly = await prisma.condicaoRequisito.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends CondicaoRequisitoUpdateManyAndReturnArgs>(args: SelectSubset<T, CondicaoRequisitoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CondicaoRequisitoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one CondicaoRequisito.
     * @param {CondicaoRequisitoUpsertArgs} args - Arguments to update or create a CondicaoRequisito.
     * @example
     * // Update or create a CondicaoRequisito
     * const condicaoRequisito = await prisma.condicaoRequisito.upsert({
     *   create: {
     *     // ... data to create a CondicaoRequisito
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the CondicaoRequisito we want to update
     *   }
     * })
     */
    upsert<T extends CondicaoRequisitoUpsertArgs>(args: SelectSubset<T, CondicaoRequisitoUpsertArgs<ExtArgs>>): Prisma__CondicaoRequisitoClient<$Result.GetResult<Prisma.$CondicaoRequisitoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of CondicaoRequisitos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CondicaoRequisitoCountArgs} args - Arguments to filter CondicaoRequisitos to count.
     * @example
     * // Count the number of CondicaoRequisitos
     * const count = await prisma.condicaoRequisito.count({
     *   where: {
     *     // ... the filter for the CondicaoRequisitos we want to count
     *   }
     * })
    **/
    count<T extends CondicaoRequisitoCountArgs>(
      args?: Subset<T, CondicaoRequisitoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CondicaoRequisitoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a CondicaoRequisito.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CondicaoRequisitoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CondicaoRequisitoAggregateArgs>(args: Subset<T, CondicaoRequisitoAggregateArgs>): Prisma.PrismaPromise<GetCondicaoRequisitoAggregateType<T>>

    /**
     * Group by CondicaoRequisito.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CondicaoRequisitoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CondicaoRequisitoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CondicaoRequisitoGroupByArgs['orderBy'] }
        : { orderBy?: CondicaoRequisitoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CondicaoRequisitoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCondicaoRequisitoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the CondicaoRequisito model
   */
  readonly fields: CondicaoRequisitoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for CondicaoRequisito.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CondicaoRequisitoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    requisito<T extends RequisitoCartelaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, RequisitoCartelaDefaultArgs<ExtArgs>>): Prisma__RequisitoCartelaClient<$Result.GetResult<Prisma.$RequisitoCartelaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the CondicaoRequisito model
   */
  interface CondicaoRequisitoFieldRefs {
    readonly id: FieldRef<"CondicaoRequisito", 'String'>
    readonly campo: FieldRef<"CondicaoRequisito", 'CampoVerificacao'>
    readonly operador: FieldRef<"CondicaoRequisito", 'OperadorCondicao'>
    readonly valor: FieldRef<"CondicaoRequisito", 'String'>
    readonly requisitoId: FieldRef<"CondicaoRequisito", 'String'>
    readonly criadoEm: FieldRef<"CondicaoRequisito", 'DateTime'>
    readonly atualizadoEm: FieldRef<"CondicaoRequisito", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * CondicaoRequisito findUnique
   */
  export type CondicaoRequisitoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CondicaoRequisito
     */
    select?: CondicaoRequisitoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CondicaoRequisito
     */
    omit?: CondicaoRequisitoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CondicaoRequisitoInclude<ExtArgs> | null
    /**
     * Filter, which CondicaoRequisito to fetch.
     */
    where: CondicaoRequisitoWhereUniqueInput
  }

  /**
   * CondicaoRequisito findUniqueOrThrow
   */
  export type CondicaoRequisitoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CondicaoRequisito
     */
    select?: CondicaoRequisitoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CondicaoRequisito
     */
    omit?: CondicaoRequisitoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CondicaoRequisitoInclude<ExtArgs> | null
    /**
     * Filter, which CondicaoRequisito to fetch.
     */
    where: CondicaoRequisitoWhereUniqueInput
  }

  /**
   * CondicaoRequisito findFirst
   */
  export type CondicaoRequisitoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CondicaoRequisito
     */
    select?: CondicaoRequisitoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CondicaoRequisito
     */
    omit?: CondicaoRequisitoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CondicaoRequisitoInclude<ExtArgs> | null
    /**
     * Filter, which CondicaoRequisito to fetch.
     */
    where?: CondicaoRequisitoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CondicaoRequisitos to fetch.
     */
    orderBy?: CondicaoRequisitoOrderByWithRelationInput | CondicaoRequisitoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CondicaoRequisitos.
     */
    cursor?: CondicaoRequisitoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CondicaoRequisitos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CondicaoRequisitos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CondicaoRequisitos.
     */
    distinct?: CondicaoRequisitoScalarFieldEnum | CondicaoRequisitoScalarFieldEnum[]
  }

  /**
   * CondicaoRequisito findFirstOrThrow
   */
  export type CondicaoRequisitoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CondicaoRequisito
     */
    select?: CondicaoRequisitoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CondicaoRequisito
     */
    omit?: CondicaoRequisitoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CondicaoRequisitoInclude<ExtArgs> | null
    /**
     * Filter, which CondicaoRequisito to fetch.
     */
    where?: CondicaoRequisitoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CondicaoRequisitos to fetch.
     */
    orderBy?: CondicaoRequisitoOrderByWithRelationInput | CondicaoRequisitoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CondicaoRequisitos.
     */
    cursor?: CondicaoRequisitoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CondicaoRequisitos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CondicaoRequisitos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CondicaoRequisitos.
     */
    distinct?: CondicaoRequisitoScalarFieldEnum | CondicaoRequisitoScalarFieldEnum[]
  }

  /**
   * CondicaoRequisito findMany
   */
  export type CondicaoRequisitoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CondicaoRequisito
     */
    select?: CondicaoRequisitoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CondicaoRequisito
     */
    omit?: CondicaoRequisitoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CondicaoRequisitoInclude<ExtArgs> | null
    /**
     * Filter, which CondicaoRequisitos to fetch.
     */
    where?: CondicaoRequisitoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CondicaoRequisitos to fetch.
     */
    orderBy?: CondicaoRequisitoOrderByWithRelationInput | CondicaoRequisitoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing CondicaoRequisitos.
     */
    cursor?: CondicaoRequisitoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CondicaoRequisitos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CondicaoRequisitos.
     */
    skip?: number
    distinct?: CondicaoRequisitoScalarFieldEnum | CondicaoRequisitoScalarFieldEnum[]
  }

  /**
   * CondicaoRequisito create
   */
  export type CondicaoRequisitoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CondicaoRequisito
     */
    select?: CondicaoRequisitoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CondicaoRequisito
     */
    omit?: CondicaoRequisitoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CondicaoRequisitoInclude<ExtArgs> | null
    /**
     * The data needed to create a CondicaoRequisito.
     */
    data: XOR<CondicaoRequisitoCreateInput, CondicaoRequisitoUncheckedCreateInput>
  }

  /**
   * CondicaoRequisito createMany
   */
  export type CondicaoRequisitoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many CondicaoRequisitos.
     */
    data: CondicaoRequisitoCreateManyInput | CondicaoRequisitoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * CondicaoRequisito createManyAndReturn
   */
  export type CondicaoRequisitoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CondicaoRequisito
     */
    select?: CondicaoRequisitoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CondicaoRequisito
     */
    omit?: CondicaoRequisitoOmit<ExtArgs> | null
    /**
     * The data used to create many CondicaoRequisitos.
     */
    data: CondicaoRequisitoCreateManyInput | CondicaoRequisitoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CondicaoRequisitoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * CondicaoRequisito update
   */
  export type CondicaoRequisitoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CondicaoRequisito
     */
    select?: CondicaoRequisitoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CondicaoRequisito
     */
    omit?: CondicaoRequisitoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CondicaoRequisitoInclude<ExtArgs> | null
    /**
     * The data needed to update a CondicaoRequisito.
     */
    data: XOR<CondicaoRequisitoUpdateInput, CondicaoRequisitoUncheckedUpdateInput>
    /**
     * Choose, which CondicaoRequisito to update.
     */
    where: CondicaoRequisitoWhereUniqueInput
  }

  /**
   * CondicaoRequisito updateMany
   */
  export type CondicaoRequisitoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update CondicaoRequisitos.
     */
    data: XOR<CondicaoRequisitoUpdateManyMutationInput, CondicaoRequisitoUncheckedUpdateManyInput>
    /**
     * Filter which CondicaoRequisitos to update
     */
    where?: CondicaoRequisitoWhereInput
    /**
     * Limit how many CondicaoRequisitos to update.
     */
    limit?: number
  }

  /**
   * CondicaoRequisito updateManyAndReturn
   */
  export type CondicaoRequisitoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CondicaoRequisito
     */
    select?: CondicaoRequisitoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CondicaoRequisito
     */
    omit?: CondicaoRequisitoOmit<ExtArgs> | null
    /**
     * The data used to update CondicaoRequisitos.
     */
    data: XOR<CondicaoRequisitoUpdateManyMutationInput, CondicaoRequisitoUncheckedUpdateManyInput>
    /**
     * Filter which CondicaoRequisitos to update
     */
    where?: CondicaoRequisitoWhereInput
    /**
     * Limit how many CondicaoRequisitos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CondicaoRequisitoIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * CondicaoRequisito upsert
   */
  export type CondicaoRequisitoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CondicaoRequisito
     */
    select?: CondicaoRequisitoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CondicaoRequisito
     */
    omit?: CondicaoRequisitoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CondicaoRequisitoInclude<ExtArgs> | null
    /**
     * The filter to search for the CondicaoRequisito to update in case it exists.
     */
    where: CondicaoRequisitoWhereUniqueInput
    /**
     * In case the CondicaoRequisito found by the `where` argument doesn't exist, create a new CondicaoRequisito with this data.
     */
    create: XOR<CondicaoRequisitoCreateInput, CondicaoRequisitoUncheckedCreateInput>
    /**
     * In case the CondicaoRequisito was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CondicaoRequisitoUpdateInput, CondicaoRequisitoUncheckedUpdateInput>
  }

  /**
   * CondicaoRequisito delete
   */
  export type CondicaoRequisitoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CondicaoRequisito
     */
    select?: CondicaoRequisitoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CondicaoRequisito
     */
    omit?: CondicaoRequisitoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CondicaoRequisitoInclude<ExtArgs> | null
    /**
     * Filter which CondicaoRequisito to delete.
     */
    where: CondicaoRequisitoWhereUniqueInput
  }

  /**
   * CondicaoRequisito deleteMany
   */
  export type CondicaoRequisitoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CondicaoRequisitos to delete
     */
    where?: CondicaoRequisitoWhereInput
    /**
     * Limit how many CondicaoRequisitos to delete.
     */
    limit?: number
  }

  /**
   * CondicaoRequisito without action
   */
  export type CondicaoRequisitoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CondicaoRequisito
     */
    select?: CondicaoRequisitoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CondicaoRequisito
     */
    omit?: CondicaoRequisitoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CondicaoRequisitoInclude<ExtArgs> | null
  }


  /**
   * Model EnvioVenda
   */

  export type AggregateEnvioVenda = {
    _count: EnvioVendaCountAggregateOutputType | null
    _avg: EnvioVendaAvgAggregateOutputType | null
    _sum: EnvioVendaSumAggregateOutputType | null
    _min: EnvioVendaMinAggregateOutputType | null
    _max: EnvioVendaMaxAggregateOutputType | null
  }

  export type EnvioVendaAvgAggregateOutputType = {
    numeroCartelaAtendida: number | null
  }

  export type EnvioVendaSumAggregateOutputType = {
    numeroCartelaAtendida: number | null
  }

  export type EnvioVendaMinAggregateOutputType = {
    id: string | null
    numeroPedido: string | null
    status: $Enums.StatusEnvioVenda | null
    dataEnvio: Date | null
    motivoRejeicao: string | null
    infoConflito: string | null
    numeroCartelaAtendida: number | null
    dataValidacao: Date | null
    vendedorId: string | null
    campanhaId: string | null
    requisitoId: string | null
    criadoEm: Date | null
    atualizadoEm: Date | null
  }

  export type EnvioVendaMaxAggregateOutputType = {
    id: string | null
    numeroPedido: string | null
    status: $Enums.StatusEnvioVenda | null
    dataEnvio: Date | null
    motivoRejeicao: string | null
    infoConflito: string | null
    numeroCartelaAtendida: number | null
    dataValidacao: Date | null
    vendedorId: string | null
    campanhaId: string | null
    requisitoId: string | null
    criadoEm: Date | null
    atualizadoEm: Date | null
  }

  export type EnvioVendaCountAggregateOutputType = {
    id: number
    numeroPedido: number
    status: number
    dataEnvio: number
    motivoRejeicao: number
    infoConflito: number
    numeroCartelaAtendida: number
    dataValidacao: number
    vendedorId: number
    campanhaId: number
    requisitoId: number
    criadoEm: number
    atualizadoEm: number
    _all: number
  }


  export type EnvioVendaAvgAggregateInputType = {
    numeroCartelaAtendida?: true
  }

  export type EnvioVendaSumAggregateInputType = {
    numeroCartelaAtendida?: true
  }

  export type EnvioVendaMinAggregateInputType = {
    id?: true
    numeroPedido?: true
    status?: true
    dataEnvio?: true
    motivoRejeicao?: true
    infoConflito?: true
    numeroCartelaAtendida?: true
    dataValidacao?: true
    vendedorId?: true
    campanhaId?: true
    requisitoId?: true
    criadoEm?: true
    atualizadoEm?: true
  }

  export type EnvioVendaMaxAggregateInputType = {
    id?: true
    numeroPedido?: true
    status?: true
    dataEnvio?: true
    motivoRejeicao?: true
    infoConflito?: true
    numeroCartelaAtendida?: true
    dataValidacao?: true
    vendedorId?: true
    campanhaId?: true
    requisitoId?: true
    criadoEm?: true
    atualizadoEm?: true
  }

  export type EnvioVendaCountAggregateInputType = {
    id?: true
    numeroPedido?: true
    status?: true
    dataEnvio?: true
    motivoRejeicao?: true
    infoConflito?: true
    numeroCartelaAtendida?: true
    dataValidacao?: true
    vendedorId?: true
    campanhaId?: true
    requisitoId?: true
    criadoEm?: true
    atualizadoEm?: true
    _all?: true
  }

  export type EnvioVendaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which EnvioVenda to aggregate.
     */
    where?: EnvioVendaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EnvioVendas to fetch.
     */
    orderBy?: EnvioVendaOrderByWithRelationInput | EnvioVendaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: EnvioVendaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EnvioVendas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EnvioVendas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned EnvioVendas
    **/
    _count?: true | EnvioVendaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: EnvioVendaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: EnvioVendaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EnvioVendaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EnvioVendaMaxAggregateInputType
  }

  export type GetEnvioVendaAggregateType<T extends EnvioVendaAggregateArgs> = {
        [P in keyof T & keyof AggregateEnvioVenda]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEnvioVenda[P]>
      : GetScalarType<T[P], AggregateEnvioVenda[P]>
  }




  export type EnvioVendaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EnvioVendaWhereInput
    orderBy?: EnvioVendaOrderByWithAggregationInput | EnvioVendaOrderByWithAggregationInput[]
    by: EnvioVendaScalarFieldEnum[] | EnvioVendaScalarFieldEnum
    having?: EnvioVendaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EnvioVendaCountAggregateInputType | true
    _avg?: EnvioVendaAvgAggregateInputType
    _sum?: EnvioVendaSumAggregateInputType
    _min?: EnvioVendaMinAggregateInputType
    _max?: EnvioVendaMaxAggregateInputType
  }

  export type EnvioVendaGroupByOutputType = {
    id: string
    numeroPedido: string
    status: $Enums.StatusEnvioVenda
    dataEnvio: Date
    motivoRejeicao: string | null
    infoConflito: string | null
    numeroCartelaAtendida: number | null
    dataValidacao: Date | null
    vendedorId: string
    campanhaId: string
    requisitoId: string
    criadoEm: Date
    atualizadoEm: Date
    _count: EnvioVendaCountAggregateOutputType | null
    _avg: EnvioVendaAvgAggregateOutputType | null
    _sum: EnvioVendaSumAggregateOutputType | null
    _min: EnvioVendaMinAggregateOutputType | null
    _max: EnvioVendaMaxAggregateOutputType | null
  }

  type GetEnvioVendaGroupByPayload<T extends EnvioVendaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EnvioVendaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EnvioVendaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EnvioVendaGroupByOutputType[P]>
            : GetScalarType<T[P], EnvioVendaGroupByOutputType[P]>
        }
      >
    >


  export type EnvioVendaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    numeroPedido?: boolean
    status?: boolean
    dataEnvio?: boolean
    motivoRejeicao?: boolean
    infoConflito?: boolean
    numeroCartelaAtendida?: boolean
    dataValidacao?: boolean
    vendedorId?: boolean
    campanhaId?: boolean
    requisitoId?: boolean
    criadoEm?: boolean
    atualizadoEm?: boolean
    vendedor?: boolean | UsuarioDefaultArgs<ExtArgs>
    campanha?: boolean | CampanhaDefaultArgs<ExtArgs>
    requisito?: boolean | RequisitoCartelaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["envioVenda"]>

  export type EnvioVendaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    numeroPedido?: boolean
    status?: boolean
    dataEnvio?: boolean
    motivoRejeicao?: boolean
    infoConflito?: boolean
    numeroCartelaAtendida?: boolean
    dataValidacao?: boolean
    vendedorId?: boolean
    campanhaId?: boolean
    requisitoId?: boolean
    criadoEm?: boolean
    atualizadoEm?: boolean
    vendedor?: boolean | UsuarioDefaultArgs<ExtArgs>
    campanha?: boolean | CampanhaDefaultArgs<ExtArgs>
    requisito?: boolean | RequisitoCartelaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["envioVenda"]>

  export type EnvioVendaSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    numeroPedido?: boolean
    status?: boolean
    dataEnvio?: boolean
    motivoRejeicao?: boolean
    infoConflito?: boolean
    numeroCartelaAtendida?: boolean
    dataValidacao?: boolean
    vendedorId?: boolean
    campanhaId?: boolean
    requisitoId?: boolean
    criadoEm?: boolean
    atualizadoEm?: boolean
    vendedor?: boolean | UsuarioDefaultArgs<ExtArgs>
    campanha?: boolean | CampanhaDefaultArgs<ExtArgs>
    requisito?: boolean | RequisitoCartelaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["envioVenda"]>

  export type EnvioVendaSelectScalar = {
    id?: boolean
    numeroPedido?: boolean
    status?: boolean
    dataEnvio?: boolean
    motivoRejeicao?: boolean
    infoConflito?: boolean
    numeroCartelaAtendida?: boolean
    dataValidacao?: boolean
    vendedorId?: boolean
    campanhaId?: boolean
    requisitoId?: boolean
    criadoEm?: boolean
    atualizadoEm?: boolean
  }

  export type EnvioVendaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "numeroPedido" | "status" | "dataEnvio" | "motivoRejeicao" | "infoConflito" | "numeroCartelaAtendida" | "dataValidacao" | "vendedorId" | "campanhaId" | "requisitoId" | "criadoEm" | "atualizadoEm", ExtArgs["result"]["envioVenda"]>
  export type EnvioVendaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    vendedor?: boolean | UsuarioDefaultArgs<ExtArgs>
    campanha?: boolean | CampanhaDefaultArgs<ExtArgs>
    requisito?: boolean | RequisitoCartelaDefaultArgs<ExtArgs>
  }
  export type EnvioVendaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    vendedor?: boolean | UsuarioDefaultArgs<ExtArgs>
    campanha?: boolean | CampanhaDefaultArgs<ExtArgs>
    requisito?: boolean | RequisitoCartelaDefaultArgs<ExtArgs>
  }
  export type EnvioVendaIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    vendedor?: boolean | UsuarioDefaultArgs<ExtArgs>
    campanha?: boolean | CampanhaDefaultArgs<ExtArgs>
    requisito?: boolean | RequisitoCartelaDefaultArgs<ExtArgs>
  }

  export type $EnvioVendaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "EnvioVenda"
    objects: {
      /**
       * Referência ao vendedor
       */
      vendedor: Prisma.$UsuarioPayload<ExtArgs>
      /**
       * Referência à campanha
       */
      campanha: Prisma.$CampanhaPayload<ExtArgs>
      /**
       * Referência ao requisito
       */
      requisito: Prisma.$RequisitoCartelaPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      /**
       * ID único do envio (UUID v4)
       */
      id: string
      /**
       * Número do pedido (vindo do sistema externo ou planilha)
       */
      numeroPedido: string
      /**
       * Status atual do envio (EM_ANALISE, VALIDADO, REJEITADO, CONFLITO_MANUAL)
       */
      status: $Enums.StatusEnvioVenda
      /**
       * Data/hora da submissão
       */
      dataEnvio: Date
      /**
       * Motivo da rejeição (se status = REJEITADO)
       */
      motivoRejeicao: string | null
      /**
       * Informações sobre conflito/duplicata (se status = CONFLITO_MANUAL)
       */
      infoConflito: string | null
      /**
       * Número da cartela na qual este envio foi alocado (1, 2, 3, ...)
       */
      numeroCartelaAtendida: number | null
      /**
       * Data/hora da validação e alocação
       */
      dataValidacao: Date | null
      /**
       * ID do vendedor que submeteu
       */
      vendedorId: string
      /**
       * ID da campanha associada
       */
      campanhaId: string
      /**
       * ID do requisito (card) contra o qual a venda foi submetida
       */
      requisitoId: string
      /**
       * Data de criação do registro
       */
      criadoEm: Date
      /**
       * Data da última atualização
       */
      atualizadoEm: Date
    }, ExtArgs["result"]["envioVenda"]>
    composites: {}
  }

  type EnvioVendaGetPayload<S extends boolean | null | undefined | EnvioVendaDefaultArgs> = $Result.GetResult<Prisma.$EnvioVendaPayload, S>

  type EnvioVendaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<EnvioVendaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: EnvioVendaCountAggregateInputType | true
    }

  export interface EnvioVendaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['EnvioVenda'], meta: { name: 'EnvioVenda' } }
    /**
     * Find zero or one EnvioVenda that matches the filter.
     * @param {EnvioVendaFindUniqueArgs} args - Arguments to find a EnvioVenda
     * @example
     * // Get one EnvioVenda
     * const envioVenda = await prisma.envioVenda.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends EnvioVendaFindUniqueArgs>(args: SelectSubset<T, EnvioVendaFindUniqueArgs<ExtArgs>>): Prisma__EnvioVendaClient<$Result.GetResult<Prisma.$EnvioVendaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one EnvioVenda that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {EnvioVendaFindUniqueOrThrowArgs} args - Arguments to find a EnvioVenda
     * @example
     * // Get one EnvioVenda
     * const envioVenda = await prisma.envioVenda.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends EnvioVendaFindUniqueOrThrowArgs>(args: SelectSubset<T, EnvioVendaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__EnvioVendaClient<$Result.GetResult<Prisma.$EnvioVendaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first EnvioVenda that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EnvioVendaFindFirstArgs} args - Arguments to find a EnvioVenda
     * @example
     * // Get one EnvioVenda
     * const envioVenda = await prisma.envioVenda.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends EnvioVendaFindFirstArgs>(args?: SelectSubset<T, EnvioVendaFindFirstArgs<ExtArgs>>): Prisma__EnvioVendaClient<$Result.GetResult<Prisma.$EnvioVendaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first EnvioVenda that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EnvioVendaFindFirstOrThrowArgs} args - Arguments to find a EnvioVenda
     * @example
     * // Get one EnvioVenda
     * const envioVenda = await prisma.envioVenda.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends EnvioVendaFindFirstOrThrowArgs>(args?: SelectSubset<T, EnvioVendaFindFirstOrThrowArgs<ExtArgs>>): Prisma__EnvioVendaClient<$Result.GetResult<Prisma.$EnvioVendaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more EnvioVendas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EnvioVendaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all EnvioVendas
     * const envioVendas = await prisma.envioVenda.findMany()
     * 
     * // Get first 10 EnvioVendas
     * const envioVendas = await prisma.envioVenda.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const envioVendaWithIdOnly = await prisma.envioVenda.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends EnvioVendaFindManyArgs>(args?: SelectSubset<T, EnvioVendaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EnvioVendaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a EnvioVenda.
     * @param {EnvioVendaCreateArgs} args - Arguments to create a EnvioVenda.
     * @example
     * // Create one EnvioVenda
     * const EnvioVenda = await prisma.envioVenda.create({
     *   data: {
     *     // ... data to create a EnvioVenda
     *   }
     * })
     * 
     */
    create<T extends EnvioVendaCreateArgs>(args: SelectSubset<T, EnvioVendaCreateArgs<ExtArgs>>): Prisma__EnvioVendaClient<$Result.GetResult<Prisma.$EnvioVendaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many EnvioVendas.
     * @param {EnvioVendaCreateManyArgs} args - Arguments to create many EnvioVendas.
     * @example
     * // Create many EnvioVendas
     * const envioVenda = await prisma.envioVenda.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends EnvioVendaCreateManyArgs>(args?: SelectSubset<T, EnvioVendaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many EnvioVendas and returns the data saved in the database.
     * @param {EnvioVendaCreateManyAndReturnArgs} args - Arguments to create many EnvioVendas.
     * @example
     * // Create many EnvioVendas
     * const envioVenda = await prisma.envioVenda.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many EnvioVendas and only return the `id`
     * const envioVendaWithIdOnly = await prisma.envioVenda.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends EnvioVendaCreateManyAndReturnArgs>(args?: SelectSubset<T, EnvioVendaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EnvioVendaPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a EnvioVenda.
     * @param {EnvioVendaDeleteArgs} args - Arguments to delete one EnvioVenda.
     * @example
     * // Delete one EnvioVenda
     * const EnvioVenda = await prisma.envioVenda.delete({
     *   where: {
     *     // ... filter to delete one EnvioVenda
     *   }
     * })
     * 
     */
    delete<T extends EnvioVendaDeleteArgs>(args: SelectSubset<T, EnvioVendaDeleteArgs<ExtArgs>>): Prisma__EnvioVendaClient<$Result.GetResult<Prisma.$EnvioVendaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one EnvioVenda.
     * @param {EnvioVendaUpdateArgs} args - Arguments to update one EnvioVenda.
     * @example
     * // Update one EnvioVenda
     * const envioVenda = await prisma.envioVenda.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends EnvioVendaUpdateArgs>(args: SelectSubset<T, EnvioVendaUpdateArgs<ExtArgs>>): Prisma__EnvioVendaClient<$Result.GetResult<Prisma.$EnvioVendaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more EnvioVendas.
     * @param {EnvioVendaDeleteManyArgs} args - Arguments to filter EnvioVendas to delete.
     * @example
     * // Delete a few EnvioVendas
     * const { count } = await prisma.envioVenda.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends EnvioVendaDeleteManyArgs>(args?: SelectSubset<T, EnvioVendaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more EnvioVendas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EnvioVendaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many EnvioVendas
     * const envioVenda = await prisma.envioVenda.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends EnvioVendaUpdateManyArgs>(args: SelectSubset<T, EnvioVendaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more EnvioVendas and returns the data updated in the database.
     * @param {EnvioVendaUpdateManyAndReturnArgs} args - Arguments to update many EnvioVendas.
     * @example
     * // Update many EnvioVendas
     * const envioVenda = await prisma.envioVenda.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more EnvioVendas and only return the `id`
     * const envioVendaWithIdOnly = await prisma.envioVenda.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends EnvioVendaUpdateManyAndReturnArgs>(args: SelectSubset<T, EnvioVendaUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EnvioVendaPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one EnvioVenda.
     * @param {EnvioVendaUpsertArgs} args - Arguments to update or create a EnvioVenda.
     * @example
     * // Update or create a EnvioVenda
     * const envioVenda = await prisma.envioVenda.upsert({
     *   create: {
     *     // ... data to create a EnvioVenda
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the EnvioVenda we want to update
     *   }
     * })
     */
    upsert<T extends EnvioVendaUpsertArgs>(args: SelectSubset<T, EnvioVendaUpsertArgs<ExtArgs>>): Prisma__EnvioVendaClient<$Result.GetResult<Prisma.$EnvioVendaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of EnvioVendas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EnvioVendaCountArgs} args - Arguments to filter EnvioVendas to count.
     * @example
     * // Count the number of EnvioVendas
     * const count = await prisma.envioVenda.count({
     *   where: {
     *     // ... the filter for the EnvioVendas we want to count
     *   }
     * })
    **/
    count<T extends EnvioVendaCountArgs>(
      args?: Subset<T, EnvioVendaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EnvioVendaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a EnvioVenda.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EnvioVendaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EnvioVendaAggregateArgs>(args: Subset<T, EnvioVendaAggregateArgs>): Prisma.PrismaPromise<GetEnvioVendaAggregateType<T>>

    /**
     * Group by EnvioVenda.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EnvioVendaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends EnvioVendaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: EnvioVendaGroupByArgs['orderBy'] }
        : { orderBy?: EnvioVendaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, EnvioVendaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEnvioVendaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the EnvioVenda model
   */
  readonly fields: EnvioVendaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for EnvioVenda.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__EnvioVendaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    vendedor<T extends UsuarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UsuarioDefaultArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    campanha<T extends CampanhaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CampanhaDefaultArgs<ExtArgs>>): Prisma__CampanhaClient<$Result.GetResult<Prisma.$CampanhaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    requisito<T extends RequisitoCartelaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, RequisitoCartelaDefaultArgs<ExtArgs>>): Prisma__RequisitoCartelaClient<$Result.GetResult<Prisma.$RequisitoCartelaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the EnvioVenda model
   */
  interface EnvioVendaFieldRefs {
    readonly id: FieldRef<"EnvioVenda", 'String'>
    readonly numeroPedido: FieldRef<"EnvioVenda", 'String'>
    readonly status: FieldRef<"EnvioVenda", 'StatusEnvioVenda'>
    readonly dataEnvio: FieldRef<"EnvioVenda", 'DateTime'>
    readonly motivoRejeicao: FieldRef<"EnvioVenda", 'String'>
    readonly infoConflito: FieldRef<"EnvioVenda", 'String'>
    readonly numeroCartelaAtendida: FieldRef<"EnvioVenda", 'Int'>
    readonly dataValidacao: FieldRef<"EnvioVenda", 'DateTime'>
    readonly vendedorId: FieldRef<"EnvioVenda", 'String'>
    readonly campanhaId: FieldRef<"EnvioVenda", 'String'>
    readonly requisitoId: FieldRef<"EnvioVenda", 'String'>
    readonly criadoEm: FieldRef<"EnvioVenda", 'DateTime'>
    readonly atualizadoEm: FieldRef<"EnvioVenda", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * EnvioVenda findUnique
   */
  export type EnvioVendaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EnvioVenda
     */
    select?: EnvioVendaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EnvioVenda
     */
    omit?: EnvioVendaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EnvioVendaInclude<ExtArgs> | null
    /**
     * Filter, which EnvioVenda to fetch.
     */
    where: EnvioVendaWhereUniqueInput
  }

  /**
   * EnvioVenda findUniqueOrThrow
   */
  export type EnvioVendaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EnvioVenda
     */
    select?: EnvioVendaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EnvioVenda
     */
    omit?: EnvioVendaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EnvioVendaInclude<ExtArgs> | null
    /**
     * Filter, which EnvioVenda to fetch.
     */
    where: EnvioVendaWhereUniqueInput
  }

  /**
   * EnvioVenda findFirst
   */
  export type EnvioVendaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EnvioVenda
     */
    select?: EnvioVendaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EnvioVenda
     */
    omit?: EnvioVendaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EnvioVendaInclude<ExtArgs> | null
    /**
     * Filter, which EnvioVenda to fetch.
     */
    where?: EnvioVendaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EnvioVendas to fetch.
     */
    orderBy?: EnvioVendaOrderByWithRelationInput | EnvioVendaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EnvioVendas.
     */
    cursor?: EnvioVendaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EnvioVendas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EnvioVendas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EnvioVendas.
     */
    distinct?: EnvioVendaScalarFieldEnum | EnvioVendaScalarFieldEnum[]
  }

  /**
   * EnvioVenda findFirstOrThrow
   */
  export type EnvioVendaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EnvioVenda
     */
    select?: EnvioVendaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EnvioVenda
     */
    omit?: EnvioVendaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EnvioVendaInclude<ExtArgs> | null
    /**
     * Filter, which EnvioVenda to fetch.
     */
    where?: EnvioVendaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EnvioVendas to fetch.
     */
    orderBy?: EnvioVendaOrderByWithRelationInput | EnvioVendaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EnvioVendas.
     */
    cursor?: EnvioVendaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EnvioVendas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EnvioVendas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EnvioVendas.
     */
    distinct?: EnvioVendaScalarFieldEnum | EnvioVendaScalarFieldEnum[]
  }

  /**
   * EnvioVenda findMany
   */
  export type EnvioVendaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EnvioVenda
     */
    select?: EnvioVendaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EnvioVenda
     */
    omit?: EnvioVendaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EnvioVendaInclude<ExtArgs> | null
    /**
     * Filter, which EnvioVendas to fetch.
     */
    where?: EnvioVendaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EnvioVendas to fetch.
     */
    orderBy?: EnvioVendaOrderByWithRelationInput | EnvioVendaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing EnvioVendas.
     */
    cursor?: EnvioVendaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EnvioVendas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EnvioVendas.
     */
    skip?: number
    distinct?: EnvioVendaScalarFieldEnum | EnvioVendaScalarFieldEnum[]
  }

  /**
   * EnvioVenda create
   */
  export type EnvioVendaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EnvioVenda
     */
    select?: EnvioVendaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EnvioVenda
     */
    omit?: EnvioVendaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EnvioVendaInclude<ExtArgs> | null
    /**
     * The data needed to create a EnvioVenda.
     */
    data: XOR<EnvioVendaCreateInput, EnvioVendaUncheckedCreateInput>
  }

  /**
   * EnvioVenda createMany
   */
  export type EnvioVendaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many EnvioVendas.
     */
    data: EnvioVendaCreateManyInput | EnvioVendaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * EnvioVenda createManyAndReturn
   */
  export type EnvioVendaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EnvioVenda
     */
    select?: EnvioVendaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the EnvioVenda
     */
    omit?: EnvioVendaOmit<ExtArgs> | null
    /**
     * The data used to create many EnvioVendas.
     */
    data: EnvioVendaCreateManyInput | EnvioVendaCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EnvioVendaIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * EnvioVenda update
   */
  export type EnvioVendaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EnvioVenda
     */
    select?: EnvioVendaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EnvioVenda
     */
    omit?: EnvioVendaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EnvioVendaInclude<ExtArgs> | null
    /**
     * The data needed to update a EnvioVenda.
     */
    data: XOR<EnvioVendaUpdateInput, EnvioVendaUncheckedUpdateInput>
    /**
     * Choose, which EnvioVenda to update.
     */
    where: EnvioVendaWhereUniqueInput
  }

  /**
   * EnvioVenda updateMany
   */
  export type EnvioVendaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update EnvioVendas.
     */
    data: XOR<EnvioVendaUpdateManyMutationInput, EnvioVendaUncheckedUpdateManyInput>
    /**
     * Filter which EnvioVendas to update
     */
    where?: EnvioVendaWhereInput
    /**
     * Limit how many EnvioVendas to update.
     */
    limit?: number
  }

  /**
   * EnvioVenda updateManyAndReturn
   */
  export type EnvioVendaUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EnvioVenda
     */
    select?: EnvioVendaSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the EnvioVenda
     */
    omit?: EnvioVendaOmit<ExtArgs> | null
    /**
     * The data used to update EnvioVendas.
     */
    data: XOR<EnvioVendaUpdateManyMutationInput, EnvioVendaUncheckedUpdateManyInput>
    /**
     * Filter which EnvioVendas to update
     */
    where?: EnvioVendaWhereInput
    /**
     * Limit how many EnvioVendas to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EnvioVendaIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * EnvioVenda upsert
   */
  export type EnvioVendaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EnvioVenda
     */
    select?: EnvioVendaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EnvioVenda
     */
    omit?: EnvioVendaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EnvioVendaInclude<ExtArgs> | null
    /**
     * The filter to search for the EnvioVenda to update in case it exists.
     */
    where: EnvioVendaWhereUniqueInput
    /**
     * In case the EnvioVenda found by the `where` argument doesn't exist, create a new EnvioVenda with this data.
     */
    create: XOR<EnvioVendaCreateInput, EnvioVendaUncheckedCreateInput>
    /**
     * In case the EnvioVenda was found with the provided `where` argument, update it with this data.
     */
    update: XOR<EnvioVendaUpdateInput, EnvioVendaUncheckedUpdateInput>
  }

  /**
   * EnvioVenda delete
   */
  export type EnvioVendaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EnvioVenda
     */
    select?: EnvioVendaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EnvioVenda
     */
    omit?: EnvioVendaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EnvioVendaInclude<ExtArgs> | null
    /**
     * Filter which EnvioVenda to delete.
     */
    where: EnvioVendaWhereUniqueInput
  }

  /**
   * EnvioVenda deleteMany
   */
  export type EnvioVendaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which EnvioVendas to delete
     */
    where?: EnvioVendaWhereInput
    /**
     * Limit how many EnvioVendas to delete.
     */
    limit?: number
  }

  /**
   * EnvioVenda without action
   */
  export type EnvioVendaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EnvioVenda
     */
    select?: EnvioVendaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EnvioVenda
     */
    omit?: EnvioVendaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EnvioVendaInclude<ExtArgs> | null
  }


  /**
   * Model Premio
   */

  export type AggregatePremio = {
    _count: PremioCountAggregateOutputType | null
    _avg: PremioAvgAggregateOutputType | null
    _sum: PremioSumAggregateOutputType | null
    _min: PremioMinAggregateOutputType | null
    _max: PremioMaxAggregateOutputType | null
  }

  export type PremioAvgAggregateOutputType = {
    custoMoedinhas: number | null
    estoque: number | null
  }

  export type PremioSumAggregateOutputType = {
    custoMoedinhas: number | null
    estoque: number | null
  }

  export type PremioMinAggregateOutputType = {
    id: string | null
    nome: string | null
    descricao: string | null
    imageUrl: string | null
    custoMoedinhas: number | null
    estoque: number | null
    ativo: boolean | null
    criadoEm: Date | null
    atualizadoEm: Date | null
  }

  export type PremioMaxAggregateOutputType = {
    id: string | null
    nome: string | null
    descricao: string | null
    imageUrl: string | null
    custoMoedinhas: number | null
    estoque: number | null
    ativo: boolean | null
    criadoEm: Date | null
    atualizadoEm: Date | null
  }

  export type PremioCountAggregateOutputType = {
    id: number
    nome: number
    descricao: number
    imageUrl: number
    custoMoedinhas: number
    estoque: number
    ativo: number
    criadoEm: number
    atualizadoEm: number
    _all: number
  }


  export type PremioAvgAggregateInputType = {
    custoMoedinhas?: true
    estoque?: true
  }

  export type PremioSumAggregateInputType = {
    custoMoedinhas?: true
    estoque?: true
  }

  export type PremioMinAggregateInputType = {
    id?: true
    nome?: true
    descricao?: true
    imageUrl?: true
    custoMoedinhas?: true
    estoque?: true
    ativo?: true
    criadoEm?: true
    atualizadoEm?: true
  }

  export type PremioMaxAggregateInputType = {
    id?: true
    nome?: true
    descricao?: true
    imageUrl?: true
    custoMoedinhas?: true
    estoque?: true
    ativo?: true
    criadoEm?: true
    atualizadoEm?: true
  }

  export type PremioCountAggregateInputType = {
    id?: true
    nome?: true
    descricao?: true
    imageUrl?: true
    custoMoedinhas?: true
    estoque?: true
    ativo?: true
    criadoEm?: true
    atualizadoEm?: true
    _all?: true
  }

  export type PremioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Premio to aggregate.
     */
    where?: PremioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Premios to fetch.
     */
    orderBy?: PremioOrderByWithRelationInput | PremioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PremioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Premios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Premios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Premios
    **/
    _count?: true | PremioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PremioAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PremioSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PremioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PremioMaxAggregateInputType
  }

  export type GetPremioAggregateType<T extends PremioAggregateArgs> = {
        [P in keyof T & keyof AggregatePremio]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePremio[P]>
      : GetScalarType<T[P], AggregatePremio[P]>
  }




  export type PremioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PremioWhereInput
    orderBy?: PremioOrderByWithAggregationInput | PremioOrderByWithAggregationInput[]
    by: PremioScalarFieldEnum[] | PremioScalarFieldEnum
    having?: PremioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PremioCountAggregateInputType | true
    _avg?: PremioAvgAggregateInputType
    _sum?: PremioSumAggregateInputType
    _min?: PremioMinAggregateInputType
    _max?: PremioMaxAggregateInputType
  }

  export type PremioGroupByOutputType = {
    id: string
    nome: string
    descricao: string
    imageUrl: string | null
    custoMoedinhas: number
    estoque: number
    ativo: boolean
    criadoEm: Date
    atualizadoEm: Date
    _count: PremioCountAggregateOutputType | null
    _avg: PremioAvgAggregateOutputType | null
    _sum: PremioSumAggregateOutputType | null
    _min: PremioMinAggregateOutputType | null
    _max: PremioMaxAggregateOutputType | null
  }

  type GetPremioGroupByPayload<T extends PremioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PremioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PremioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PremioGroupByOutputType[P]>
            : GetScalarType<T[P], PremioGroupByOutputType[P]>
        }
      >
    >


  export type PremioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    descricao?: boolean
    imageUrl?: boolean
    custoMoedinhas?: boolean
    estoque?: boolean
    ativo?: boolean
    criadoEm?: boolean
    atualizadoEm?: boolean
    resgates?: boolean | Premio$resgatesArgs<ExtArgs>
    _count?: boolean | PremioCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["premio"]>

  export type PremioSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    descricao?: boolean
    imageUrl?: boolean
    custoMoedinhas?: boolean
    estoque?: boolean
    ativo?: boolean
    criadoEm?: boolean
    atualizadoEm?: boolean
  }, ExtArgs["result"]["premio"]>

  export type PremioSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    descricao?: boolean
    imageUrl?: boolean
    custoMoedinhas?: boolean
    estoque?: boolean
    ativo?: boolean
    criadoEm?: boolean
    atualizadoEm?: boolean
  }, ExtArgs["result"]["premio"]>

  export type PremioSelectScalar = {
    id?: boolean
    nome?: boolean
    descricao?: boolean
    imageUrl?: boolean
    custoMoedinhas?: boolean
    estoque?: boolean
    ativo?: boolean
    criadoEm?: boolean
    atualizadoEm?: boolean
  }

  export type PremioOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nome" | "descricao" | "imageUrl" | "custoMoedinhas" | "estoque" | "ativo" | "criadoEm" | "atualizadoEm", ExtArgs["result"]["premio"]>
  export type PremioInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    resgates?: boolean | Premio$resgatesArgs<ExtArgs>
    _count?: boolean | PremioCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type PremioIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type PremioIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $PremioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Premio"
    objects: {
      /**
       * Histórico de resgates deste prêmio
       */
      resgates: Prisma.$ResgatePremioPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      /**
       * ID único do prêmio (UUID v4)
       */
      id: string
      /**
       * Nome do prêmio (ex: "iPhone 15 Pro", "Vale-Compras R$ 500")
       */
      nome: string
      /**
       * Descrição detalhada do prêmio
       */
      descricao: string
      /**
       * URL da imagem do prêmio
       */
      imageUrl: string | null
      /**
       * Custo em Moedinhas EPS (moeda virtual) necessário para resgatar este prêmio.
       * Deduzido do saldoMoedinhas do vendedor ao resgatar.
       */
      custoMoedinhas: number
      /**
       * Quantidade disponível em estoque
       */
      estoque: number
      /**
       * Indica se o prêmio está ativo para resgate
       */
      ativo: boolean
      /**
       * Data de criação do registro
       */
      criadoEm: Date
      /**
       * Data da última atualização
       */
      atualizadoEm: Date
    }, ExtArgs["result"]["premio"]>
    composites: {}
  }

  type PremioGetPayload<S extends boolean | null | undefined | PremioDefaultArgs> = $Result.GetResult<Prisma.$PremioPayload, S>

  type PremioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PremioFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PremioCountAggregateInputType | true
    }

  export interface PremioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Premio'], meta: { name: 'Premio' } }
    /**
     * Find zero or one Premio that matches the filter.
     * @param {PremioFindUniqueArgs} args - Arguments to find a Premio
     * @example
     * // Get one Premio
     * const premio = await prisma.premio.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PremioFindUniqueArgs>(args: SelectSubset<T, PremioFindUniqueArgs<ExtArgs>>): Prisma__PremioClient<$Result.GetResult<Prisma.$PremioPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Premio that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PremioFindUniqueOrThrowArgs} args - Arguments to find a Premio
     * @example
     * // Get one Premio
     * const premio = await prisma.premio.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PremioFindUniqueOrThrowArgs>(args: SelectSubset<T, PremioFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PremioClient<$Result.GetResult<Prisma.$PremioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Premio that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PremioFindFirstArgs} args - Arguments to find a Premio
     * @example
     * // Get one Premio
     * const premio = await prisma.premio.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PremioFindFirstArgs>(args?: SelectSubset<T, PremioFindFirstArgs<ExtArgs>>): Prisma__PremioClient<$Result.GetResult<Prisma.$PremioPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Premio that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PremioFindFirstOrThrowArgs} args - Arguments to find a Premio
     * @example
     * // Get one Premio
     * const premio = await prisma.premio.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PremioFindFirstOrThrowArgs>(args?: SelectSubset<T, PremioFindFirstOrThrowArgs<ExtArgs>>): Prisma__PremioClient<$Result.GetResult<Prisma.$PremioPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Premios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PremioFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Premios
     * const premios = await prisma.premio.findMany()
     * 
     * // Get first 10 Premios
     * const premios = await prisma.premio.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const premioWithIdOnly = await prisma.premio.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PremioFindManyArgs>(args?: SelectSubset<T, PremioFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PremioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Premio.
     * @param {PremioCreateArgs} args - Arguments to create a Premio.
     * @example
     * // Create one Premio
     * const Premio = await prisma.premio.create({
     *   data: {
     *     // ... data to create a Premio
     *   }
     * })
     * 
     */
    create<T extends PremioCreateArgs>(args: SelectSubset<T, PremioCreateArgs<ExtArgs>>): Prisma__PremioClient<$Result.GetResult<Prisma.$PremioPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Premios.
     * @param {PremioCreateManyArgs} args - Arguments to create many Premios.
     * @example
     * // Create many Premios
     * const premio = await prisma.premio.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PremioCreateManyArgs>(args?: SelectSubset<T, PremioCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Premios and returns the data saved in the database.
     * @param {PremioCreateManyAndReturnArgs} args - Arguments to create many Premios.
     * @example
     * // Create many Premios
     * const premio = await prisma.premio.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Premios and only return the `id`
     * const premioWithIdOnly = await prisma.premio.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PremioCreateManyAndReturnArgs>(args?: SelectSubset<T, PremioCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PremioPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Premio.
     * @param {PremioDeleteArgs} args - Arguments to delete one Premio.
     * @example
     * // Delete one Premio
     * const Premio = await prisma.premio.delete({
     *   where: {
     *     // ... filter to delete one Premio
     *   }
     * })
     * 
     */
    delete<T extends PremioDeleteArgs>(args: SelectSubset<T, PremioDeleteArgs<ExtArgs>>): Prisma__PremioClient<$Result.GetResult<Prisma.$PremioPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Premio.
     * @param {PremioUpdateArgs} args - Arguments to update one Premio.
     * @example
     * // Update one Premio
     * const premio = await prisma.premio.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PremioUpdateArgs>(args: SelectSubset<T, PremioUpdateArgs<ExtArgs>>): Prisma__PremioClient<$Result.GetResult<Prisma.$PremioPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Premios.
     * @param {PremioDeleteManyArgs} args - Arguments to filter Premios to delete.
     * @example
     * // Delete a few Premios
     * const { count } = await prisma.premio.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PremioDeleteManyArgs>(args?: SelectSubset<T, PremioDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Premios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PremioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Premios
     * const premio = await prisma.premio.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PremioUpdateManyArgs>(args: SelectSubset<T, PremioUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Premios and returns the data updated in the database.
     * @param {PremioUpdateManyAndReturnArgs} args - Arguments to update many Premios.
     * @example
     * // Update many Premios
     * const premio = await prisma.premio.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Premios and only return the `id`
     * const premioWithIdOnly = await prisma.premio.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PremioUpdateManyAndReturnArgs>(args: SelectSubset<T, PremioUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PremioPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Premio.
     * @param {PremioUpsertArgs} args - Arguments to update or create a Premio.
     * @example
     * // Update or create a Premio
     * const premio = await prisma.premio.upsert({
     *   create: {
     *     // ... data to create a Premio
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Premio we want to update
     *   }
     * })
     */
    upsert<T extends PremioUpsertArgs>(args: SelectSubset<T, PremioUpsertArgs<ExtArgs>>): Prisma__PremioClient<$Result.GetResult<Prisma.$PremioPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Premios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PremioCountArgs} args - Arguments to filter Premios to count.
     * @example
     * // Count the number of Premios
     * const count = await prisma.premio.count({
     *   where: {
     *     // ... the filter for the Premios we want to count
     *   }
     * })
    **/
    count<T extends PremioCountArgs>(
      args?: Subset<T, PremioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PremioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Premio.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PremioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PremioAggregateArgs>(args: Subset<T, PremioAggregateArgs>): Prisma.PrismaPromise<GetPremioAggregateType<T>>

    /**
     * Group by Premio.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PremioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PremioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PremioGroupByArgs['orderBy'] }
        : { orderBy?: PremioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PremioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPremioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Premio model
   */
  readonly fields: PremioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Premio.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PremioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    resgates<T extends Premio$resgatesArgs<ExtArgs> = {}>(args?: Subset<T, Premio$resgatesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ResgatePremioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Premio model
   */
  interface PremioFieldRefs {
    readonly id: FieldRef<"Premio", 'String'>
    readonly nome: FieldRef<"Premio", 'String'>
    readonly descricao: FieldRef<"Premio", 'String'>
    readonly imageUrl: FieldRef<"Premio", 'String'>
    readonly custoMoedinhas: FieldRef<"Premio", 'Int'>
    readonly estoque: FieldRef<"Premio", 'Int'>
    readonly ativo: FieldRef<"Premio", 'Boolean'>
    readonly criadoEm: FieldRef<"Premio", 'DateTime'>
    readonly atualizadoEm: FieldRef<"Premio", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Premio findUnique
   */
  export type PremioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Premio
     */
    select?: PremioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Premio
     */
    omit?: PremioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PremioInclude<ExtArgs> | null
    /**
     * Filter, which Premio to fetch.
     */
    where: PremioWhereUniqueInput
  }

  /**
   * Premio findUniqueOrThrow
   */
  export type PremioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Premio
     */
    select?: PremioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Premio
     */
    omit?: PremioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PremioInclude<ExtArgs> | null
    /**
     * Filter, which Premio to fetch.
     */
    where: PremioWhereUniqueInput
  }

  /**
   * Premio findFirst
   */
  export type PremioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Premio
     */
    select?: PremioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Premio
     */
    omit?: PremioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PremioInclude<ExtArgs> | null
    /**
     * Filter, which Premio to fetch.
     */
    where?: PremioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Premios to fetch.
     */
    orderBy?: PremioOrderByWithRelationInput | PremioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Premios.
     */
    cursor?: PremioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Premios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Premios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Premios.
     */
    distinct?: PremioScalarFieldEnum | PremioScalarFieldEnum[]
  }

  /**
   * Premio findFirstOrThrow
   */
  export type PremioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Premio
     */
    select?: PremioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Premio
     */
    omit?: PremioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PremioInclude<ExtArgs> | null
    /**
     * Filter, which Premio to fetch.
     */
    where?: PremioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Premios to fetch.
     */
    orderBy?: PremioOrderByWithRelationInput | PremioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Premios.
     */
    cursor?: PremioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Premios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Premios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Premios.
     */
    distinct?: PremioScalarFieldEnum | PremioScalarFieldEnum[]
  }

  /**
   * Premio findMany
   */
  export type PremioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Premio
     */
    select?: PremioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Premio
     */
    omit?: PremioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PremioInclude<ExtArgs> | null
    /**
     * Filter, which Premios to fetch.
     */
    where?: PremioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Premios to fetch.
     */
    orderBy?: PremioOrderByWithRelationInput | PremioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Premios.
     */
    cursor?: PremioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Premios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Premios.
     */
    skip?: number
    distinct?: PremioScalarFieldEnum | PremioScalarFieldEnum[]
  }

  /**
   * Premio create
   */
  export type PremioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Premio
     */
    select?: PremioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Premio
     */
    omit?: PremioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PremioInclude<ExtArgs> | null
    /**
     * The data needed to create a Premio.
     */
    data: XOR<PremioCreateInput, PremioUncheckedCreateInput>
  }

  /**
   * Premio createMany
   */
  export type PremioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Premios.
     */
    data: PremioCreateManyInput | PremioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Premio createManyAndReturn
   */
  export type PremioCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Premio
     */
    select?: PremioSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Premio
     */
    omit?: PremioOmit<ExtArgs> | null
    /**
     * The data used to create many Premios.
     */
    data: PremioCreateManyInput | PremioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Premio update
   */
  export type PremioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Premio
     */
    select?: PremioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Premio
     */
    omit?: PremioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PremioInclude<ExtArgs> | null
    /**
     * The data needed to update a Premio.
     */
    data: XOR<PremioUpdateInput, PremioUncheckedUpdateInput>
    /**
     * Choose, which Premio to update.
     */
    where: PremioWhereUniqueInput
  }

  /**
   * Premio updateMany
   */
  export type PremioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Premios.
     */
    data: XOR<PremioUpdateManyMutationInput, PremioUncheckedUpdateManyInput>
    /**
     * Filter which Premios to update
     */
    where?: PremioWhereInput
    /**
     * Limit how many Premios to update.
     */
    limit?: number
  }

  /**
   * Premio updateManyAndReturn
   */
  export type PremioUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Premio
     */
    select?: PremioSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Premio
     */
    omit?: PremioOmit<ExtArgs> | null
    /**
     * The data used to update Premios.
     */
    data: XOR<PremioUpdateManyMutationInput, PremioUncheckedUpdateManyInput>
    /**
     * Filter which Premios to update
     */
    where?: PremioWhereInput
    /**
     * Limit how many Premios to update.
     */
    limit?: number
  }

  /**
   * Premio upsert
   */
  export type PremioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Premio
     */
    select?: PremioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Premio
     */
    omit?: PremioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PremioInclude<ExtArgs> | null
    /**
     * The filter to search for the Premio to update in case it exists.
     */
    where: PremioWhereUniqueInput
    /**
     * In case the Premio found by the `where` argument doesn't exist, create a new Premio with this data.
     */
    create: XOR<PremioCreateInput, PremioUncheckedCreateInput>
    /**
     * In case the Premio was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PremioUpdateInput, PremioUncheckedUpdateInput>
  }

  /**
   * Premio delete
   */
  export type PremioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Premio
     */
    select?: PremioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Premio
     */
    omit?: PremioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PremioInclude<ExtArgs> | null
    /**
     * Filter which Premio to delete.
     */
    where: PremioWhereUniqueInput
  }

  /**
   * Premio deleteMany
   */
  export type PremioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Premios to delete
     */
    where?: PremioWhereInput
    /**
     * Limit how many Premios to delete.
     */
    limit?: number
  }

  /**
   * Premio.resgates
   */
  export type Premio$resgatesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ResgatePremio
     */
    select?: ResgatePremioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ResgatePremio
     */
    omit?: ResgatePremioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ResgatePremioInclude<ExtArgs> | null
    where?: ResgatePremioWhereInput
    orderBy?: ResgatePremioOrderByWithRelationInput | ResgatePremioOrderByWithRelationInput[]
    cursor?: ResgatePremioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ResgatePremioScalarFieldEnum | ResgatePremioScalarFieldEnum[]
  }

  /**
   * Premio without action
   */
  export type PremioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Premio
     */
    select?: PremioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Premio
     */
    omit?: PremioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PremioInclude<ExtArgs> | null
  }


  /**
   * Model ResgatePremio
   */

  export type AggregateResgatePremio = {
    _count: ResgatePremioCountAggregateOutputType | null
    _min: ResgatePremioMinAggregateOutputType | null
    _max: ResgatePremioMaxAggregateOutputType | null
  }

  export type ResgatePremioMinAggregateOutputType = {
    id: string | null
    dataSolicitacao: Date | null
    status: $Enums.StatusResgate | null
    dataAtualizacao: Date | null
    motivoCancelamento: string | null
    vendedorId: string | null
    premioId: string | null
    criadoEm: Date | null
    atualizadoEm: Date | null
  }

  export type ResgatePremioMaxAggregateOutputType = {
    id: string | null
    dataSolicitacao: Date | null
    status: $Enums.StatusResgate | null
    dataAtualizacao: Date | null
    motivoCancelamento: string | null
    vendedorId: string | null
    premioId: string | null
    criadoEm: Date | null
    atualizadoEm: Date | null
  }

  export type ResgatePremioCountAggregateOutputType = {
    id: number
    dataSolicitacao: number
    status: number
    dataAtualizacao: number
    motivoCancelamento: number
    vendedorId: number
    premioId: number
    criadoEm: number
    atualizadoEm: number
    _all: number
  }


  export type ResgatePremioMinAggregateInputType = {
    id?: true
    dataSolicitacao?: true
    status?: true
    dataAtualizacao?: true
    motivoCancelamento?: true
    vendedorId?: true
    premioId?: true
    criadoEm?: true
    atualizadoEm?: true
  }

  export type ResgatePremioMaxAggregateInputType = {
    id?: true
    dataSolicitacao?: true
    status?: true
    dataAtualizacao?: true
    motivoCancelamento?: true
    vendedorId?: true
    premioId?: true
    criadoEm?: true
    atualizadoEm?: true
  }

  export type ResgatePremioCountAggregateInputType = {
    id?: true
    dataSolicitacao?: true
    status?: true
    dataAtualizacao?: true
    motivoCancelamento?: true
    vendedorId?: true
    premioId?: true
    criadoEm?: true
    atualizadoEm?: true
    _all?: true
  }

  export type ResgatePremioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ResgatePremio to aggregate.
     */
    where?: ResgatePremioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ResgatePremios to fetch.
     */
    orderBy?: ResgatePremioOrderByWithRelationInput | ResgatePremioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ResgatePremioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ResgatePremios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ResgatePremios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ResgatePremios
    **/
    _count?: true | ResgatePremioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ResgatePremioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ResgatePremioMaxAggregateInputType
  }

  export type GetResgatePremioAggregateType<T extends ResgatePremioAggregateArgs> = {
        [P in keyof T & keyof AggregateResgatePremio]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateResgatePremio[P]>
      : GetScalarType<T[P], AggregateResgatePremio[P]>
  }




  export type ResgatePremioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ResgatePremioWhereInput
    orderBy?: ResgatePremioOrderByWithAggregationInput | ResgatePremioOrderByWithAggregationInput[]
    by: ResgatePremioScalarFieldEnum[] | ResgatePremioScalarFieldEnum
    having?: ResgatePremioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ResgatePremioCountAggregateInputType | true
    _min?: ResgatePremioMinAggregateInputType
    _max?: ResgatePremioMaxAggregateInputType
  }

  export type ResgatePremioGroupByOutputType = {
    id: string
    dataSolicitacao: Date
    status: $Enums.StatusResgate
    dataAtualizacao: Date
    motivoCancelamento: string | null
    vendedorId: string
    premioId: string
    criadoEm: Date
    atualizadoEm: Date
    _count: ResgatePremioCountAggregateOutputType | null
    _min: ResgatePremioMinAggregateOutputType | null
    _max: ResgatePremioMaxAggregateOutputType | null
  }

  type GetResgatePremioGroupByPayload<T extends ResgatePremioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ResgatePremioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ResgatePremioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ResgatePremioGroupByOutputType[P]>
            : GetScalarType<T[P], ResgatePremioGroupByOutputType[P]>
        }
      >
    >


  export type ResgatePremioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    dataSolicitacao?: boolean
    status?: boolean
    dataAtualizacao?: boolean
    motivoCancelamento?: boolean
    vendedorId?: boolean
    premioId?: boolean
    criadoEm?: boolean
    atualizadoEm?: boolean
    vendedor?: boolean | UsuarioDefaultArgs<ExtArgs>
    premio?: boolean | PremioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["resgatePremio"]>

  export type ResgatePremioSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    dataSolicitacao?: boolean
    status?: boolean
    dataAtualizacao?: boolean
    motivoCancelamento?: boolean
    vendedorId?: boolean
    premioId?: boolean
    criadoEm?: boolean
    atualizadoEm?: boolean
    vendedor?: boolean | UsuarioDefaultArgs<ExtArgs>
    premio?: boolean | PremioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["resgatePremio"]>

  export type ResgatePremioSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    dataSolicitacao?: boolean
    status?: boolean
    dataAtualizacao?: boolean
    motivoCancelamento?: boolean
    vendedorId?: boolean
    premioId?: boolean
    criadoEm?: boolean
    atualizadoEm?: boolean
    vendedor?: boolean | UsuarioDefaultArgs<ExtArgs>
    premio?: boolean | PremioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["resgatePremio"]>

  export type ResgatePremioSelectScalar = {
    id?: boolean
    dataSolicitacao?: boolean
    status?: boolean
    dataAtualizacao?: boolean
    motivoCancelamento?: boolean
    vendedorId?: boolean
    premioId?: boolean
    criadoEm?: boolean
    atualizadoEm?: boolean
  }

  export type ResgatePremioOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "dataSolicitacao" | "status" | "dataAtualizacao" | "motivoCancelamento" | "vendedorId" | "premioId" | "criadoEm" | "atualizadoEm", ExtArgs["result"]["resgatePremio"]>
  export type ResgatePremioInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    vendedor?: boolean | UsuarioDefaultArgs<ExtArgs>
    premio?: boolean | PremioDefaultArgs<ExtArgs>
  }
  export type ResgatePremioIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    vendedor?: boolean | UsuarioDefaultArgs<ExtArgs>
    premio?: boolean | PremioDefaultArgs<ExtArgs>
  }
  export type ResgatePremioIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    vendedor?: boolean | UsuarioDefaultArgs<ExtArgs>
    premio?: boolean | PremioDefaultArgs<ExtArgs>
  }

  export type $ResgatePremioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ResgatePremio"
    objects: {
      /**
       * Referência ao vendedor
       */
      vendedor: Prisma.$UsuarioPayload<ExtArgs>
      /**
       * Referência ao prêmio
       */
      premio: Prisma.$PremioPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      /**
       * ID único do resgate (UUID v4)
       */
      id: string
      /**
       * Data/hora da solicitação do resgate
       */
      dataSolicitacao: Date
      /**
       * Status do fluxo logístico do resgate
       */
      status: $Enums.StatusResgate
      /**
       * Data/hora da última atualização (qualquer mudança de status)
       */
      dataAtualizacao: Date
      /**
       * Motivo do cancelamento (preenchido apenas se status = CANCELADO)
       */
      motivoCancelamento: string | null
      /**
       * ID do vendedor que resgatou
       */
      vendedorId: string
      /**
       * ID do prêmio resgatado
       */
      premioId: string
      /**
       * Data de criação do registro
       */
      criadoEm: Date
      /**
       * Data da última atualização
       */
      atualizadoEm: Date
    }, ExtArgs["result"]["resgatePremio"]>
    composites: {}
  }

  type ResgatePremioGetPayload<S extends boolean | null | undefined | ResgatePremioDefaultArgs> = $Result.GetResult<Prisma.$ResgatePremioPayload, S>

  type ResgatePremioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ResgatePremioFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ResgatePremioCountAggregateInputType | true
    }

  export interface ResgatePremioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ResgatePremio'], meta: { name: 'ResgatePremio' } }
    /**
     * Find zero or one ResgatePremio that matches the filter.
     * @param {ResgatePremioFindUniqueArgs} args - Arguments to find a ResgatePremio
     * @example
     * // Get one ResgatePremio
     * const resgatePremio = await prisma.resgatePremio.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ResgatePremioFindUniqueArgs>(args: SelectSubset<T, ResgatePremioFindUniqueArgs<ExtArgs>>): Prisma__ResgatePremioClient<$Result.GetResult<Prisma.$ResgatePremioPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ResgatePremio that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ResgatePremioFindUniqueOrThrowArgs} args - Arguments to find a ResgatePremio
     * @example
     * // Get one ResgatePremio
     * const resgatePremio = await prisma.resgatePremio.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ResgatePremioFindUniqueOrThrowArgs>(args: SelectSubset<T, ResgatePremioFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ResgatePremioClient<$Result.GetResult<Prisma.$ResgatePremioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ResgatePremio that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ResgatePremioFindFirstArgs} args - Arguments to find a ResgatePremio
     * @example
     * // Get one ResgatePremio
     * const resgatePremio = await prisma.resgatePremio.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ResgatePremioFindFirstArgs>(args?: SelectSubset<T, ResgatePremioFindFirstArgs<ExtArgs>>): Prisma__ResgatePremioClient<$Result.GetResult<Prisma.$ResgatePremioPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ResgatePremio that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ResgatePremioFindFirstOrThrowArgs} args - Arguments to find a ResgatePremio
     * @example
     * // Get one ResgatePremio
     * const resgatePremio = await prisma.resgatePremio.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ResgatePremioFindFirstOrThrowArgs>(args?: SelectSubset<T, ResgatePremioFindFirstOrThrowArgs<ExtArgs>>): Prisma__ResgatePremioClient<$Result.GetResult<Prisma.$ResgatePremioPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ResgatePremios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ResgatePremioFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ResgatePremios
     * const resgatePremios = await prisma.resgatePremio.findMany()
     * 
     * // Get first 10 ResgatePremios
     * const resgatePremios = await prisma.resgatePremio.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const resgatePremioWithIdOnly = await prisma.resgatePremio.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ResgatePremioFindManyArgs>(args?: SelectSubset<T, ResgatePremioFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ResgatePremioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ResgatePremio.
     * @param {ResgatePremioCreateArgs} args - Arguments to create a ResgatePremio.
     * @example
     * // Create one ResgatePremio
     * const ResgatePremio = await prisma.resgatePremio.create({
     *   data: {
     *     // ... data to create a ResgatePremio
     *   }
     * })
     * 
     */
    create<T extends ResgatePremioCreateArgs>(args: SelectSubset<T, ResgatePremioCreateArgs<ExtArgs>>): Prisma__ResgatePremioClient<$Result.GetResult<Prisma.$ResgatePremioPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ResgatePremios.
     * @param {ResgatePremioCreateManyArgs} args - Arguments to create many ResgatePremios.
     * @example
     * // Create many ResgatePremios
     * const resgatePremio = await prisma.resgatePremio.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ResgatePremioCreateManyArgs>(args?: SelectSubset<T, ResgatePremioCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ResgatePremios and returns the data saved in the database.
     * @param {ResgatePremioCreateManyAndReturnArgs} args - Arguments to create many ResgatePremios.
     * @example
     * // Create many ResgatePremios
     * const resgatePremio = await prisma.resgatePremio.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ResgatePremios and only return the `id`
     * const resgatePremioWithIdOnly = await prisma.resgatePremio.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ResgatePremioCreateManyAndReturnArgs>(args?: SelectSubset<T, ResgatePremioCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ResgatePremioPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ResgatePremio.
     * @param {ResgatePremioDeleteArgs} args - Arguments to delete one ResgatePremio.
     * @example
     * // Delete one ResgatePremio
     * const ResgatePremio = await prisma.resgatePremio.delete({
     *   where: {
     *     // ... filter to delete one ResgatePremio
     *   }
     * })
     * 
     */
    delete<T extends ResgatePremioDeleteArgs>(args: SelectSubset<T, ResgatePremioDeleteArgs<ExtArgs>>): Prisma__ResgatePremioClient<$Result.GetResult<Prisma.$ResgatePremioPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ResgatePremio.
     * @param {ResgatePremioUpdateArgs} args - Arguments to update one ResgatePremio.
     * @example
     * // Update one ResgatePremio
     * const resgatePremio = await prisma.resgatePremio.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ResgatePremioUpdateArgs>(args: SelectSubset<T, ResgatePremioUpdateArgs<ExtArgs>>): Prisma__ResgatePremioClient<$Result.GetResult<Prisma.$ResgatePremioPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ResgatePremios.
     * @param {ResgatePremioDeleteManyArgs} args - Arguments to filter ResgatePremios to delete.
     * @example
     * // Delete a few ResgatePremios
     * const { count } = await prisma.resgatePremio.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ResgatePremioDeleteManyArgs>(args?: SelectSubset<T, ResgatePremioDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ResgatePremios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ResgatePremioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ResgatePremios
     * const resgatePremio = await prisma.resgatePremio.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ResgatePremioUpdateManyArgs>(args: SelectSubset<T, ResgatePremioUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ResgatePremios and returns the data updated in the database.
     * @param {ResgatePremioUpdateManyAndReturnArgs} args - Arguments to update many ResgatePremios.
     * @example
     * // Update many ResgatePremios
     * const resgatePremio = await prisma.resgatePremio.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ResgatePremios and only return the `id`
     * const resgatePremioWithIdOnly = await prisma.resgatePremio.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ResgatePremioUpdateManyAndReturnArgs>(args: SelectSubset<T, ResgatePremioUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ResgatePremioPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ResgatePremio.
     * @param {ResgatePremioUpsertArgs} args - Arguments to update or create a ResgatePremio.
     * @example
     * // Update or create a ResgatePremio
     * const resgatePremio = await prisma.resgatePremio.upsert({
     *   create: {
     *     // ... data to create a ResgatePremio
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ResgatePremio we want to update
     *   }
     * })
     */
    upsert<T extends ResgatePremioUpsertArgs>(args: SelectSubset<T, ResgatePremioUpsertArgs<ExtArgs>>): Prisma__ResgatePremioClient<$Result.GetResult<Prisma.$ResgatePremioPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ResgatePremios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ResgatePremioCountArgs} args - Arguments to filter ResgatePremios to count.
     * @example
     * // Count the number of ResgatePremios
     * const count = await prisma.resgatePremio.count({
     *   where: {
     *     // ... the filter for the ResgatePremios we want to count
     *   }
     * })
    **/
    count<T extends ResgatePremioCountArgs>(
      args?: Subset<T, ResgatePremioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ResgatePremioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ResgatePremio.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ResgatePremioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ResgatePremioAggregateArgs>(args: Subset<T, ResgatePremioAggregateArgs>): Prisma.PrismaPromise<GetResgatePremioAggregateType<T>>

    /**
     * Group by ResgatePremio.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ResgatePremioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ResgatePremioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ResgatePremioGroupByArgs['orderBy'] }
        : { orderBy?: ResgatePremioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ResgatePremioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetResgatePremioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ResgatePremio model
   */
  readonly fields: ResgatePremioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ResgatePremio.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ResgatePremioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    vendedor<T extends UsuarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UsuarioDefaultArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    premio<T extends PremioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PremioDefaultArgs<ExtArgs>>): Prisma__PremioClient<$Result.GetResult<Prisma.$PremioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ResgatePremio model
   */
  interface ResgatePremioFieldRefs {
    readonly id: FieldRef<"ResgatePremio", 'String'>
    readonly dataSolicitacao: FieldRef<"ResgatePremio", 'DateTime'>
    readonly status: FieldRef<"ResgatePremio", 'StatusResgate'>
    readonly dataAtualizacao: FieldRef<"ResgatePremio", 'DateTime'>
    readonly motivoCancelamento: FieldRef<"ResgatePremio", 'String'>
    readonly vendedorId: FieldRef<"ResgatePremio", 'String'>
    readonly premioId: FieldRef<"ResgatePremio", 'String'>
    readonly criadoEm: FieldRef<"ResgatePremio", 'DateTime'>
    readonly atualizadoEm: FieldRef<"ResgatePremio", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * ResgatePremio findUnique
   */
  export type ResgatePremioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ResgatePremio
     */
    select?: ResgatePremioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ResgatePremio
     */
    omit?: ResgatePremioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ResgatePremioInclude<ExtArgs> | null
    /**
     * Filter, which ResgatePremio to fetch.
     */
    where: ResgatePremioWhereUniqueInput
  }

  /**
   * ResgatePremio findUniqueOrThrow
   */
  export type ResgatePremioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ResgatePremio
     */
    select?: ResgatePremioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ResgatePremio
     */
    omit?: ResgatePremioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ResgatePremioInclude<ExtArgs> | null
    /**
     * Filter, which ResgatePremio to fetch.
     */
    where: ResgatePremioWhereUniqueInput
  }

  /**
   * ResgatePremio findFirst
   */
  export type ResgatePremioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ResgatePremio
     */
    select?: ResgatePremioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ResgatePremio
     */
    omit?: ResgatePremioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ResgatePremioInclude<ExtArgs> | null
    /**
     * Filter, which ResgatePremio to fetch.
     */
    where?: ResgatePremioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ResgatePremios to fetch.
     */
    orderBy?: ResgatePremioOrderByWithRelationInput | ResgatePremioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ResgatePremios.
     */
    cursor?: ResgatePremioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ResgatePremios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ResgatePremios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ResgatePremios.
     */
    distinct?: ResgatePremioScalarFieldEnum | ResgatePremioScalarFieldEnum[]
  }

  /**
   * ResgatePremio findFirstOrThrow
   */
  export type ResgatePremioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ResgatePremio
     */
    select?: ResgatePremioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ResgatePremio
     */
    omit?: ResgatePremioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ResgatePremioInclude<ExtArgs> | null
    /**
     * Filter, which ResgatePremio to fetch.
     */
    where?: ResgatePremioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ResgatePremios to fetch.
     */
    orderBy?: ResgatePremioOrderByWithRelationInput | ResgatePremioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ResgatePremios.
     */
    cursor?: ResgatePremioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ResgatePremios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ResgatePremios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ResgatePremios.
     */
    distinct?: ResgatePremioScalarFieldEnum | ResgatePremioScalarFieldEnum[]
  }

  /**
   * ResgatePremio findMany
   */
  export type ResgatePremioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ResgatePremio
     */
    select?: ResgatePremioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ResgatePremio
     */
    omit?: ResgatePremioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ResgatePremioInclude<ExtArgs> | null
    /**
     * Filter, which ResgatePremios to fetch.
     */
    where?: ResgatePremioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ResgatePremios to fetch.
     */
    orderBy?: ResgatePremioOrderByWithRelationInput | ResgatePremioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ResgatePremios.
     */
    cursor?: ResgatePremioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ResgatePremios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ResgatePremios.
     */
    skip?: number
    distinct?: ResgatePremioScalarFieldEnum | ResgatePremioScalarFieldEnum[]
  }

  /**
   * ResgatePremio create
   */
  export type ResgatePremioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ResgatePremio
     */
    select?: ResgatePremioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ResgatePremio
     */
    omit?: ResgatePremioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ResgatePremioInclude<ExtArgs> | null
    /**
     * The data needed to create a ResgatePremio.
     */
    data: XOR<ResgatePremioCreateInput, ResgatePremioUncheckedCreateInput>
  }

  /**
   * ResgatePremio createMany
   */
  export type ResgatePremioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ResgatePremios.
     */
    data: ResgatePremioCreateManyInput | ResgatePremioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ResgatePremio createManyAndReturn
   */
  export type ResgatePremioCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ResgatePremio
     */
    select?: ResgatePremioSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ResgatePremio
     */
    omit?: ResgatePremioOmit<ExtArgs> | null
    /**
     * The data used to create many ResgatePremios.
     */
    data: ResgatePremioCreateManyInput | ResgatePremioCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ResgatePremioIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ResgatePremio update
   */
  export type ResgatePremioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ResgatePremio
     */
    select?: ResgatePremioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ResgatePremio
     */
    omit?: ResgatePremioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ResgatePremioInclude<ExtArgs> | null
    /**
     * The data needed to update a ResgatePremio.
     */
    data: XOR<ResgatePremioUpdateInput, ResgatePremioUncheckedUpdateInput>
    /**
     * Choose, which ResgatePremio to update.
     */
    where: ResgatePremioWhereUniqueInput
  }

  /**
   * ResgatePremio updateMany
   */
  export type ResgatePremioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ResgatePremios.
     */
    data: XOR<ResgatePremioUpdateManyMutationInput, ResgatePremioUncheckedUpdateManyInput>
    /**
     * Filter which ResgatePremios to update
     */
    where?: ResgatePremioWhereInput
    /**
     * Limit how many ResgatePremios to update.
     */
    limit?: number
  }

  /**
   * ResgatePremio updateManyAndReturn
   */
  export type ResgatePremioUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ResgatePremio
     */
    select?: ResgatePremioSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ResgatePremio
     */
    omit?: ResgatePremioOmit<ExtArgs> | null
    /**
     * The data used to update ResgatePremios.
     */
    data: XOR<ResgatePremioUpdateManyMutationInput, ResgatePremioUncheckedUpdateManyInput>
    /**
     * Filter which ResgatePremios to update
     */
    where?: ResgatePremioWhereInput
    /**
     * Limit how many ResgatePremios to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ResgatePremioIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ResgatePremio upsert
   */
  export type ResgatePremioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ResgatePremio
     */
    select?: ResgatePremioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ResgatePremio
     */
    omit?: ResgatePremioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ResgatePremioInclude<ExtArgs> | null
    /**
     * The filter to search for the ResgatePremio to update in case it exists.
     */
    where: ResgatePremioWhereUniqueInput
    /**
     * In case the ResgatePremio found by the `where` argument doesn't exist, create a new ResgatePremio with this data.
     */
    create: XOR<ResgatePremioCreateInput, ResgatePremioUncheckedCreateInput>
    /**
     * In case the ResgatePremio was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ResgatePremioUpdateInput, ResgatePremioUncheckedUpdateInput>
  }

  /**
   * ResgatePremio delete
   */
  export type ResgatePremioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ResgatePremio
     */
    select?: ResgatePremioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ResgatePremio
     */
    omit?: ResgatePremioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ResgatePremioInclude<ExtArgs> | null
    /**
     * Filter which ResgatePremio to delete.
     */
    where: ResgatePremioWhereUniqueInput
  }

  /**
   * ResgatePremio deleteMany
   */
  export type ResgatePremioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ResgatePremios to delete
     */
    where?: ResgatePremioWhereInput
    /**
     * Limit how many ResgatePremios to delete.
     */
    limit?: number
  }

  /**
   * ResgatePremio without action
   */
  export type ResgatePremioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ResgatePremio
     */
    select?: ResgatePremioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ResgatePremio
     */
    omit?: ResgatePremioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ResgatePremioInclude<ExtArgs> | null
  }


  /**
   * Model RelatorioFinanceiro
   */

  export type AggregateRelatorioFinanceiro = {
    _count: RelatorioFinanceiroCountAggregateOutputType | null
    _avg: RelatorioFinanceiroAvgAggregateOutputType | null
    _sum: RelatorioFinanceiroSumAggregateOutputType | null
    _min: RelatorioFinanceiroMinAggregateOutputType | null
    _max: RelatorioFinanceiroMaxAggregateOutputType | null
  }

  export type RelatorioFinanceiroAvgAggregateOutputType = {
    valor: Decimal | null
  }

  export type RelatorioFinanceiroSumAggregateOutputType = {
    valor: Decimal | null
  }

  export type RelatorioFinanceiroMinAggregateOutputType = {
    id: string | null
    valor: Decimal | null
    status: $Enums.StatusPagamento | null
    tipo: string | null
    dataGerado: Date | null
    dataPagamento: Date | null
    observacoes: string | null
    usuarioId: string | null
    campanhaId: string | null
    criadoEm: Date | null
    atualizadoEm: Date | null
  }

  export type RelatorioFinanceiroMaxAggregateOutputType = {
    id: string | null
    valor: Decimal | null
    status: $Enums.StatusPagamento | null
    tipo: string | null
    dataGerado: Date | null
    dataPagamento: Date | null
    observacoes: string | null
    usuarioId: string | null
    campanhaId: string | null
    criadoEm: Date | null
    atualizadoEm: Date | null
  }

  export type RelatorioFinanceiroCountAggregateOutputType = {
    id: number
    valor: number
    status: number
    tipo: number
    dataGerado: number
    dataPagamento: number
    observacoes: number
    usuarioId: number
    campanhaId: number
    criadoEm: number
    atualizadoEm: number
    _all: number
  }


  export type RelatorioFinanceiroAvgAggregateInputType = {
    valor?: true
  }

  export type RelatorioFinanceiroSumAggregateInputType = {
    valor?: true
  }

  export type RelatorioFinanceiroMinAggregateInputType = {
    id?: true
    valor?: true
    status?: true
    tipo?: true
    dataGerado?: true
    dataPagamento?: true
    observacoes?: true
    usuarioId?: true
    campanhaId?: true
    criadoEm?: true
    atualizadoEm?: true
  }

  export type RelatorioFinanceiroMaxAggregateInputType = {
    id?: true
    valor?: true
    status?: true
    tipo?: true
    dataGerado?: true
    dataPagamento?: true
    observacoes?: true
    usuarioId?: true
    campanhaId?: true
    criadoEm?: true
    atualizadoEm?: true
  }

  export type RelatorioFinanceiroCountAggregateInputType = {
    id?: true
    valor?: true
    status?: true
    tipo?: true
    dataGerado?: true
    dataPagamento?: true
    observacoes?: true
    usuarioId?: true
    campanhaId?: true
    criadoEm?: true
    atualizadoEm?: true
    _all?: true
  }

  export type RelatorioFinanceiroAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RelatorioFinanceiro to aggregate.
     */
    where?: RelatorioFinanceiroWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RelatorioFinanceiros to fetch.
     */
    orderBy?: RelatorioFinanceiroOrderByWithRelationInput | RelatorioFinanceiroOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: RelatorioFinanceiroWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RelatorioFinanceiros from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RelatorioFinanceiros.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned RelatorioFinanceiros
    **/
    _count?: true | RelatorioFinanceiroCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: RelatorioFinanceiroAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: RelatorioFinanceiroSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RelatorioFinanceiroMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RelatorioFinanceiroMaxAggregateInputType
  }

  export type GetRelatorioFinanceiroAggregateType<T extends RelatorioFinanceiroAggregateArgs> = {
        [P in keyof T & keyof AggregateRelatorioFinanceiro]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRelatorioFinanceiro[P]>
      : GetScalarType<T[P], AggregateRelatorioFinanceiro[P]>
  }




  export type RelatorioFinanceiroGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RelatorioFinanceiroWhereInput
    orderBy?: RelatorioFinanceiroOrderByWithAggregationInput | RelatorioFinanceiroOrderByWithAggregationInput[]
    by: RelatorioFinanceiroScalarFieldEnum[] | RelatorioFinanceiroScalarFieldEnum
    having?: RelatorioFinanceiroScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RelatorioFinanceiroCountAggregateInputType | true
    _avg?: RelatorioFinanceiroAvgAggregateInputType
    _sum?: RelatorioFinanceiroSumAggregateInputType
    _min?: RelatorioFinanceiroMinAggregateInputType
    _max?: RelatorioFinanceiroMaxAggregateInputType
  }

  export type RelatorioFinanceiroGroupByOutputType = {
    id: string
    valor: Decimal
    status: $Enums.StatusPagamento
    tipo: string
    dataGerado: Date
    dataPagamento: Date | null
    observacoes: string | null
    usuarioId: string
    campanhaId: string
    criadoEm: Date
    atualizadoEm: Date
    _count: RelatorioFinanceiroCountAggregateOutputType | null
    _avg: RelatorioFinanceiroAvgAggregateOutputType | null
    _sum: RelatorioFinanceiroSumAggregateOutputType | null
    _min: RelatorioFinanceiroMinAggregateOutputType | null
    _max: RelatorioFinanceiroMaxAggregateOutputType | null
  }

  type GetRelatorioFinanceiroGroupByPayload<T extends RelatorioFinanceiroGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RelatorioFinanceiroGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RelatorioFinanceiroGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RelatorioFinanceiroGroupByOutputType[P]>
            : GetScalarType<T[P], RelatorioFinanceiroGroupByOutputType[P]>
        }
      >
    >


  export type RelatorioFinanceiroSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    valor?: boolean
    status?: boolean
    tipo?: boolean
    dataGerado?: boolean
    dataPagamento?: boolean
    observacoes?: boolean
    usuarioId?: boolean
    campanhaId?: boolean
    criadoEm?: boolean
    atualizadoEm?: boolean
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
    campanha?: boolean | CampanhaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["relatorioFinanceiro"]>

  export type RelatorioFinanceiroSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    valor?: boolean
    status?: boolean
    tipo?: boolean
    dataGerado?: boolean
    dataPagamento?: boolean
    observacoes?: boolean
    usuarioId?: boolean
    campanhaId?: boolean
    criadoEm?: boolean
    atualizadoEm?: boolean
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
    campanha?: boolean | CampanhaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["relatorioFinanceiro"]>

  export type RelatorioFinanceiroSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    valor?: boolean
    status?: boolean
    tipo?: boolean
    dataGerado?: boolean
    dataPagamento?: boolean
    observacoes?: boolean
    usuarioId?: boolean
    campanhaId?: boolean
    criadoEm?: boolean
    atualizadoEm?: boolean
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
    campanha?: boolean | CampanhaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["relatorioFinanceiro"]>

  export type RelatorioFinanceiroSelectScalar = {
    id?: boolean
    valor?: boolean
    status?: boolean
    tipo?: boolean
    dataGerado?: boolean
    dataPagamento?: boolean
    observacoes?: boolean
    usuarioId?: boolean
    campanhaId?: boolean
    criadoEm?: boolean
    atualizadoEm?: boolean
  }

  export type RelatorioFinanceiroOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "valor" | "status" | "tipo" | "dataGerado" | "dataPagamento" | "observacoes" | "usuarioId" | "campanhaId" | "criadoEm" | "atualizadoEm", ExtArgs["result"]["relatorioFinanceiro"]>
  export type RelatorioFinanceiroInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
    campanha?: boolean | CampanhaDefaultArgs<ExtArgs>
  }
  export type RelatorioFinanceiroIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
    campanha?: boolean | CampanhaDefaultArgs<ExtArgs>
  }
  export type RelatorioFinanceiroIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
    campanha?: boolean | CampanhaDefaultArgs<ExtArgs>
  }

  export type $RelatorioFinanceiroPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "RelatorioFinanceiro"
    objects: {
      /**
       * Referência ao usuário
       */
      usuario: Prisma.$UsuarioPayload<ExtArgs>
      /**
       * Referência à campanha
       */
      campanha: Prisma.$CampanhaPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      /**
       * ID único do relatório (UUID v4)
       */
      id: string
      /**
       * Valor em reais a ser pago
       */
      valor: Prisma.Decimal
      /**
       * Status do pagamento (PENDENTE, PAGO)
       */
      status: $Enums.StatusPagamento
      /**
       * Tipo de pagamento: "VENDEDOR" (por cartela) ou "GERENTE" (comissão)
       */
      tipo: string
      /**
       * Data/hora de geração do relatório
       */
      dataGerado: Date
      /**
       * Data/hora do pagamento (quando status = PAGO)
       */
      dataPagamento: Date | null
      /**
       * Observações adicionais
       */
      observacoes: string | null
      /**
       * ID do usuário beneficiário (Vendedor ou Gerente)
       */
      usuarioId: string
      /**
       * ID da campanha relacionada
       */
      campanhaId: string
      /**
       * Data de criação do registro
       */
      criadoEm: Date
      /**
       * Data da última atualização
       */
      atualizadoEm: Date
    }, ExtArgs["result"]["relatorioFinanceiro"]>
    composites: {}
  }

  type RelatorioFinanceiroGetPayload<S extends boolean | null | undefined | RelatorioFinanceiroDefaultArgs> = $Result.GetResult<Prisma.$RelatorioFinanceiroPayload, S>

  type RelatorioFinanceiroCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<RelatorioFinanceiroFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: RelatorioFinanceiroCountAggregateInputType | true
    }

  export interface RelatorioFinanceiroDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['RelatorioFinanceiro'], meta: { name: 'RelatorioFinanceiro' } }
    /**
     * Find zero or one RelatorioFinanceiro that matches the filter.
     * @param {RelatorioFinanceiroFindUniqueArgs} args - Arguments to find a RelatorioFinanceiro
     * @example
     * // Get one RelatorioFinanceiro
     * const relatorioFinanceiro = await prisma.relatorioFinanceiro.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends RelatorioFinanceiroFindUniqueArgs>(args: SelectSubset<T, RelatorioFinanceiroFindUniqueArgs<ExtArgs>>): Prisma__RelatorioFinanceiroClient<$Result.GetResult<Prisma.$RelatorioFinanceiroPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one RelatorioFinanceiro that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {RelatorioFinanceiroFindUniqueOrThrowArgs} args - Arguments to find a RelatorioFinanceiro
     * @example
     * // Get one RelatorioFinanceiro
     * const relatorioFinanceiro = await prisma.relatorioFinanceiro.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends RelatorioFinanceiroFindUniqueOrThrowArgs>(args: SelectSubset<T, RelatorioFinanceiroFindUniqueOrThrowArgs<ExtArgs>>): Prisma__RelatorioFinanceiroClient<$Result.GetResult<Prisma.$RelatorioFinanceiroPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first RelatorioFinanceiro that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RelatorioFinanceiroFindFirstArgs} args - Arguments to find a RelatorioFinanceiro
     * @example
     * // Get one RelatorioFinanceiro
     * const relatorioFinanceiro = await prisma.relatorioFinanceiro.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends RelatorioFinanceiroFindFirstArgs>(args?: SelectSubset<T, RelatorioFinanceiroFindFirstArgs<ExtArgs>>): Prisma__RelatorioFinanceiroClient<$Result.GetResult<Prisma.$RelatorioFinanceiroPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first RelatorioFinanceiro that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RelatorioFinanceiroFindFirstOrThrowArgs} args - Arguments to find a RelatorioFinanceiro
     * @example
     * // Get one RelatorioFinanceiro
     * const relatorioFinanceiro = await prisma.relatorioFinanceiro.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends RelatorioFinanceiroFindFirstOrThrowArgs>(args?: SelectSubset<T, RelatorioFinanceiroFindFirstOrThrowArgs<ExtArgs>>): Prisma__RelatorioFinanceiroClient<$Result.GetResult<Prisma.$RelatorioFinanceiroPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more RelatorioFinanceiros that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RelatorioFinanceiroFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all RelatorioFinanceiros
     * const relatorioFinanceiros = await prisma.relatorioFinanceiro.findMany()
     * 
     * // Get first 10 RelatorioFinanceiros
     * const relatorioFinanceiros = await prisma.relatorioFinanceiro.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const relatorioFinanceiroWithIdOnly = await prisma.relatorioFinanceiro.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends RelatorioFinanceiroFindManyArgs>(args?: SelectSubset<T, RelatorioFinanceiroFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RelatorioFinanceiroPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a RelatorioFinanceiro.
     * @param {RelatorioFinanceiroCreateArgs} args - Arguments to create a RelatorioFinanceiro.
     * @example
     * // Create one RelatorioFinanceiro
     * const RelatorioFinanceiro = await prisma.relatorioFinanceiro.create({
     *   data: {
     *     // ... data to create a RelatorioFinanceiro
     *   }
     * })
     * 
     */
    create<T extends RelatorioFinanceiroCreateArgs>(args: SelectSubset<T, RelatorioFinanceiroCreateArgs<ExtArgs>>): Prisma__RelatorioFinanceiroClient<$Result.GetResult<Prisma.$RelatorioFinanceiroPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many RelatorioFinanceiros.
     * @param {RelatorioFinanceiroCreateManyArgs} args - Arguments to create many RelatorioFinanceiros.
     * @example
     * // Create many RelatorioFinanceiros
     * const relatorioFinanceiro = await prisma.relatorioFinanceiro.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends RelatorioFinanceiroCreateManyArgs>(args?: SelectSubset<T, RelatorioFinanceiroCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many RelatorioFinanceiros and returns the data saved in the database.
     * @param {RelatorioFinanceiroCreateManyAndReturnArgs} args - Arguments to create many RelatorioFinanceiros.
     * @example
     * // Create many RelatorioFinanceiros
     * const relatorioFinanceiro = await prisma.relatorioFinanceiro.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many RelatorioFinanceiros and only return the `id`
     * const relatorioFinanceiroWithIdOnly = await prisma.relatorioFinanceiro.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends RelatorioFinanceiroCreateManyAndReturnArgs>(args?: SelectSubset<T, RelatorioFinanceiroCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RelatorioFinanceiroPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a RelatorioFinanceiro.
     * @param {RelatorioFinanceiroDeleteArgs} args - Arguments to delete one RelatorioFinanceiro.
     * @example
     * // Delete one RelatorioFinanceiro
     * const RelatorioFinanceiro = await prisma.relatorioFinanceiro.delete({
     *   where: {
     *     // ... filter to delete one RelatorioFinanceiro
     *   }
     * })
     * 
     */
    delete<T extends RelatorioFinanceiroDeleteArgs>(args: SelectSubset<T, RelatorioFinanceiroDeleteArgs<ExtArgs>>): Prisma__RelatorioFinanceiroClient<$Result.GetResult<Prisma.$RelatorioFinanceiroPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one RelatorioFinanceiro.
     * @param {RelatorioFinanceiroUpdateArgs} args - Arguments to update one RelatorioFinanceiro.
     * @example
     * // Update one RelatorioFinanceiro
     * const relatorioFinanceiro = await prisma.relatorioFinanceiro.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends RelatorioFinanceiroUpdateArgs>(args: SelectSubset<T, RelatorioFinanceiroUpdateArgs<ExtArgs>>): Prisma__RelatorioFinanceiroClient<$Result.GetResult<Prisma.$RelatorioFinanceiroPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more RelatorioFinanceiros.
     * @param {RelatorioFinanceiroDeleteManyArgs} args - Arguments to filter RelatorioFinanceiros to delete.
     * @example
     * // Delete a few RelatorioFinanceiros
     * const { count } = await prisma.relatorioFinanceiro.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends RelatorioFinanceiroDeleteManyArgs>(args?: SelectSubset<T, RelatorioFinanceiroDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more RelatorioFinanceiros.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RelatorioFinanceiroUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many RelatorioFinanceiros
     * const relatorioFinanceiro = await prisma.relatorioFinanceiro.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends RelatorioFinanceiroUpdateManyArgs>(args: SelectSubset<T, RelatorioFinanceiroUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more RelatorioFinanceiros and returns the data updated in the database.
     * @param {RelatorioFinanceiroUpdateManyAndReturnArgs} args - Arguments to update many RelatorioFinanceiros.
     * @example
     * // Update many RelatorioFinanceiros
     * const relatorioFinanceiro = await prisma.relatorioFinanceiro.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more RelatorioFinanceiros and only return the `id`
     * const relatorioFinanceiroWithIdOnly = await prisma.relatorioFinanceiro.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends RelatorioFinanceiroUpdateManyAndReturnArgs>(args: SelectSubset<T, RelatorioFinanceiroUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RelatorioFinanceiroPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one RelatorioFinanceiro.
     * @param {RelatorioFinanceiroUpsertArgs} args - Arguments to update or create a RelatorioFinanceiro.
     * @example
     * // Update or create a RelatorioFinanceiro
     * const relatorioFinanceiro = await prisma.relatorioFinanceiro.upsert({
     *   create: {
     *     // ... data to create a RelatorioFinanceiro
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the RelatorioFinanceiro we want to update
     *   }
     * })
     */
    upsert<T extends RelatorioFinanceiroUpsertArgs>(args: SelectSubset<T, RelatorioFinanceiroUpsertArgs<ExtArgs>>): Prisma__RelatorioFinanceiroClient<$Result.GetResult<Prisma.$RelatorioFinanceiroPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of RelatorioFinanceiros.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RelatorioFinanceiroCountArgs} args - Arguments to filter RelatorioFinanceiros to count.
     * @example
     * // Count the number of RelatorioFinanceiros
     * const count = await prisma.relatorioFinanceiro.count({
     *   where: {
     *     // ... the filter for the RelatorioFinanceiros we want to count
     *   }
     * })
    **/
    count<T extends RelatorioFinanceiroCountArgs>(
      args?: Subset<T, RelatorioFinanceiroCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RelatorioFinanceiroCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a RelatorioFinanceiro.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RelatorioFinanceiroAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RelatorioFinanceiroAggregateArgs>(args: Subset<T, RelatorioFinanceiroAggregateArgs>): Prisma.PrismaPromise<GetRelatorioFinanceiroAggregateType<T>>

    /**
     * Group by RelatorioFinanceiro.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RelatorioFinanceiroGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends RelatorioFinanceiroGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: RelatorioFinanceiroGroupByArgs['orderBy'] }
        : { orderBy?: RelatorioFinanceiroGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, RelatorioFinanceiroGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRelatorioFinanceiroGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the RelatorioFinanceiro model
   */
  readonly fields: RelatorioFinanceiroFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for RelatorioFinanceiro.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__RelatorioFinanceiroClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    usuario<T extends UsuarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UsuarioDefaultArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    campanha<T extends CampanhaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CampanhaDefaultArgs<ExtArgs>>): Prisma__CampanhaClient<$Result.GetResult<Prisma.$CampanhaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the RelatorioFinanceiro model
   */
  interface RelatorioFinanceiroFieldRefs {
    readonly id: FieldRef<"RelatorioFinanceiro", 'String'>
    readonly valor: FieldRef<"RelatorioFinanceiro", 'Decimal'>
    readonly status: FieldRef<"RelatorioFinanceiro", 'StatusPagamento'>
    readonly tipo: FieldRef<"RelatorioFinanceiro", 'String'>
    readonly dataGerado: FieldRef<"RelatorioFinanceiro", 'DateTime'>
    readonly dataPagamento: FieldRef<"RelatorioFinanceiro", 'DateTime'>
    readonly observacoes: FieldRef<"RelatorioFinanceiro", 'String'>
    readonly usuarioId: FieldRef<"RelatorioFinanceiro", 'String'>
    readonly campanhaId: FieldRef<"RelatorioFinanceiro", 'String'>
    readonly criadoEm: FieldRef<"RelatorioFinanceiro", 'DateTime'>
    readonly atualizadoEm: FieldRef<"RelatorioFinanceiro", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * RelatorioFinanceiro findUnique
   */
  export type RelatorioFinanceiroFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RelatorioFinanceiro
     */
    select?: RelatorioFinanceiroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RelatorioFinanceiro
     */
    omit?: RelatorioFinanceiroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RelatorioFinanceiroInclude<ExtArgs> | null
    /**
     * Filter, which RelatorioFinanceiro to fetch.
     */
    where: RelatorioFinanceiroWhereUniqueInput
  }

  /**
   * RelatorioFinanceiro findUniqueOrThrow
   */
  export type RelatorioFinanceiroFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RelatorioFinanceiro
     */
    select?: RelatorioFinanceiroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RelatorioFinanceiro
     */
    omit?: RelatorioFinanceiroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RelatorioFinanceiroInclude<ExtArgs> | null
    /**
     * Filter, which RelatorioFinanceiro to fetch.
     */
    where: RelatorioFinanceiroWhereUniqueInput
  }

  /**
   * RelatorioFinanceiro findFirst
   */
  export type RelatorioFinanceiroFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RelatorioFinanceiro
     */
    select?: RelatorioFinanceiroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RelatorioFinanceiro
     */
    omit?: RelatorioFinanceiroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RelatorioFinanceiroInclude<ExtArgs> | null
    /**
     * Filter, which RelatorioFinanceiro to fetch.
     */
    where?: RelatorioFinanceiroWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RelatorioFinanceiros to fetch.
     */
    orderBy?: RelatorioFinanceiroOrderByWithRelationInput | RelatorioFinanceiroOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RelatorioFinanceiros.
     */
    cursor?: RelatorioFinanceiroWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RelatorioFinanceiros from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RelatorioFinanceiros.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RelatorioFinanceiros.
     */
    distinct?: RelatorioFinanceiroScalarFieldEnum | RelatorioFinanceiroScalarFieldEnum[]
  }

  /**
   * RelatorioFinanceiro findFirstOrThrow
   */
  export type RelatorioFinanceiroFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RelatorioFinanceiro
     */
    select?: RelatorioFinanceiroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RelatorioFinanceiro
     */
    omit?: RelatorioFinanceiroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RelatorioFinanceiroInclude<ExtArgs> | null
    /**
     * Filter, which RelatorioFinanceiro to fetch.
     */
    where?: RelatorioFinanceiroWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RelatorioFinanceiros to fetch.
     */
    orderBy?: RelatorioFinanceiroOrderByWithRelationInput | RelatorioFinanceiroOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RelatorioFinanceiros.
     */
    cursor?: RelatorioFinanceiroWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RelatorioFinanceiros from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RelatorioFinanceiros.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RelatorioFinanceiros.
     */
    distinct?: RelatorioFinanceiroScalarFieldEnum | RelatorioFinanceiroScalarFieldEnum[]
  }

  /**
   * RelatorioFinanceiro findMany
   */
  export type RelatorioFinanceiroFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RelatorioFinanceiro
     */
    select?: RelatorioFinanceiroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RelatorioFinanceiro
     */
    omit?: RelatorioFinanceiroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RelatorioFinanceiroInclude<ExtArgs> | null
    /**
     * Filter, which RelatorioFinanceiros to fetch.
     */
    where?: RelatorioFinanceiroWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RelatorioFinanceiros to fetch.
     */
    orderBy?: RelatorioFinanceiroOrderByWithRelationInput | RelatorioFinanceiroOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing RelatorioFinanceiros.
     */
    cursor?: RelatorioFinanceiroWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RelatorioFinanceiros from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RelatorioFinanceiros.
     */
    skip?: number
    distinct?: RelatorioFinanceiroScalarFieldEnum | RelatorioFinanceiroScalarFieldEnum[]
  }

  /**
   * RelatorioFinanceiro create
   */
  export type RelatorioFinanceiroCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RelatorioFinanceiro
     */
    select?: RelatorioFinanceiroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RelatorioFinanceiro
     */
    omit?: RelatorioFinanceiroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RelatorioFinanceiroInclude<ExtArgs> | null
    /**
     * The data needed to create a RelatorioFinanceiro.
     */
    data: XOR<RelatorioFinanceiroCreateInput, RelatorioFinanceiroUncheckedCreateInput>
  }

  /**
   * RelatorioFinanceiro createMany
   */
  export type RelatorioFinanceiroCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many RelatorioFinanceiros.
     */
    data: RelatorioFinanceiroCreateManyInput | RelatorioFinanceiroCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * RelatorioFinanceiro createManyAndReturn
   */
  export type RelatorioFinanceiroCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RelatorioFinanceiro
     */
    select?: RelatorioFinanceiroSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the RelatorioFinanceiro
     */
    omit?: RelatorioFinanceiroOmit<ExtArgs> | null
    /**
     * The data used to create many RelatorioFinanceiros.
     */
    data: RelatorioFinanceiroCreateManyInput | RelatorioFinanceiroCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RelatorioFinanceiroIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * RelatorioFinanceiro update
   */
  export type RelatorioFinanceiroUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RelatorioFinanceiro
     */
    select?: RelatorioFinanceiroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RelatorioFinanceiro
     */
    omit?: RelatorioFinanceiroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RelatorioFinanceiroInclude<ExtArgs> | null
    /**
     * The data needed to update a RelatorioFinanceiro.
     */
    data: XOR<RelatorioFinanceiroUpdateInput, RelatorioFinanceiroUncheckedUpdateInput>
    /**
     * Choose, which RelatorioFinanceiro to update.
     */
    where: RelatorioFinanceiroWhereUniqueInput
  }

  /**
   * RelatorioFinanceiro updateMany
   */
  export type RelatorioFinanceiroUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update RelatorioFinanceiros.
     */
    data: XOR<RelatorioFinanceiroUpdateManyMutationInput, RelatorioFinanceiroUncheckedUpdateManyInput>
    /**
     * Filter which RelatorioFinanceiros to update
     */
    where?: RelatorioFinanceiroWhereInput
    /**
     * Limit how many RelatorioFinanceiros to update.
     */
    limit?: number
  }

  /**
   * RelatorioFinanceiro updateManyAndReturn
   */
  export type RelatorioFinanceiroUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RelatorioFinanceiro
     */
    select?: RelatorioFinanceiroSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the RelatorioFinanceiro
     */
    omit?: RelatorioFinanceiroOmit<ExtArgs> | null
    /**
     * The data used to update RelatorioFinanceiros.
     */
    data: XOR<RelatorioFinanceiroUpdateManyMutationInput, RelatorioFinanceiroUncheckedUpdateManyInput>
    /**
     * Filter which RelatorioFinanceiros to update
     */
    where?: RelatorioFinanceiroWhereInput
    /**
     * Limit how many RelatorioFinanceiros to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RelatorioFinanceiroIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * RelatorioFinanceiro upsert
   */
  export type RelatorioFinanceiroUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RelatorioFinanceiro
     */
    select?: RelatorioFinanceiroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RelatorioFinanceiro
     */
    omit?: RelatorioFinanceiroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RelatorioFinanceiroInclude<ExtArgs> | null
    /**
     * The filter to search for the RelatorioFinanceiro to update in case it exists.
     */
    where: RelatorioFinanceiroWhereUniqueInput
    /**
     * In case the RelatorioFinanceiro found by the `where` argument doesn't exist, create a new RelatorioFinanceiro with this data.
     */
    create: XOR<RelatorioFinanceiroCreateInput, RelatorioFinanceiroUncheckedCreateInput>
    /**
     * In case the RelatorioFinanceiro was found with the provided `where` argument, update it with this data.
     */
    update: XOR<RelatorioFinanceiroUpdateInput, RelatorioFinanceiroUncheckedUpdateInput>
  }

  /**
   * RelatorioFinanceiro delete
   */
  export type RelatorioFinanceiroDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RelatorioFinanceiro
     */
    select?: RelatorioFinanceiroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RelatorioFinanceiro
     */
    omit?: RelatorioFinanceiroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RelatorioFinanceiroInclude<ExtArgs> | null
    /**
     * Filter which RelatorioFinanceiro to delete.
     */
    where: RelatorioFinanceiroWhereUniqueInput
  }

  /**
   * RelatorioFinanceiro deleteMany
   */
  export type RelatorioFinanceiroDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RelatorioFinanceiros to delete
     */
    where?: RelatorioFinanceiroWhereInput
    /**
     * Limit how many RelatorioFinanceiros to delete.
     */
    limit?: number
  }

  /**
   * RelatorioFinanceiro without action
   */
  export type RelatorioFinanceiroDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RelatorioFinanceiro
     */
    select?: RelatorioFinanceiroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RelatorioFinanceiro
     */
    omit?: RelatorioFinanceiroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RelatorioFinanceiroInclude<ExtArgs> | null
  }


  /**
   * Model Notificacao
   */

  export type AggregateNotificacao = {
    _count: NotificacaoCountAggregateOutputType | null
    _min: NotificacaoMinAggregateOutputType | null
    _max: NotificacaoMaxAggregateOutputType | null
  }

  export type NotificacaoMinAggregateOutputType = {
    id: string | null
    mensagem: string | null
    lida: boolean | null
    linkUrl: string | null
    dataCriacao: Date | null
    usuarioId: string | null
    criadoEm: Date | null
    atualizadoEm: Date | null
  }

  export type NotificacaoMaxAggregateOutputType = {
    id: string | null
    mensagem: string | null
    lida: boolean | null
    linkUrl: string | null
    dataCriacao: Date | null
    usuarioId: string | null
    criadoEm: Date | null
    atualizadoEm: Date | null
  }

  export type NotificacaoCountAggregateOutputType = {
    id: number
    mensagem: number
    lida: number
    linkUrl: number
    dataCriacao: number
    usuarioId: number
    criadoEm: number
    atualizadoEm: number
    _all: number
  }


  export type NotificacaoMinAggregateInputType = {
    id?: true
    mensagem?: true
    lida?: true
    linkUrl?: true
    dataCriacao?: true
    usuarioId?: true
    criadoEm?: true
    atualizadoEm?: true
  }

  export type NotificacaoMaxAggregateInputType = {
    id?: true
    mensagem?: true
    lida?: true
    linkUrl?: true
    dataCriacao?: true
    usuarioId?: true
    criadoEm?: true
    atualizadoEm?: true
  }

  export type NotificacaoCountAggregateInputType = {
    id?: true
    mensagem?: true
    lida?: true
    linkUrl?: true
    dataCriacao?: true
    usuarioId?: true
    criadoEm?: true
    atualizadoEm?: true
    _all?: true
  }

  export type NotificacaoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Notificacao to aggregate.
     */
    where?: NotificacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Notificacaos to fetch.
     */
    orderBy?: NotificacaoOrderByWithRelationInput | NotificacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: NotificacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Notificacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Notificacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Notificacaos
    **/
    _count?: true | NotificacaoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: NotificacaoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: NotificacaoMaxAggregateInputType
  }

  export type GetNotificacaoAggregateType<T extends NotificacaoAggregateArgs> = {
        [P in keyof T & keyof AggregateNotificacao]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateNotificacao[P]>
      : GetScalarType<T[P], AggregateNotificacao[P]>
  }




  export type NotificacaoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NotificacaoWhereInput
    orderBy?: NotificacaoOrderByWithAggregationInput | NotificacaoOrderByWithAggregationInput[]
    by: NotificacaoScalarFieldEnum[] | NotificacaoScalarFieldEnum
    having?: NotificacaoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: NotificacaoCountAggregateInputType | true
    _min?: NotificacaoMinAggregateInputType
    _max?: NotificacaoMaxAggregateInputType
  }

  export type NotificacaoGroupByOutputType = {
    id: string
    mensagem: string
    lida: boolean
    linkUrl: string | null
    dataCriacao: Date
    usuarioId: string
    criadoEm: Date
    atualizadoEm: Date
    _count: NotificacaoCountAggregateOutputType | null
    _min: NotificacaoMinAggregateOutputType | null
    _max: NotificacaoMaxAggregateOutputType | null
  }

  type GetNotificacaoGroupByPayload<T extends NotificacaoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<NotificacaoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof NotificacaoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], NotificacaoGroupByOutputType[P]>
            : GetScalarType<T[P], NotificacaoGroupByOutputType[P]>
        }
      >
    >


  export type NotificacaoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    mensagem?: boolean
    lida?: boolean
    linkUrl?: boolean
    dataCriacao?: boolean
    usuarioId?: boolean
    criadoEm?: boolean
    atualizadoEm?: boolean
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["notificacao"]>

  export type NotificacaoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    mensagem?: boolean
    lida?: boolean
    linkUrl?: boolean
    dataCriacao?: boolean
    usuarioId?: boolean
    criadoEm?: boolean
    atualizadoEm?: boolean
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["notificacao"]>

  export type NotificacaoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    mensagem?: boolean
    lida?: boolean
    linkUrl?: boolean
    dataCriacao?: boolean
    usuarioId?: boolean
    criadoEm?: boolean
    atualizadoEm?: boolean
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["notificacao"]>

  export type NotificacaoSelectScalar = {
    id?: boolean
    mensagem?: boolean
    lida?: boolean
    linkUrl?: boolean
    dataCriacao?: boolean
    usuarioId?: boolean
    criadoEm?: boolean
    atualizadoEm?: boolean
  }

  export type NotificacaoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "mensagem" | "lida" | "linkUrl" | "dataCriacao" | "usuarioId" | "criadoEm" | "atualizadoEm", ExtArgs["result"]["notificacao"]>
  export type NotificacaoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }
  export type NotificacaoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }
  export type NotificacaoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }

  export type $NotificacaoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Notificacao"
    objects: {
      /**
       * Referência ao usuário
       */
      usuario: Prisma.$UsuarioPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      /**
       * ID único da notificação (UUID v4)
       */
      id: string
      /**
       * Mensagem da notificação (ex: "Sua venda #1234 foi validada! +500 pontos")
       */
      mensagem: string
      /**
       * Indica se a notificação foi lida pelo usuário
       */
      lida: boolean
      /**
       * URL de link opcional (ex: redirecionar para detalhes da venda)
       */
      linkUrl: string | null
      /**
       * Data/hora de criação da notificação
       */
      dataCriacao: Date
      /**
       * ID do usuário destinatário
       */
      usuarioId: string
      /**
       * Data de criação do registro
       */
      criadoEm: Date
      /**
       * Data da última atualização
       */
      atualizadoEm: Date
    }, ExtArgs["result"]["notificacao"]>
    composites: {}
  }

  type NotificacaoGetPayload<S extends boolean | null | undefined | NotificacaoDefaultArgs> = $Result.GetResult<Prisma.$NotificacaoPayload, S>

  type NotificacaoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<NotificacaoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: NotificacaoCountAggregateInputType | true
    }

  export interface NotificacaoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Notificacao'], meta: { name: 'Notificacao' } }
    /**
     * Find zero or one Notificacao that matches the filter.
     * @param {NotificacaoFindUniqueArgs} args - Arguments to find a Notificacao
     * @example
     * // Get one Notificacao
     * const notificacao = await prisma.notificacao.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends NotificacaoFindUniqueArgs>(args: SelectSubset<T, NotificacaoFindUniqueArgs<ExtArgs>>): Prisma__NotificacaoClient<$Result.GetResult<Prisma.$NotificacaoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Notificacao that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {NotificacaoFindUniqueOrThrowArgs} args - Arguments to find a Notificacao
     * @example
     * // Get one Notificacao
     * const notificacao = await prisma.notificacao.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends NotificacaoFindUniqueOrThrowArgs>(args: SelectSubset<T, NotificacaoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__NotificacaoClient<$Result.GetResult<Prisma.$NotificacaoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Notificacao that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificacaoFindFirstArgs} args - Arguments to find a Notificacao
     * @example
     * // Get one Notificacao
     * const notificacao = await prisma.notificacao.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends NotificacaoFindFirstArgs>(args?: SelectSubset<T, NotificacaoFindFirstArgs<ExtArgs>>): Prisma__NotificacaoClient<$Result.GetResult<Prisma.$NotificacaoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Notificacao that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificacaoFindFirstOrThrowArgs} args - Arguments to find a Notificacao
     * @example
     * // Get one Notificacao
     * const notificacao = await prisma.notificacao.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends NotificacaoFindFirstOrThrowArgs>(args?: SelectSubset<T, NotificacaoFindFirstOrThrowArgs<ExtArgs>>): Prisma__NotificacaoClient<$Result.GetResult<Prisma.$NotificacaoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Notificacaos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificacaoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Notificacaos
     * const notificacaos = await prisma.notificacao.findMany()
     * 
     * // Get first 10 Notificacaos
     * const notificacaos = await prisma.notificacao.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const notificacaoWithIdOnly = await prisma.notificacao.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends NotificacaoFindManyArgs>(args?: SelectSubset<T, NotificacaoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotificacaoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Notificacao.
     * @param {NotificacaoCreateArgs} args - Arguments to create a Notificacao.
     * @example
     * // Create one Notificacao
     * const Notificacao = await prisma.notificacao.create({
     *   data: {
     *     // ... data to create a Notificacao
     *   }
     * })
     * 
     */
    create<T extends NotificacaoCreateArgs>(args: SelectSubset<T, NotificacaoCreateArgs<ExtArgs>>): Prisma__NotificacaoClient<$Result.GetResult<Prisma.$NotificacaoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Notificacaos.
     * @param {NotificacaoCreateManyArgs} args - Arguments to create many Notificacaos.
     * @example
     * // Create many Notificacaos
     * const notificacao = await prisma.notificacao.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends NotificacaoCreateManyArgs>(args?: SelectSubset<T, NotificacaoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Notificacaos and returns the data saved in the database.
     * @param {NotificacaoCreateManyAndReturnArgs} args - Arguments to create many Notificacaos.
     * @example
     * // Create many Notificacaos
     * const notificacao = await prisma.notificacao.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Notificacaos and only return the `id`
     * const notificacaoWithIdOnly = await prisma.notificacao.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends NotificacaoCreateManyAndReturnArgs>(args?: SelectSubset<T, NotificacaoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotificacaoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Notificacao.
     * @param {NotificacaoDeleteArgs} args - Arguments to delete one Notificacao.
     * @example
     * // Delete one Notificacao
     * const Notificacao = await prisma.notificacao.delete({
     *   where: {
     *     // ... filter to delete one Notificacao
     *   }
     * })
     * 
     */
    delete<T extends NotificacaoDeleteArgs>(args: SelectSubset<T, NotificacaoDeleteArgs<ExtArgs>>): Prisma__NotificacaoClient<$Result.GetResult<Prisma.$NotificacaoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Notificacao.
     * @param {NotificacaoUpdateArgs} args - Arguments to update one Notificacao.
     * @example
     * // Update one Notificacao
     * const notificacao = await prisma.notificacao.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends NotificacaoUpdateArgs>(args: SelectSubset<T, NotificacaoUpdateArgs<ExtArgs>>): Prisma__NotificacaoClient<$Result.GetResult<Prisma.$NotificacaoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Notificacaos.
     * @param {NotificacaoDeleteManyArgs} args - Arguments to filter Notificacaos to delete.
     * @example
     * // Delete a few Notificacaos
     * const { count } = await prisma.notificacao.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends NotificacaoDeleteManyArgs>(args?: SelectSubset<T, NotificacaoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Notificacaos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificacaoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Notificacaos
     * const notificacao = await prisma.notificacao.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends NotificacaoUpdateManyArgs>(args: SelectSubset<T, NotificacaoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Notificacaos and returns the data updated in the database.
     * @param {NotificacaoUpdateManyAndReturnArgs} args - Arguments to update many Notificacaos.
     * @example
     * // Update many Notificacaos
     * const notificacao = await prisma.notificacao.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Notificacaos and only return the `id`
     * const notificacaoWithIdOnly = await prisma.notificacao.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends NotificacaoUpdateManyAndReturnArgs>(args: SelectSubset<T, NotificacaoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotificacaoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Notificacao.
     * @param {NotificacaoUpsertArgs} args - Arguments to update or create a Notificacao.
     * @example
     * // Update or create a Notificacao
     * const notificacao = await prisma.notificacao.upsert({
     *   create: {
     *     // ... data to create a Notificacao
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Notificacao we want to update
     *   }
     * })
     */
    upsert<T extends NotificacaoUpsertArgs>(args: SelectSubset<T, NotificacaoUpsertArgs<ExtArgs>>): Prisma__NotificacaoClient<$Result.GetResult<Prisma.$NotificacaoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Notificacaos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificacaoCountArgs} args - Arguments to filter Notificacaos to count.
     * @example
     * // Count the number of Notificacaos
     * const count = await prisma.notificacao.count({
     *   where: {
     *     // ... the filter for the Notificacaos we want to count
     *   }
     * })
    **/
    count<T extends NotificacaoCountArgs>(
      args?: Subset<T, NotificacaoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], NotificacaoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Notificacao.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificacaoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends NotificacaoAggregateArgs>(args: Subset<T, NotificacaoAggregateArgs>): Prisma.PrismaPromise<GetNotificacaoAggregateType<T>>

    /**
     * Group by Notificacao.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificacaoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends NotificacaoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: NotificacaoGroupByArgs['orderBy'] }
        : { orderBy?: NotificacaoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, NotificacaoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetNotificacaoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Notificacao model
   */
  readonly fields: NotificacaoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Notificacao.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__NotificacaoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    usuario<T extends UsuarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UsuarioDefaultArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Notificacao model
   */
  interface NotificacaoFieldRefs {
    readonly id: FieldRef<"Notificacao", 'String'>
    readonly mensagem: FieldRef<"Notificacao", 'String'>
    readonly lida: FieldRef<"Notificacao", 'Boolean'>
    readonly linkUrl: FieldRef<"Notificacao", 'String'>
    readonly dataCriacao: FieldRef<"Notificacao", 'DateTime'>
    readonly usuarioId: FieldRef<"Notificacao", 'String'>
    readonly criadoEm: FieldRef<"Notificacao", 'DateTime'>
    readonly atualizadoEm: FieldRef<"Notificacao", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Notificacao findUnique
   */
  export type NotificacaoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notificacao
     */
    select?: NotificacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notificacao
     */
    omit?: NotificacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificacaoInclude<ExtArgs> | null
    /**
     * Filter, which Notificacao to fetch.
     */
    where: NotificacaoWhereUniqueInput
  }

  /**
   * Notificacao findUniqueOrThrow
   */
  export type NotificacaoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notificacao
     */
    select?: NotificacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notificacao
     */
    omit?: NotificacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificacaoInclude<ExtArgs> | null
    /**
     * Filter, which Notificacao to fetch.
     */
    where: NotificacaoWhereUniqueInput
  }

  /**
   * Notificacao findFirst
   */
  export type NotificacaoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notificacao
     */
    select?: NotificacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notificacao
     */
    omit?: NotificacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificacaoInclude<ExtArgs> | null
    /**
     * Filter, which Notificacao to fetch.
     */
    where?: NotificacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Notificacaos to fetch.
     */
    orderBy?: NotificacaoOrderByWithRelationInput | NotificacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Notificacaos.
     */
    cursor?: NotificacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Notificacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Notificacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Notificacaos.
     */
    distinct?: NotificacaoScalarFieldEnum | NotificacaoScalarFieldEnum[]
  }

  /**
   * Notificacao findFirstOrThrow
   */
  export type NotificacaoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notificacao
     */
    select?: NotificacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notificacao
     */
    omit?: NotificacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificacaoInclude<ExtArgs> | null
    /**
     * Filter, which Notificacao to fetch.
     */
    where?: NotificacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Notificacaos to fetch.
     */
    orderBy?: NotificacaoOrderByWithRelationInput | NotificacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Notificacaos.
     */
    cursor?: NotificacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Notificacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Notificacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Notificacaos.
     */
    distinct?: NotificacaoScalarFieldEnum | NotificacaoScalarFieldEnum[]
  }

  /**
   * Notificacao findMany
   */
  export type NotificacaoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notificacao
     */
    select?: NotificacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notificacao
     */
    omit?: NotificacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificacaoInclude<ExtArgs> | null
    /**
     * Filter, which Notificacaos to fetch.
     */
    where?: NotificacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Notificacaos to fetch.
     */
    orderBy?: NotificacaoOrderByWithRelationInput | NotificacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Notificacaos.
     */
    cursor?: NotificacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Notificacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Notificacaos.
     */
    skip?: number
    distinct?: NotificacaoScalarFieldEnum | NotificacaoScalarFieldEnum[]
  }

  /**
   * Notificacao create
   */
  export type NotificacaoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notificacao
     */
    select?: NotificacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notificacao
     */
    omit?: NotificacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificacaoInclude<ExtArgs> | null
    /**
     * The data needed to create a Notificacao.
     */
    data: XOR<NotificacaoCreateInput, NotificacaoUncheckedCreateInput>
  }

  /**
   * Notificacao createMany
   */
  export type NotificacaoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Notificacaos.
     */
    data: NotificacaoCreateManyInput | NotificacaoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Notificacao createManyAndReturn
   */
  export type NotificacaoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notificacao
     */
    select?: NotificacaoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Notificacao
     */
    omit?: NotificacaoOmit<ExtArgs> | null
    /**
     * The data used to create many Notificacaos.
     */
    data: NotificacaoCreateManyInput | NotificacaoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificacaoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Notificacao update
   */
  export type NotificacaoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notificacao
     */
    select?: NotificacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notificacao
     */
    omit?: NotificacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificacaoInclude<ExtArgs> | null
    /**
     * The data needed to update a Notificacao.
     */
    data: XOR<NotificacaoUpdateInput, NotificacaoUncheckedUpdateInput>
    /**
     * Choose, which Notificacao to update.
     */
    where: NotificacaoWhereUniqueInput
  }

  /**
   * Notificacao updateMany
   */
  export type NotificacaoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Notificacaos.
     */
    data: XOR<NotificacaoUpdateManyMutationInput, NotificacaoUncheckedUpdateManyInput>
    /**
     * Filter which Notificacaos to update
     */
    where?: NotificacaoWhereInput
    /**
     * Limit how many Notificacaos to update.
     */
    limit?: number
  }

  /**
   * Notificacao updateManyAndReturn
   */
  export type NotificacaoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notificacao
     */
    select?: NotificacaoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Notificacao
     */
    omit?: NotificacaoOmit<ExtArgs> | null
    /**
     * The data used to update Notificacaos.
     */
    data: XOR<NotificacaoUpdateManyMutationInput, NotificacaoUncheckedUpdateManyInput>
    /**
     * Filter which Notificacaos to update
     */
    where?: NotificacaoWhereInput
    /**
     * Limit how many Notificacaos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificacaoIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Notificacao upsert
   */
  export type NotificacaoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notificacao
     */
    select?: NotificacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notificacao
     */
    omit?: NotificacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificacaoInclude<ExtArgs> | null
    /**
     * The filter to search for the Notificacao to update in case it exists.
     */
    where: NotificacaoWhereUniqueInput
    /**
     * In case the Notificacao found by the `where` argument doesn't exist, create a new Notificacao with this data.
     */
    create: XOR<NotificacaoCreateInput, NotificacaoUncheckedCreateInput>
    /**
     * In case the Notificacao was found with the provided `where` argument, update it with this data.
     */
    update: XOR<NotificacaoUpdateInput, NotificacaoUncheckedUpdateInput>
  }

  /**
   * Notificacao delete
   */
  export type NotificacaoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notificacao
     */
    select?: NotificacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notificacao
     */
    omit?: NotificacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificacaoInclude<ExtArgs> | null
    /**
     * Filter which Notificacao to delete.
     */
    where: NotificacaoWhereUniqueInput
  }

  /**
   * Notificacao deleteMany
   */
  export type NotificacaoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Notificacaos to delete
     */
    where?: NotificacaoWhereInput
    /**
     * Limit how many Notificacaos to delete.
     */
    limit?: number
  }

  /**
   * Notificacao without action
   */
  export type NotificacaoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notificacao
     */
    select?: NotificacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notificacao
     */
    omit?: NotificacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificacaoInclude<ExtArgs> | null
  }


  /**
   * Model ConfiguracaoGlobal
   */

  export type AggregateConfiguracaoGlobal = {
    _count: ConfiguracaoGlobalCountAggregateOutputType | null
    _min: ConfiguracaoGlobalMinAggregateOutputType | null
    _max: ConfiguracaoGlobalMaxAggregateOutputType | null
  }

  export type ConfiguracaoGlobalMinAggregateOutputType = {
    id: string | null
    chave: string | null
    valor: string | null
    descricao: string | null
    criadoEm: Date | null
    atualizadoEm: Date | null
  }

  export type ConfiguracaoGlobalMaxAggregateOutputType = {
    id: string | null
    chave: string | null
    valor: string | null
    descricao: string | null
    criadoEm: Date | null
    atualizadoEm: Date | null
  }

  export type ConfiguracaoGlobalCountAggregateOutputType = {
    id: number
    chave: number
    valor: number
    descricao: number
    criadoEm: number
    atualizadoEm: number
    _all: number
  }


  export type ConfiguracaoGlobalMinAggregateInputType = {
    id?: true
    chave?: true
    valor?: true
    descricao?: true
    criadoEm?: true
    atualizadoEm?: true
  }

  export type ConfiguracaoGlobalMaxAggregateInputType = {
    id?: true
    chave?: true
    valor?: true
    descricao?: true
    criadoEm?: true
    atualizadoEm?: true
  }

  export type ConfiguracaoGlobalCountAggregateInputType = {
    id?: true
    chave?: true
    valor?: true
    descricao?: true
    criadoEm?: true
    atualizadoEm?: true
    _all?: true
  }

  export type ConfiguracaoGlobalAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ConfiguracaoGlobal to aggregate.
     */
    where?: ConfiguracaoGlobalWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ConfiguracaoGlobals to fetch.
     */
    orderBy?: ConfiguracaoGlobalOrderByWithRelationInput | ConfiguracaoGlobalOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ConfiguracaoGlobalWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ConfiguracaoGlobals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ConfiguracaoGlobals.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ConfiguracaoGlobals
    **/
    _count?: true | ConfiguracaoGlobalCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ConfiguracaoGlobalMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ConfiguracaoGlobalMaxAggregateInputType
  }

  export type GetConfiguracaoGlobalAggregateType<T extends ConfiguracaoGlobalAggregateArgs> = {
        [P in keyof T & keyof AggregateConfiguracaoGlobal]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateConfiguracaoGlobal[P]>
      : GetScalarType<T[P], AggregateConfiguracaoGlobal[P]>
  }




  export type ConfiguracaoGlobalGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ConfiguracaoGlobalWhereInput
    orderBy?: ConfiguracaoGlobalOrderByWithAggregationInput | ConfiguracaoGlobalOrderByWithAggregationInput[]
    by: ConfiguracaoGlobalScalarFieldEnum[] | ConfiguracaoGlobalScalarFieldEnum
    having?: ConfiguracaoGlobalScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ConfiguracaoGlobalCountAggregateInputType | true
    _min?: ConfiguracaoGlobalMinAggregateInputType
    _max?: ConfiguracaoGlobalMaxAggregateInputType
  }

  export type ConfiguracaoGlobalGroupByOutputType = {
    id: string
    chave: string
    valor: string
    descricao: string
    criadoEm: Date
    atualizadoEm: Date
    _count: ConfiguracaoGlobalCountAggregateOutputType | null
    _min: ConfiguracaoGlobalMinAggregateOutputType | null
    _max: ConfiguracaoGlobalMaxAggregateOutputType | null
  }

  type GetConfiguracaoGlobalGroupByPayload<T extends ConfiguracaoGlobalGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ConfiguracaoGlobalGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ConfiguracaoGlobalGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ConfiguracaoGlobalGroupByOutputType[P]>
            : GetScalarType<T[P], ConfiguracaoGlobalGroupByOutputType[P]>
        }
      >
    >


  export type ConfiguracaoGlobalSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    chave?: boolean
    valor?: boolean
    descricao?: boolean
    criadoEm?: boolean
    atualizadoEm?: boolean
  }, ExtArgs["result"]["configuracaoGlobal"]>

  export type ConfiguracaoGlobalSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    chave?: boolean
    valor?: boolean
    descricao?: boolean
    criadoEm?: boolean
    atualizadoEm?: boolean
  }, ExtArgs["result"]["configuracaoGlobal"]>

  export type ConfiguracaoGlobalSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    chave?: boolean
    valor?: boolean
    descricao?: boolean
    criadoEm?: boolean
    atualizadoEm?: boolean
  }, ExtArgs["result"]["configuracaoGlobal"]>

  export type ConfiguracaoGlobalSelectScalar = {
    id?: boolean
    chave?: boolean
    valor?: boolean
    descricao?: boolean
    criadoEm?: boolean
    atualizadoEm?: boolean
  }

  export type ConfiguracaoGlobalOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "chave" | "valor" | "descricao" | "criadoEm" | "atualizadoEm", ExtArgs["result"]["configuracaoGlobal"]>

  export type $ConfiguracaoGlobalPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ConfiguracaoGlobal"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      /**
       * ID único da configuração (UUID v4)
       */
      id: string
      /**
       * Chave da configuração (ex: "PONTOS_NIVEL_PRATA", "TAXA_CONVERSAO_REAL")
       */
      chave: string
      /**
       * Valor da configuração (armazenado como string, parse conforme necessário)
       */
      valor: string
      /**
       * Descrição da configuração (para documentação)
       */
      descricao: string
      /**
       * Data de criação do registro
       */
      criadoEm: Date
      /**
       * Data da última atualização
       */
      atualizadoEm: Date
    }, ExtArgs["result"]["configuracaoGlobal"]>
    composites: {}
  }

  type ConfiguracaoGlobalGetPayload<S extends boolean | null | undefined | ConfiguracaoGlobalDefaultArgs> = $Result.GetResult<Prisma.$ConfiguracaoGlobalPayload, S>

  type ConfiguracaoGlobalCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ConfiguracaoGlobalFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ConfiguracaoGlobalCountAggregateInputType | true
    }

  export interface ConfiguracaoGlobalDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ConfiguracaoGlobal'], meta: { name: 'ConfiguracaoGlobal' } }
    /**
     * Find zero or one ConfiguracaoGlobal that matches the filter.
     * @param {ConfiguracaoGlobalFindUniqueArgs} args - Arguments to find a ConfiguracaoGlobal
     * @example
     * // Get one ConfiguracaoGlobal
     * const configuracaoGlobal = await prisma.configuracaoGlobal.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ConfiguracaoGlobalFindUniqueArgs>(args: SelectSubset<T, ConfiguracaoGlobalFindUniqueArgs<ExtArgs>>): Prisma__ConfiguracaoGlobalClient<$Result.GetResult<Prisma.$ConfiguracaoGlobalPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ConfiguracaoGlobal that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ConfiguracaoGlobalFindUniqueOrThrowArgs} args - Arguments to find a ConfiguracaoGlobal
     * @example
     * // Get one ConfiguracaoGlobal
     * const configuracaoGlobal = await prisma.configuracaoGlobal.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ConfiguracaoGlobalFindUniqueOrThrowArgs>(args: SelectSubset<T, ConfiguracaoGlobalFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ConfiguracaoGlobalClient<$Result.GetResult<Prisma.$ConfiguracaoGlobalPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ConfiguracaoGlobal that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConfiguracaoGlobalFindFirstArgs} args - Arguments to find a ConfiguracaoGlobal
     * @example
     * // Get one ConfiguracaoGlobal
     * const configuracaoGlobal = await prisma.configuracaoGlobal.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ConfiguracaoGlobalFindFirstArgs>(args?: SelectSubset<T, ConfiguracaoGlobalFindFirstArgs<ExtArgs>>): Prisma__ConfiguracaoGlobalClient<$Result.GetResult<Prisma.$ConfiguracaoGlobalPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ConfiguracaoGlobal that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConfiguracaoGlobalFindFirstOrThrowArgs} args - Arguments to find a ConfiguracaoGlobal
     * @example
     * // Get one ConfiguracaoGlobal
     * const configuracaoGlobal = await prisma.configuracaoGlobal.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ConfiguracaoGlobalFindFirstOrThrowArgs>(args?: SelectSubset<T, ConfiguracaoGlobalFindFirstOrThrowArgs<ExtArgs>>): Prisma__ConfiguracaoGlobalClient<$Result.GetResult<Prisma.$ConfiguracaoGlobalPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ConfiguracaoGlobals that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConfiguracaoGlobalFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ConfiguracaoGlobals
     * const configuracaoGlobals = await prisma.configuracaoGlobal.findMany()
     * 
     * // Get first 10 ConfiguracaoGlobals
     * const configuracaoGlobals = await prisma.configuracaoGlobal.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const configuracaoGlobalWithIdOnly = await prisma.configuracaoGlobal.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ConfiguracaoGlobalFindManyArgs>(args?: SelectSubset<T, ConfiguracaoGlobalFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ConfiguracaoGlobalPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ConfiguracaoGlobal.
     * @param {ConfiguracaoGlobalCreateArgs} args - Arguments to create a ConfiguracaoGlobal.
     * @example
     * // Create one ConfiguracaoGlobal
     * const ConfiguracaoGlobal = await prisma.configuracaoGlobal.create({
     *   data: {
     *     // ... data to create a ConfiguracaoGlobal
     *   }
     * })
     * 
     */
    create<T extends ConfiguracaoGlobalCreateArgs>(args: SelectSubset<T, ConfiguracaoGlobalCreateArgs<ExtArgs>>): Prisma__ConfiguracaoGlobalClient<$Result.GetResult<Prisma.$ConfiguracaoGlobalPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ConfiguracaoGlobals.
     * @param {ConfiguracaoGlobalCreateManyArgs} args - Arguments to create many ConfiguracaoGlobals.
     * @example
     * // Create many ConfiguracaoGlobals
     * const configuracaoGlobal = await prisma.configuracaoGlobal.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ConfiguracaoGlobalCreateManyArgs>(args?: SelectSubset<T, ConfiguracaoGlobalCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ConfiguracaoGlobals and returns the data saved in the database.
     * @param {ConfiguracaoGlobalCreateManyAndReturnArgs} args - Arguments to create many ConfiguracaoGlobals.
     * @example
     * // Create many ConfiguracaoGlobals
     * const configuracaoGlobal = await prisma.configuracaoGlobal.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ConfiguracaoGlobals and only return the `id`
     * const configuracaoGlobalWithIdOnly = await prisma.configuracaoGlobal.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ConfiguracaoGlobalCreateManyAndReturnArgs>(args?: SelectSubset<T, ConfiguracaoGlobalCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ConfiguracaoGlobalPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ConfiguracaoGlobal.
     * @param {ConfiguracaoGlobalDeleteArgs} args - Arguments to delete one ConfiguracaoGlobal.
     * @example
     * // Delete one ConfiguracaoGlobal
     * const ConfiguracaoGlobal = await prisma.configuracaoGlobal.delete({
     *   where: {
     *     // ... filter to delete one ConfiguracaoGlobal
     *   }
     * })
     * 
     */
    delete<T extends ConfiguracaoGlobalDeleteArgs>(args: SelectSubset<T, ConfiguracaoGlobalDeleteArgs<ExtArgs>>): Prisma__ConfiguracaoGlobalClient<$Result.GetResult<Prisma.$ConfiguracaoGlobalPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ConfiguracaoGlobal.
     * @param {ConfiguracaoGlobalUpdateArgs} args - Arguments to update one ConfiguracaoGlobal.
     * @example
     * // Update one ConfiguracaoGlobal
     * const configuracaoGlobal = await prisma.configuracaoGlobal.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ConfiguracaoGlobalUpdateArgs>(args: SelectSubset<T, ConfiguracaoGlobalUpdateArgs<ExtArgs>>): Prisma__ConfiguracaoGlobalClient<$Result.GetResult<Prisma.$ConfiguracaoGlobalPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ConfiguracaoGlobals.
     * @param {ConfiguracaoGlobalDeleteManyArgs} args - Arguments to filter ConfiguracaoGlobals to delete.
     * @example
     * // Delete a few ConfiguracaoGlobals
     * const { count } = await prisma.configuracaoGlobal.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ConfiguracaoGlobalDeleteManyArgs>(args?: SelectSubset<T, ConfiguracaoGlobalDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ConfiguracaoGlobals.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConfiguracaoGlobalUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ConfiguracaoGlobals
     * const configuracaoGlobal = await prisma.configuracaoGlobal.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ConfiguracaoGlobalUpdateManyArgs>(args: SelectSubset<T, ConfiguracaoGlobalUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ConfiguracaoGlobals and returns the data updated in the database.
     * @param {ConfiguracaoGlobalUpdateManyAndReturnArgs} args - Arguments to update many ConfiguracaoGlobals.
     * @example
     * // Update many ConfiguracaoGlobals
     * const configuracaoGlobal = await prisma.configuracaoGlobal.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ConfiguracaoGlobals and only return the `id`
     * const configuracaoGlobalWithIdOnly = await prisma.configuracaoGlobal.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ConfiguracaoGlobalUpdateManyAndReturnArgs>(args: SelectSubset<T, ConfiguracaoGlobalUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ConfiguracaoGlobalPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ConfiguracaoGlobal.
     * @param {ConfiguracaoGlobalUpsertArgs} args - Arguments to update or create a ConfiguracaoGlobal.
     * @example
     * // Update or create a ConfiguracaoGlobal
     * const configuracaoGlobal = await prisma.configuracaoGlobal.upsert({
     *   create: {
     *     // ... data to create a ConfiguracaoGlobal
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ConfiguracaoGlobal we want to update
     *   }
     * })
     */
    upsert<T extends ConfiguracaoGlobalUpsertArgs>(args: SelectSubset<T, ConfiguracaoGlobalUpsertArgs<ExtArgs>>): Prisma__ConfiguracaoGlobalClient<$Result.GetResult<Prisma.$ConfiguracaoGlobalPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ConfiguracaoGlobals.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConfiguracaoGlobalCountArgs} args - Arguments to filter ConfiguracaoGlobals to count.
     * @example
     * // Count the number of ConfiguracaoGlobals
     * const count = await prisma.configuracaoGlobal.count({
     *   where: {
     *     // ... the filter for the ConfiguracaoGlobals we want to count
     *   }
     * })
    **/
    count<T extends ConfiguracaoGlobalCountArgs>(
      args?: Subset<T, ConfiguracaoGlobalCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ConfiguracaoGlobalCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ConfiguracaoGlobal.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConfiguracaoGlobalAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ConfiguracaoGlobalAggregateArgs>(args: Subset<T, ConfiguracaoGlobalAggregateArgs>): Prisma.PrismaPromise<GetConfiguracaoGlobalAggregateType<T>>

    /**
     * Group by ConfiguracaoGlobal.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConfiguracaoGlobalGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ConfiguracaoGlobalGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ConfiguracaoGlobalGroupByArgs['orderBy'] }
        : { orderBy?: ConfiguracaoGlobalGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ConfiguracaoGlobalGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetConfiguracaoGlobalGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ConfiguracaoGlobal model
   */
  readonly fields: ConfiguracaoGlobalFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ConfiguracaoGlobal.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ConfiguracaoGlobalClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ConfiguracaoGlobal model
   */
  interface ConfiguracaoGlobalFieldRefs {
    readonly id: FieldRef<"ConfiguracaoGlobal", 'String'>
    readonly chave: FieldRef<"ConfiguracaoGlobal", 'String'>
    readonly valor: FieldRef<"ConfiguracaoGlobal", 'String'>
    readonly descricao: FieldRef<"ConfiguracaoGlobal", 'String'>
    readonly criadoEm: FieldRef<"ConfiguracaoGlobal", 'DateTime'>
    readonly atualizadoEm: FieldRef<"ConfiguracaoGlobal", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * ConfiguracaoGlobal findUnique
   */
  export type ConfiguracaoGlobalFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConfiguracaoGlobal
     */
    select?: ConfiguracaoGlobalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ConfiguracaoGlobal
     */
    omit?: ConfiguracaoGlobalOmit<ExtArgs> | null
    /**
     * Filter, which ConfiguracaoGlobal to fetch.
     */
    where: ConfiguracaoGlobalWhereUniqueInput
  }

  /**
   * ConfiguracaoGlobal findUniqueOrThrow
   */
  export type ConfiguracaoGlobalFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConfiguracaoGlobal
     */
    select?: ConfiguracaoGlobalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ConfiguracaoGlobal
     */
    omit?: ConfiguracaoGlobalOmit<ExtArgs> | null
    /**
     * Filter, which ConfiguracaoGlobal to fetch.
     */
    where: ConfiguracaoGlobalWhereUniqueInput
  }

  /**
   * ConfiguracaoGlobal findFirst
   */
  export type ConfiguracaoGlobalFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConfiguracaoGlobal
     */
    select?: ConfiguracaoGlobalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ConfiguracaoGlobal
     */
    omit?: ConfiguracaoGlobalOmit<ExtArgs> | null
    /**
     * Filter, which ConfiguracaoGlobal to fetch.
     */
    where?: ConfiguracaoGlobalWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ConfiguracaoGlobals to fetch.
     */
    orderBy?: ConfiguracaoGlobalOrderByWithRelationInput | ConfiguracaoGlobalOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ConfiguracaoGlobals.
     */
    cursor?: ConfiguracaoGlobalWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ConfiguracaoGlobals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ConfiguracaoGlobals.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ConfiguracaoGlobals.
     */
    distinct?: ConfiguracaoGlobalScalarFieldEnum | ConfiguracaoGlobalScalarFieldEnum[]
  }

  /**
   * ConfiguracaoGlobal findFirstOrThrow
   */
  export type ConfiguracaoGlobalFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConfiguracaoGlobal
     */
    select?: ConfiguracaoGlobalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ConfiguracaoGlobal
     */
    omit?: ConfiguracaoGlobalOmit<ExtArgs> | null
    /**
     * Filter, which ConfiguracaoGlobal to fetch.
     */
    where?: ConfiguracaoGlobalWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ConfiguracaoGlobals to fetch.
     */
    orderBy?: ConfiguracaoGlobalOrderByWithRelationInput | ConfiguracaoGlobalOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ConfiguracaoGlobals.
     */
    cursor?: ConfiguracaoGlobalWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ConfiguracaoGlobals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ConfiguracaoGlobals.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ConfiguracaoGlobals.
     */
    distinct?: ConfiguracaoGlobalScalarFieldEnum | ConfiguracaoGlobalScalarFieldEnum[]
  }

  /**
   * ConfiguracaoGlobal findMany
   */
  export type ConfiguracaoGlobalFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConfiguracaoGlobal
     */
    select?: ConfiguracaoGlobalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ConfiguracaoGlobal
     */
    omit?: ConfiguracaoGlobalOmit<ExtArgs> | null
    /**
     * Filter, which ConfiguracaoGlobals to fetch.
     */
    where?: ConfiguracaoGlobalWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ConfiguracaoGlobals to fetch.
     */
    orderBy?: ConfiguracaoGlobalOrderByWithRelationInput | ConfiguracaoGlobalOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ConfiguracaoGlobals.
     */
    cursor?: ConfiguracaoGlobalWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ConfiguracaoGlobals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ConfiguracaoGlobals.
     */
    skip?: number
    distinct?: ConfiguracaoGlobalScalarFieldEnum | ConfiguracaoGlobalScalarFieldEnum[]
  }

  /**
   * ConfiguracaoGlobal create
   */
  export type ConfiguracaoGlobalCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConfiguracaoGlobal
     */
    select?: ConfiguracaoGlobalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ConfiguracaoGlobal
     */
    omit?: ConfiguracaoGlobalOmit<ExtArgs> | null
    /**
     * The data needed to create a ConfiguracaoGlobal.
     */
    data: XOR<ConfiguracaoGlobalCreateInput, ConfiguracaoGlobalUncheckedCreateInput>
  }

  /**
   * ConfiguracaoGlobal createMany
   */
  export type ConfiguracaoGlobalCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ConfiguracaoGlobals.
     */
    data: ConfiguracaoGlobalCreateManyInput | ConfiguracaoGlobalCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ConfiguracaoGlobal createManyAndReturn
   */
  export type ConfiguracaoGlobalCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConfiguracaoGlobal
     */
    select?: ConfiguracaoGlobalSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ConfiguracaoGlobal
     */
    omit?: ConfiguracaoGlobalOmit<ExtArgs> | null
    /**
     * The data used to create many ConfiguracaoGlobals.
     */
    data: ConfiguracaoGlobalCreateManyInput | ConfiguracaoGlobalCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ConfiguracaoGlobal update
   */
  export type ConfiguracaoGlobalUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConfiguracaoGlobal
     */
    select?: ConfiguracaoGlobalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ConfiguracaoGlobal
     */
    omit?: ConfiguracaoGlobalOmit<ExtArgs> | null
    /**
     * The data needed to update a ConfiguracaoGlobal.
     */
    data: XOR<ConfiguracaoGlobalUpdateInput, ConfiguracaoGlobalUncheckedUpdateInput>
    /**
     * Choose, which ConfiguracaoGlobal to update.
     */
    where: ConfiguracaoGlobalWhereUniqueInput
  }

  /**
   * ConfiguracaoGlobal updateMany
   */
  export type ConfiguracaoGlobalUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ConfiguracaoGlobals.
     */
    data: XOR<ConfiguracaoGlobalUpdateManyMutationInput, ConfiguracaoGlobalUncheckedUpdateManyInput>
    /**
     * Filter which ConfiguracaoGlobals to update
     */
    where?: ConfiguracaoGlobalWhereInput
    /**
     * Limit how many ConfiguracaoGlobals to update.
     */
    limit?: number
  }

  /**
   * ConfiguracaoGlobal updateManyAndReturn
   */
  export type ConfiguracaoGlobalUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConfiguracaoGlobal
     */
    select?: ConfiguracaoGlobalSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ConfiguracaoGlobal
     */
    omit?: ConfiguracaoGlobalOmit<ExtArgs> | null
    /**
     * The data used to update ConfiguracaoGlobals.
     */
    data: XOR<ConfiguracaoGlobalUpdateManyMutationInput, ConfiguracaoGlobalUncheckedUpdateManyInput>
    /**
     * Filter which ConfiguracaoGlobals to update
     */
    where?: ConfiguracaoGlobalWhereInput
    /**
     * Limit how many ConfiguracaoGlobals to update.
     */
    limit?: number
  }

  /**
   * ConfiguracaoGlobal upsert
   */
  export type ConfiguracaoGlobalUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConfiguracaoGlobal
     */
    select?: ConfiguracaoGlobalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ConfiguracaoGlobal
     */
    omit?: ConfiguracaoGlobalOmit<ExtArgs> | null
    /**
     * The filter to search for the ConfiguracaoGlobal to update in case it exists.
     */
    where: ConfiguracaoGlobalWhereUniqueInput
    /**
     * In case the ConfiguracaoGlobal found by the `where` argument doesn't exist, create a new ConfiguracaoGlobal with this data.
     */
    create: XOR<ConfiguracaoGlobalCreateInput, ConfiguracaoGlobalUncheckedCreateInput>
    /**
     * In case the ConfiguracaoGlobal was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ConfiguracaoGlobalUpdateInput, ConfiguracaoGlobalUncheckedUpdateInput>
  }

  /**
   * ConfiguracaoGlobal delete
   */
  export type ConfiguracaoGlobalDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConfiguracaoGlobal
     */
    select?: ConfiguracaoGlobalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ConfiguracaoGlobal
     */
    omit?: ConfiguracaoGlobalOmit<ExtArgs> | null
    /**
     * Filter which ConfiguracaoGlobal to delete.
     */
    where: ConfiguracaoGlobalWhereUniqueInput
  }

  /**
   * ConfiguracaoGlobal deleteMany
   */
  export type ConfiguracaoGlobalDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ConfiguracaoGlobals to delete
     */
    where?: ConfiguracaoGlobalWhereInput
    /**
     * Limit how many ConfiguracaoGlobals to delete.
     */
    limit?: number
  }

  /**
   * ConfiguracaoGlobal without action
   */
  export type ConfiguracaoGlobalDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConfiguracaoGlobal
     */
    select?: ConfiguracaoGlobalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ConfiguracaoGlobal
     */
    omit?: ConfiguracaoGlobalOmit<ExtArgs> | null
  }


  /**
   * Model CartelaConcluida
   */

  export type AggregateCartelaConcluida = {
    _count: CartelaConcluidaCountAggregateOutputType | null
    _avg: CartelaConcluidaAvgAggregateOutputType | null
    _sum: CartelaConcluidaSumAggregateOutputType | null
    _min: CartelaConcluidaMinAggregateOutputType | null
    _max: CartelaConcluidaMaxAggregateOutputType | null
  }

  export type CartelaConcluidaAvgAggregateOutputType = {
    numeroCartela: number | null
  }

  export type CartelaConcluidaSumAggregateOutputType = {
    numeroCartela: number | null
  }

  export type CartelaConcluidaMinAggregateOutputType = {
    id: string | null
    dataConclusao: Date | null
    numeroCartela: number | null
    vendedorId: string | null
    campanhaId: string | null
  }

  export type CartelaConcluidaMaxAggregateOutputType = {
    id: string | null
    dataConclusao: Date | null
    numeroCartela: number | null
    vendedorId: string | null
    campanhaId: string | null
  }

  export type CartelaConcluidaCountAggregateOutputType = {
    id: number
    dataConclusao: number
    numeroCartela: number
    vendedorId: number
    campanhaId: number
    _all: number
  }


  export type CartelaConcluidaAvgAggregateInputType = {
    numeroCartela?: true
  }

  export type CartelaConcluidaSumAggregateInputType = {
    numeroCartela?: true
  }

  export type CartelaConcluidaMinAggregateInputType = {
    id?: true
    dataConclusao?: true
    numeroCartela?: true
    vendedorId?: true
    campanhaId?: true
  }

  export type CartelaConcluidaMaxAggregateInputType = {
    id?: true
    dataConclusao?: true
    numeroCartela?: true
    vendedorId?: true
    campanhaId?: true
  }

  export type CartelaConcluidaCountAggregateInputType = {
    id?: true
    dataConclusao?: true
    numeroCartela?: true
    vendedorId?: true
    campanhaId?: true
    _all?: true
  }

  export type CartelaConcluidaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CartelaConcluida to aggregate.
     */
    where?: CartelaConcluidaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CartelaConcluidas to fetch.
     */
    orderBy?: CartelaConcluidaOrderByWithRelationInput | CartelaConcluidaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CartelaConcluidaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CartelaConcluidas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CartelaConcluidas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned CartelaConcluidas
    **/
    _count?: true | CartelaConcluidaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CartelaConcluidaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CartelaConcluidaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CartelaConcluidaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CartelaConcluidaMaxAggregateInputType
  }

  export type GetCartelaConcluidaAggregateType<T extends CartelaConcluidaAggregateArgs> = {
        [P in keyof T & keyof AggregateCartelaConcluida]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCartelaConcluida[P]>
      : GetScalarType<T[P], AggregateCartelaConcluida[P]>
  }




  export type CartelaConcluidaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CartelaConcluidaWhereInput
    orderBy?: CartelaConcluidaOrderByWithAggregationInput | CartelaConcluidaOrderByWithAggregationInput[]
    by: CartelaConcluidaScalarFieldEnum[] | CartelaConcluidaScalarFieldEnum
    having?: CartelaConcluidaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CartelaConcluidaCountAggregateInputType | true
    _avg?: CartelaConcluidaAvgAggregateInputType
    _sum?: CartelaConcluidaSumAggregateInputType
    _min?: CartelaConcluidaMinAggregateInputType
    _max?: CartelaConcluidaMaxAggregateInputType
  }

  export type CartelaConcluidaGroupByOutputType = {
    id: string
    dataConclusao: Date
    numeroCartela: number
    vendedorId: string
    campanhaId: string
    _count: CartelaConcluidaCountAggregateOutputType | null
    _avg: CartelaConcluidaAvgAggregateOutputType | null
    _sum: CartelaConcluidaSumAggregateOutputType | null
    _min: CartelaConcluidaMinAggregateOutputType | null
    _max: CartelaConcluidaMaxAggregateOutputType | null
  }

  type GetCartelaConcluidaGroupByPayload<T extends CartelaConcluidaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CartelaConcluidaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CartelaConcluidaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CartelaConcluidaGroupByOutputType[P]>
            : GetScalarType<T[P], CartelaConcluidaGroupByOutputType[P]>
        }
      >
    >


  export type CartelaConcluidaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    dataConclusao?: boolean
    numeroCartela?: boolean
    vendedorId?: boolean
    campanhaId?: boolean
    vendedor?: boolean | UsuarioDefaultArgs<ExtArgs>
    campanha?: boolean | CampanhaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cartelaConcluida"]>

  export type CartelaConcluidaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    dataConclusao?: boolean
    numeroCartela?: boolean
    vendedorId?: boolean
    campanhaId?: boolean
    vendedor?: boolean | UsuarioDefaultArgs<ExtArgs>
    campanha?: boolean | CampanhaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cartelaConcluida"]>

  export type CartelaConcluidaSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    dataConclusao?: boolean
    numeroCartela?: boolean
    vendedorId?: boolean
    campanhaId?: boolean
    vendedor?: boolean | UsuarioDefaultArgs<ExtArgs>
    campanha?: boolean | CampanhaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cartelaConcluida"]>

  export type CartelaConcluidaSelectScalar = {
    id?: boolean
    dataConclusao?: boolean
    numeroCartela?: boolean
    vendedorId?: boolean
    campanhaId?: boolean
  }

  export type CartelaConcluidaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "dataConclusao" | "numeroCartela" | "vendedorId" | "campanhaId", ExtArgs["result"]["cartelaConcluida"]>
  export type CartelaConcluidaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    vendedor?: boolean | UsuarioDefaultArgs<ExtArgs>
    campanha?: boolean | CampanhaDefaultArgs<ExtArgs>
  }
  export type CartelaConcluidaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    vendedor?: boolean | UsuarioDefaultArgs<ExtArgs>
    campanha?: boolean | CampanhaDefaultArgs<ExtArgs>
  }
  export type CartelaConcluidaIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    vendedor?: boolean | UsuarioDefaultArgs<ExtArgs>
    campanha?: boolean | CampanhaDefaultArgs<ExtArgs>
  }

  export type $CartelaConcluidaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "CartelaConcluida"
    objects: {
      /**
       * Relação com o usuário vendedor
       */
      vendedor: Prisma.$UsuarioPayload<ExtArgs>
      /**
       * Relação com a campanha
       */
      campanha: Prisma.$CampanhaPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      /**
       * ID único do registro (UUID v4)
       */
      id: string
      /**
       * Data/hora em que a cartela foi concluída
       */
      dataConclusao: Date
      /**
       * Número da cartela concluída (1, 2, 3...)
       */
      numeroCartela: number
      /**
       * ID do vendedor
       */
      vendedorId: string
      /**
       * ID da campanha
       */
      campanhaId: string
    }, ExtArgs["result"]["cartelaConcluida"]>
    composites: {}
  }

  type CartelaConcluidaGetPayload<S extends boolean | null | undefined | CartelaConcluidaDefaultArgs> = $Result.GetResult<Prisma.$CartelaConcluidaPayload, S>

  type CartelaConcluidaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CartelaConcluidaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CartelaConcluidaCountAggregateInputType | true
    }

  export interface CartelaConcluidaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['CartelaConcluida'], meta: { name: 'CartelaConcluida' } }
    /**
     * Find zero or one CartelaConcluida that matches the filter.
     * @param {CartelaConcluidaFindUniqueArgs} args - Arguments to find a CartelaConcluida
     * @example
     * // Get one CartelaConcluida
     * const cartelaConcluida = await prisma.cartelaConcluida.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CartelaConcluidaFindUniqueArgs>(args: SelectSubset<T, CartelaConcluidaFindUniqueArgs<ExtArgs>>): Prisma__CartelaConcluidaClient<$Result.GetResult<Prisma.$CartelaConcluidaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one CartelaConcluida that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CartelaConcluidaFindUniqueOrThrowArgs} args - Arguments to find a CartelaConcluida
     * @example
     * // Get one CartelaConcluida
     * const cartelaConcluida = await prisma.cartelaConcluida.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CartelaConcluidaFindUniqueOrThrowArgs>(args: SelectSubset<T, CartelaConcluidaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CartelaConcluidaClient<$Result.GetResult<Prisma.$CartelaConcluidaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CartelaConcluida that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CartelaConcluidaFindFirstArgs} args - Arguments to find a CartelaConcluida
     * @example
     * // Get one CartelaConcluida
     * const cartelaConcluida = await prisma.cartelaConcluida.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CartelaConcluidaFindFirstArgs>(args?: SelectSubset<T, CartelaConcluidaFindFirstArgs<ExtArgs>>): Prisma__CartelaConcluidaClient<$Result.GetResult<Prisma.$CartelaConcluidaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CartelaConcluida that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CartelaConcluidaFindFirstOrThrowArgs} args - Arguments to find a CartelaConcluida
     * @example
     * // Get one CartelaConcluida
     * const cartelaConcluida = await prisma.cartelaConcluida.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CartelaConcluidaFindFirstOrThrowArgs>(args?: SelectSubset<T, CartelaConcluidaFindFirstOrThrowArgs<ExtArgs>>): Prisma__CartelaConcluidaClient<$Result.GetResult<Prisma.$CartelaConcluidaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more CartelaConcluidas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CartelaConcluidaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all CartelaConcluidas
     * const cartelaConcluidas = await prisma.cartelaConcluida.findMany()
     * 
     * // Get first 10 CartelaConcluidas
     * const cartelaConcluidas = await prisma.cartelaConcluida.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const cartelaConcluidaWithIdOnly = await prisma.cartelaConcluida.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CartelaConcluidaFindManyArgs>(args?: SelectSubset<T, CartelaConcluidaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CartelaConcluidaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a CartelaConcluida.
     * @param {CartelaConcluidaCreateArgs} args - Arguments to create a CartelaConcluida.
     * @example
     * // Create one CartelaConcluida
     * const CartelaConcluida = await prisma.cartelaConcluida.create({
     *   data: {
     *     // ... data to create a CartelaConcluida
     *   }
     * })
     * 
     */
    create<T extends CartelaConcluidaCreateArgs>(args: SelectSubset<T, CartelaConcluidaCreateArgs<ExtArgs>>): Prisma__CartelaConcluidaClient<$Result.GetResult<Prisma.$CartelaConcluidaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many CartelaConcluidas.
     * @param {CartelaConcluidaCreateManyArgs} args - Arguments to create many CartelaConcluidas.
     * @example
     * // Create many CartelaConcluidas
     * const cartelaConcluida = await prisma.cartelaConcluida.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CartelaConcluidaCreateManyArgs>(args?: SelectSubset<T, CartelaConcluidaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many CartelaConcluidas and returns the data saved in the database.
     * @param {CartelaConcluidaCreateManyAndReturnArgs} args - Arguments to create many CartelaConcluidas.
     * @example
     * // Create many CartelaConcluidas
     * const cartelaConcluida = await prisma.cartelaConcluida.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many CartelaConcluidas and only return the `id`
     * const cartelaConcluidaWithIdOnly = await prisma.cartelaConcluida.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CartelaConcluidaCreateManyAndReturnArgs>(args?: SelectSubset<T, CartelaConcluidaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CartelaConcluidaPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a CartelaConcluida.
     * @param {CartelaConcluidaDeleteArgs} args - Arguments to delete one CartelaConcluida.
     * @example
     * // Delete one CartelaConcluida
     * const CartelaConcluida = await prisma.cartelaConcluida.delete({
     *   where: {
     *     // ... filter to delete one CartelaConcluida
     *   }
     * })
     * 
     */
    delete<T extends CartelaConcluidaDeleteArgs>(args: SelectSubset<T, CartelaConcluidaDeleteArgs<ExtArgs>>): Prisma__CartelaConcluidaClient<$Result.GetResult<Prisma.$CartelaConcluidaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one CartelaConcluida.
     * @param {CartelaConcluidaUpdateArgs} args - Arguments to update one CartelaConcluida.
     * @example
     * // Update one CartelaConcluida
     * const cartelaConcluida = await prisma.cartelaConcluida.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CartelaConcluidaUpdateArgs>(args: SelectSubset<T, CartelaConcluidaUpdateArgs<ExtArgs>>): Prisma__CartelaConcluidaClient<$Result.GetResult<Prisma.$CartelaConcluidaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more CartelaConcluidas.
     * @param {CartelaConcluidaDeleteManyArgs} args - Arguments to filter CartelaConcluidas to delete.
     * @example
     * // Delete a few CartelaConcluidas
     * const { count } = await prisma.cartelaConcluida.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CartelaConcluidaDeleteManyArgs>(args?: SelectSubset<T, CartelaConcluidaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CartelaConcluidas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CartelaConcluidaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many CartelaConcluidas
     * const cartelaConcluida = await prisma.cartelaConcluida.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CartelaConcluidaUpdateManyArgs>(args: SelectSubset<T, CartelaConcluidaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CartelaConcluidas and returns the data updated in the database.
     * @param {CartelaConcluidaUpdateManyAndReturnArgs} args - Arguments to update many CartelaConcluidas.
     * @example
     * // Update many CartelaConcluidas
     * const cartelaConcluida = await prisma.cartelaConcluida.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more CartelaConcluidas and only return the `id`
     * const cartelaConcluidaWithIdOnly = await prisma.cartelaConcluida.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends CartelaConcluidaUpdateManyAndReturnArgs>(args: SelectSubset<T, CartelaConcluidaUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CartelaConcluidaPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one CartelaConcluida.
     * @param {CartelaConcluidaUpsertArgs} args - Arguments to update or create a CartelaConcluida.
     * @example
     * // Update or create a CartelaConcluida
     * const cartelaConcluida = await prisma.cartelaConcluida.upsert({
     *   create: {
     *     // ... data to create a CartelaConcluida
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the CartelaConcluida we want to update
     *   }
     * })
     */
    upsert<T extends CartelaConcluidaUpsertArgs>(args: SelectSubset<T, CartelaConcluidaUpsertArgs<ExtArgs>>): Prisma__CartelaConcluidaClient<$Result.GetResult<Prisma.$CartelaConcluidaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of CartelaConcluidas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CartelaConcluidaCountArgs} args - Arguments to filter CartelaConcluidas to count.
     * @example
     * // Count the number of CartelaConcluidas
     * const count = await prisma.cartelaConcluida.count({
     *   where: {
     *     // ... the filter for the CartelaConcluidas we want to count
     *   }
     * })
    **/
    count<T extends CartelaConcluidaCountArgs>(
      args?: Subset<T, CartelaConcluidaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CartelaConcluidaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a CartelaConcluida.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CartelaConcluidaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CartelaConcluidaAggregateArgs>(args: Subset<T, CartelaConcluidaAggregateArgs>): Prisma.PrismaPromise<GetCartelaConcluidaAggregateType<T>>

    /**
     * Group by CartelaConcluida.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CartelaConcluidaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CartelaConcluidaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CartelaConcluidaGroupByArgs['orderBy'] }
        : { orderBy?: CartelaConcluidaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CartelaConcluidaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCartelaConcluidaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the CartelaConcluida model
   */
  readonly fields: CartelaConcluidaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for CartelaConcluida.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CartelaConcluidaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    vendedor<T extends UsuarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UsuarioDefaultArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    campanha<T extends CampanhaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CampanhaDefaultArgs<ExtArgs>>): Prisma__CampanhaClient<$Result.GetResult<Prisma.$CampanhaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the CartelaConcluida model
   */
  interface CartelaConcluidaFieldRefs {
    readonly id: FieldRef<"CartelaConcluida", 'String'>
    readonly dataConclusao: FieldRef<"CartelaConcluida", 'DateTime'>
    readonly numeroCartela: FieldRef<"CartelaConcluida", 'Int'>
    readonly vendedorId: FieldRef<"CartelaConcluida", 'String'>
    readonly campanhaId: FieldRef<"CartelaConcluida", 'String'>
  }
    

  // Custom InputTypes
  /**
   * CartelaConcluida findUnique
   */
  export type CartelaConcluidaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CartelaConcluida
     */
    select?: CartelaConcluidaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CartelaConcluida
     */
    omit?: CartelaConcluidaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CartelaConcluidaInclude<ExtArgs> | null
    /**
     * Filter, which CartelaConcluida to fetch.
     */
    where: CartelaConcluidaWhereUniqueInput
  }

  /**
   * CartelaConcluida findUniqueOrThrow
   */
  export type CartelaConcluidaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CartelaConcluida
     */
    select?: CartelaConcluidaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CartelaConcluida
     */
    omit?: CartelaConcluidaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CartelaConcluidaInclude<ExtArgs> | null
    /**
     * Filter, which CartelaConcluida to fetch.
     */
    where: CartelaConcluidaWhereUniqueInput
  }

  /**
   * CartelaConcluida findFirst
   */
  export type CartelaConcluidaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CartelaConcluida
     */
    select?: CartelaConcluidaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CartelaConcluida
     */
    omit?: CartelaConcluidaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CartelaConcluidaInclude<ExtArgs> | null
    /**
     * Filter, which CartelaConcluida to fetch.
     */
    where?: CartelaConcluidaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CartelaConcluidas to fetch.
     */
    orderBy?: CartelaConcluidaOrderByWithRelationInput | CartelaConcluidaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CartelaConcluidas.
     */
    cursor?: CartelaConcluidaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CartelaConcluidas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CartelaConcluidas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CartelaConcluidas.
     */
    distinct?: CartelaConcluidaScalarFieldEnum | CartelaConcluidaScalarFieldEnum[]
  }

  /**
   * CartelaConcluida findFirstOrThrow
   */
  export type CartelaConcluidaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CartelaConcluida
     */
    select?: CartelaConcluidaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CartelaConcluida
     */
    omit?: CartelaConcluidaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CartelaConcluidaInclude<ExtArgs> | null
    /**
     * Filter, which CartelaConcluida to fetch.
     */
    where?: CartelaConcluidaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CartelaConcluidas to fetch.
     */
    orderBy?: CartelaConcluidaOrderByWithRelationInput | CartelaConcluidaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CartelaConcluidas.
     */
    cursor?: CartelaConcluidaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CartelaConcluidas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CartelaConcluidas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CartelaConcluidas.
     */
    distinct?: CartelaConcluidaScalarFieldEnum | CartelaConcluidaScalarFieldEnum[]
  }

  /**
   * CartelaConcluida findMany
   */
  export type CartelaConcluidaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CartelaConcluida
     */
    select?: CartelaConcluidaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CartelaConcluida
     */
    omit?: CartelaConcluidaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CartelaConcluidaInclude<ExtArgs> | null
    /**
     * Filter, which CartelaConcluidas to fetch.
     */
    where?: CartelaConcluidaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CartelaConcluidas to fetch.
     */
    orderBy?: CartelaConcluidaOrderByWithRelationInput | CartelaConcluidaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing CartelaConcluidas.
     */
    cursor?: CartelaConcluidaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CartelaConcluidas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CartelaConcluidas.
     */
    skip?: number
    distinct?: CartelaConcluidaScalarFieldEnum | CartelaConcluidaScalarFieldEnum[]
  }

  /**
   * CartelaConcluida create
   */
  export type CartelaConcluidaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CartelaConcluida
     */
    select?: CartelaConcluidaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CartelaConcluida
     */
    omit?: CartelaConcluidaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CartelaConcluidaInclude<ExtArgs> | null
    /**
     * The data needed to create a CartelaConcluida.
     */
    data: XOR<CartelaConcluidaCreateInput, CartelaConcluidaUncheckedCreateInput>
  }

  /**
   * CartelaConcluida createMany
   */
  export type CartelaConcluidaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many CartelaConcluidas.
     */
    data: CartelaConcluidaCreateManyInput | CartelaConcluidaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * CartelaConcluida createManyAndReturn
   */
  export type CartelaConcluidaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CartelaConcluida
     */
    select?: CartelaConcluidaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CartelaConcluida
     */
    omit?: CartelaConcluidaOmit<ExtArgs> | null
    /**
     * The data used to create many CartelaConcluidas.
     */
    data: CartelaConcluidaCreateManyInput | CartelaConcluidaCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CartelaConcluidaIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * CartelaConcluida update
   */
  export type CartelaConcluidaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CartelaConcluida
     */
    select?: CartelaConcluidaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CartelaConcluida
     */
    omit?: CartelaConcluidaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CartelaConcluidaInclude<ExtArgs> | null
    /**
     * The data needed to update a CartelaConcluida.
     */
    data: XOR<CartelaConcluidaUpdateInput, CartelaConcluidaUncheckedUpdateInput>
    /**
     * Choose, which CartelaConcluida to update.
     */
    where: CartelaConcluidaWhereUniqueInput
  }

  /**
   * CartelaConcluida updateMany
   */
  export type CartelaConcluidaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update CartelaConcluidas.
     */
    data: XOR<CartelaConcluidaUpdateManyMutationInput, CartelaConcluidaUncheckedUpdateManyInput>
    /**
     * Filter which CartelaConcluidas to update
     */
    where?: CartelaConcluidaWhereInput
    /**
     * Limit how many CartelaConcluidas to update.
     */
    limit?: number
  }

  /**
   * CartelaConcluida updateManyAndReturn
   */
  export type CartelaConcluidaUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CartelaConcluida
     */
    select?: CartelaConcluidaSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CartelaConcluida
     */
    omit?: CartelaConcluidaOmit<ExtArgs> | null
    /**
     * The data used to update CartelaConcluidas.
     */
    data: XOR<CartelaConcluidaUpdateManyMutationInput, CartelaConcluidaUncheckedUpdateManyInput>
    /**
     * Filter which CartelaConcluidas to update
     */
    where?: CartelaConcluidaWhereInput
    /**
     * Limit how many CartelaConcluidas to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CartelaConcluidaIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * CartelaConcluida upsert
   */
  export type CartelaConcluidaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CartelaConcluida
     */
    select?: CartelaConcluidaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CartelaConcluida
     */
    omit?: CartelaConcluidaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CartelaConcluidaInclude<ExtArgs> | null
    /**
     * The filter to search for the CartelaConcluida to update in case it exists.
     */
    where: CartelaConcluidaWhereUniqueInput
    /**
     * In case the CartelaConcluida found by the `where` argument doesn't exist, create a new CartelaConcluida with this data.
     */
    create: XOR<CartelaConcluidaCreateInput, CartelaConcluidaUncheckedCreateInput>
    /**
     * In case the CartelaConcluida was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CartelaConcluidaUpdateInput, CartelaConcluidaUncheckedUpdateInput>
  }

  /**
   * CartelaConcluida delete
   */
  export type CartelaConcluidaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CartelaConcluida
     */
    select?: CartelaConcluidaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CartelaConcluida
     */
    omit?: CartelaConcluidaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CartelaConcluidaInclude<ExtArgs> | null
    /**
     * Filter which CartelaConcluida to delete.
     */
    where: CartelaConcluidaWhereUniqueInput
  }

  /**
   * CartelaConcluida deleteMany
   */
  export type CartelaConcluidaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CartelaConcluidas to delete
     */
    where?: CartelaConcluidaWhereInput
    /**
     * Limit how many CartelaConcluidas to delete.
     */
    limit?: number
  }

  /**
   * CartelaConcluida without action
   */
  export type CartelaConcluidaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CartelaConcluida
     */
    select?: CartelaConcluidaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CartelaConcluida
     */
    omit?: CartelaConcluidaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CartelaConcluidaInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const OpticaScalarFieldEnum: {
    id: 'id',
    cnpj: 'cnpj',
    nome: 'nome',
    endereco: 'endereco',
    cidade: 'cidade',
    estado: 'estado',
    telefone: 'telefone',
    email: 'email',
    ativa: 'ativa',
    ehMatriz: 'ehMatriz',
    matrizId: 'matrizId',
    criadoEm: 'criadoEm',
    atualizadoEm: 'atualizadoEm'
  };

  export type OpticaScalarFieldEnum = (typeof OpticaScalarFieldEnum)[keyof typeof OpticaScalarFieldEnum]


  export const UsuarioScalarFieldEnum: {
    id: 'id',
    email: 'email',
    cpf: 'cpf',
    nome: 'nome',
    whatsapp: 'whatsapp',
    senhaHash: 'senhaHash',
    avatarUrl: 'avatarUrl',
    papel: 'papel',
    status: 'status',
    saldoMoedinhas: 'saldoMoedinhas',
    rankingMoedinhas: 'rankingMoedinhas',
    nivel: 'nivel',
    tokenResetarSenha: 'tokenResetarSenha',
    tokenResetarSenhaExpira: 'tokenResetarSenhaExpira',
    mapeamentoPlanilhaSalvo: 'mapeamentoPlanilhaSalvo',
    opticaId: 'opticaId',
    gerenteId: 'gerenteId',
    criadoEm: 'criadoEm',
    atualizadoEm: 'atualizadoEm'
  };

  export type UsuarioScalarFieldEnum = (typeof UsuarioScalarFieldEnum)[keyof typeof UsuarioScalarFieldEnum]


  export const CampanhaScalarFieldEnum: {
    id: 'id',
    titulo: 'titulo',
    descricao: 'descricao',
    dataInicio: 'dataInicio',
    dataFim: 'dataFim',
    moedinhasPorCartela: 'moedinhasPorCartela',
    pontosReaisPorCartela: 'pontosReaisPorCartela',
    status: 'status',
    percentualGerente: 'percentualGerente',
    paraTodasOticas: 'paraTodasOticas',
    criadoEm: 'criadoEm',
    atualizadoEm: 'atualizadoEm'
  };

  export type CampanhaScalarFieldEnum = (typeof CampanhaScalarFieldEnum)[keyof typeof CampanhaScalarFieldEnum]


  export const RegraCartelaScalarFieldEnum: {
    id: 'id',
    numeroCartela: 'numeroCartela',
    descricao: 'descricao',
    campanhaId: 'campanhaId',
    criadoEm: 'criadoEm',
    atualizadoEm: 'atualizadoEm'
  };

  export type RegraCartelaScalarFieldEnum = (typeof RegraCartelaScalarFieldEnum)[keyof typeof RegraCartelaScalarFieldEnum]


  export const RequisitoCartelaScalarFieldEnum: {
    id: 'id',
    descricao: 'descricao',
    quantidade: 'quantidade',
    tipoUnidade: 'tipoUnidade',
    ordem: 'ordem',
    regraCartelaId: 'regraCartelaId',
    criadoEm: 'criadoEm',
    atualizadoEm: 'atualizadoEm'
  };

  export type RequisitoCartelaScalarFieldEnum = (typeof RequisitoCartelaScalarFieldEnum)[keyof typeof RequisitoCartelaScalarFieldEnum]


  export const CondicaoRequisitoScalarFieldEnum: {
    id: 'id',
    campo: 'campo',
    operador: 'operador',
    valor: 'valor',
    requisitoId: 'requisitoId',
    criadoEm: 'criadoEm',
    atualizadoEm: 'atualizadoEm'
  };

  export type CondicaoRequisitoScalarFieldEnum = (typeof CondicaoRequisitoScalarFieldEnum)[keyof typeof CondicaoRequisitoScalarFieldEnum]


  export const EnvioVendaScalarFieldEnum: {
    id: 'id',
    numeroPedido: 'numeroPedido',
    status: 'status',
    dataEnvio: 'dataEnvio',
    motivoRejeicao: 'motivoRejeicao',
    infoConflito: 'infoConflito',
    numeroCartelaAtendida: 'numeroCartelaAtendida',
    dataValidacao: 'dataValidacao',
    vendedorId: 'vendedorId',
    campanhaId: 'campanhaId',
    requisitoId: 'requisitoId',
    criadoEm: 'criadoEm',
    atualizadoEm: 'atualizadoEm'
  };

  export type EnvioVendaScalarFieldEnum = (typeof EnvioVendaScalarFieldEnum)[keyof typeof EnvioVendaScalarFieldEnum]


  export const PremioScalarFieldEnum: {
    id: 'id',
    nome: 'nome',
    descricao: 'descricao',
    imageUrl: 'imageUrl',
    custoMoedinhas: 'custoMoedinhas',
    estoque: 'estoque',
    ativo: 'ativo',
    criadoEm: 'criadoEm',
    atualizadoEm: 'atualizadoEm'
  };

  export type PremioScalarFieldEnum = (typeof PremioScalarFieldEnum)[keyof typeof PremioScalarFieldEnum]


  export const ResgatePremioScalarFieldEnum: {
    id: 'id',
    dataSolicitacao: 'dataSolicitacao',
    status: 'status',
    dataAtualizacao: 'dataAtualizacao',
    motivoCancelamento: 'motivoCancelamento',
    vendedorId: 'vendedorId',
    premioId: 'premioId',
    criadoEm: 'criadoEm',
    atualizadoEm: 'atualizadoEm'
  };

  export type ResgatePremioScalarFieldEnum = (typeof ResgatePremioScalarFieldEnum)[keyof typeof ResgatePremioScalarFieldEnum]


  export const RelatorioFinanceiroScalarFieldEnum: {
    id: 'id',
    valor: 'valor',
    status: 'status',
    tipo: 'tipo',
    dataGerado: 'dataGerado',
    dataPagamento: 'dataPagamento',
    observacoes: 'observacoes',
    usuarioId: 'usuarioId',
    campanhaId: 'campanhaId',
    criadoEm: 'criadoEm',
    atualizadoEm: 'atualizadoEm'
  };

  export type RelatorioFinanceiroScalarFieldEnum = (typeof RelatorioFinanceiroScalarFieldEnum)[keyof typeof RelatorioFinanceiroScalarFieldEnum]


  export const NotificacaoScalarFieldEnum: {
    id: 'id',
    mensagem: 'mensagem',
    lida: 'lida',
    linkUrl: 'linkUrl',
    dataCriacao: 'dataCriacao',
    usuarioId: 'usuarioId',
    criadoEm: 'criadoEm',
    atualizadoEm: 'atualizadoEm'
  };

  export type NotificacaoScalarFieldEnum = (typeof NotificacaoScalarFieldEnum)[keyof typeof NotificacaoScalarFieldEnum]


  export const ConfiguracaoGlobalScalarFieldEnum: {
    id: 'id',
    chave: 'chave',
    valor: 'valor',
    descricao: 'descricao',
    criadoEm: 'criadoEm',
    atualizadoEm: 'atualizadoEm'
  };

  export type ConfiguracaoGlobalScalarFieldEnum = (typeof ConfiguracaoGlobalScalarFieldEnum)[keyof typeof ConfiguracaoGlobalScalarFieldEnum]


  export const CartelaConcluidaScalarFieldEnum: {
    id: 'id',
    dataConclusao: 'dataConclusao',
    numeroCartela: 'numeroCartela',
    vendedorId: 'vendedorId',
    campanhaId: 'campanhaId'
  };

  export type CartelaConcluidaScalarFieldEnum = (typeof CartelaConcluidaScalarFieldEnum)[keyof typeof CartelaConcluidaScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullableJsonNullValueInput: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull
  };

  export type NullableJsonNullValueInput = (typeof NullableJsonNullValueInput)[keyof typeof NullableJsonNullValueInput]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  export const JsonNullValueFilter: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull,
    AnyNull: typeof AnyNull
  };

  export type JsonNullValueFilter = (typeof JsonNullValueFilter)[keyof typeof JsonNullValueFilter]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'PapelUsuario'
   */
  export type EnumPapelUsuarioFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'PapelUsuario'>
    


  /**
   * Reference to a field of type 'PapelUsuario[]'
   */
  export type ListEnumPapelUsuarioFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'PapelUsuario[]'>
    


  /**
   * Reference to a field of type 'StatusUsuario'
   */
  export type EnumStatusUsuarioFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'StatusUsuario'>
    


  /**
   * Reference to a field of type 'StatusUsuario[]'
   */
  export type ListEnumStatusUsuarioFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'StatusUsuario[]'>
    


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'NivelVendedor'
   */
  export type EnumNivelVendedorFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'NivelVendedor'>
    


  /**
   * Reference to a field of type 'NivelVendedor[]'
   */
  export type ListEnumNivelVendedorFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'NivelVendedor[]'>
    


  /**
   * Reference to a field of type 'Json'
   */
  export type JsonFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Json'>
    


  /**
   * Reference to a field of type 'QueryMode'
   */
  export type EnumQueryModeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'QueryMode'>
    


  /**
   * Reference to a field of type 'Decimal'
   */
  export type DecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal'>
    


  /**
   * Reference to a field of type 'Decimal[]'
   */
  export type ListDecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal[]'>
    


  /**
   * Reference to a field of type 'TipoUnidade'
   */
  export type EnumTipoUnidadeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TipoUnidade'>
    


  /**
   * Reference to a field of type 'TipoUnidade[]'
   */
  export type ListEnumTipoUnidadeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TipoUnidade[]'>
    


  /**
   * Reference to a field of type 'CampoVerificacao'
   */
  export type EnumCampoVerificacaoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'CampoVerificacao'>
    


  /**
   * Reference to a field of type 'CampoVerificacao[]'
   */
  export type ListEnumCampoVerificacaoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'CampoVerificacao[]'>
    


  /**
   * Reference to a field of type 'OperadorCondicao'
   */
  export type EnumOperadorCondicaoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'OperadorCondicao'>
    


  /**
   * Reference to a field of type 'OperadorCondicao[]'
   */
  export type ListEnumOperadorCondicaoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'OperadorCondicao[]'>
    


  /**
   * Reference to a field of type 'StatusEnvioVenda'
   */
  export type EnumStatusEnvioVendaFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'StatusEnvioVenda'>
    


  /**
   * Reference to a field of type 'StatusEnvioVenda[]'
   */
  export type ListEnumStatusEnvioVendaFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'StatusEnvioVenda[]'>
    


  /**
   * Reference to a field of type 'StatusResgate'
   */
  export type EnumStatusResgateFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'StatusResgate'>
    


  /**
   * Reference to a field of type 'StatusResgate[]'
   */
  export type ListEnumStatusResgateFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'StatusResgate[]'>
    


  /**
   * Reference to a field of type 'StatusPagamento'
   */
  export type EnumStatusPagamentoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'StatusPagamento'>
    


  /**
   * Reference to a field of type 'StatusPagamento[]'
   */
  export type ListEnumStatusPagamentoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'StatusPagamento[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    
  /**
   * Deep Input Types
   */


  export type OpticaWhereInput = {
    AND?: OpticaWhereInput | OpticaWhereInput[]
    OR?: OpticaWhereInput[]
    NOT?: OpticaWhereInput | OpticaWhereInput[]
    id?: StringFilter<"Optica"> | string
    cnpj?: StringFilter<"Optica"> | string
    nome?: StringFilter<"Optica"> | string
    endereco?: StringNullableFilter<"Optica"> | string | null
    cidade?: StringNullableFilter<"Optica"> | string | null
    estado?: StringNullableFilter<"Optica"> | string | null
    telefone?: StringNullableFilter<"Optica"> | string | null
    email?: StringNullableFilter<"Optica"> | string | null
    ativa?: BoolFilter<"Optica"> | boolean
    ehMatriz?: BoolFilter<"Optica"> | boolean
    matrizId?: StringNullableFilter<"Optica"> | string | null
    criadoEm?: DateTimeFilter<"Optica"> | Date | string
    atualizadoEm?: DateTimeFilter<"Optica"> | Date | string
    matriz?: XOR<OpticaNullableScalarRelationFilter, OpticaWhereInput> | null
    filiais?: OpticaListRelationFilter
    usuarios?: UsuarioListRelationFilter
    campanhasAlvo?: CampanhaListRelationFilter
  }

  export type OpticaOrderByWithRelationInput = {
    id?: SortOrder
    cnpj?: SortOrder
    nome?: SortOrder
    endereco?: SortOrderInput | SortOrder
    cidade?: SortOrderInput | SortOrder
    estado?: SortOrderInput | SortOrder
    telefone?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    ativa?: SortOrder
    ehMatriz?: SortOrder
    matrizId?: SortOrderInput | SortOrder
    criadoEm?: SortOrder
    atualizadoEm?: SortOrder
    matriz?: OpticaOrderByWithRelationInput
    filiais?: OpticaOrderByRelationAggregateInput
    usuarios?: UsuarioOrderByRelationAggregateInput
    campanhasAlvo?: CampanhaOrderByRelationAggregateInput
  }

  export type OpticaWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    cnpj?: string
    AND?: OpticaWhereInput | OpticaWhereInput[]
    OR?: OpticaWhereInput[]
    NOT?: OpticaWhereInput | OpticaWhereInput[]
    nome?: StringFilter<"Optica"> | string
    endereco?: StringNullableFilter<"Optica"> | string | null
    cidade?: StringNullableFilter<"Optica"> | string | null
    estado?: StringNullableFilter<"Optica"> | string | null
    telefone?: StringNullableFilter<"Optica"> | string | null
    email?: StringNullableFilter<"Optica"> | string | null
    ativa?: BoolFilter<"Optica"> | boolean
    ehMatriz?: BoolFilter<"Optica"> | boolean
    matrizId?: StringNullableFilter<"Optica"> | string | null
    criadoEm?: DateTimeFilter<"Optica"> | Date | string
    atualizadoEm?: DateTimeFilter<"Optica"> | Date | string
    matriz?: XOR<OpticaNullableScalarRelationFilter, OpticaWhereInput> | null
    filiais?: OpticaListRelationFilter
    usuarios?: UsuarioListRelationFilter
    campanhasAlvo?: CampanhaListRelationFilter
  }, "id" | "cnpj">

  export type OpticaOrderByWithAggregationInput = {
    id?: SortOrder
    cnpj?: SortOrder
    nome?: SortOrder
    endereco?: SortOrderInput | SortOrder
    cidade?: SortOrderInput | SortOrder
    estado?: SortOrderInput | SortOrder
    telefone?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    ativa?: SortOrder
    ehMatriz?: SortOrder
    matrizId?: SortOrderInput | SortOrder
    criadoEm?: SortOrder
    atualizadoEm?: SortOrder
    _count?: OpticaCountOrderByAggregateInput
    _max?: OpticaMaxOrderByAggregateInput
    _min?: OpticaMinOrderByAggregateInput
  }

  export type OpticaScalarWhereWithAggregatesInput = {
    AND?: OpticaScalarWhereWithAggregatesInput | OpticaScalarWhereWithAggregatesInput[]
    OR?: OpticaScalarWhereWithAggregatesInput[]
    NOT?: OpticaScalarWhereWithAggregatesInput | OpticaScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Optica"> | string
    cnpj?: StringWithAggregatesFilter<"Optica"> | string
    nome?: StringWithAggregatesFilter<"Optica"> | string
    endereco?: StringNullableWithAggregatesFilter<"Optica"> | string | null
    cidade?: StringNullableWithAggregatesFilter<"Optica"> | string | null
    estado?: StringNullableWithAggregatesFilter<"Optica"> | string | null
    telefone?: StringNullableWithAggregatesFilter<"Optica"> | string | null
    email?: StringNullableWithAggregatesFilter<"Optica"> | string | null
    ativa?: BoolWithAggregatesFilter<"Optica"> | boolean
    ehMatriz?: BoolWithAggregatesFilter<"Optica"> | boolean
    matrizId?: StringNullableWithAggregatesFilter<"Optica"> | string | null
    criadoEm?: DateTimeWithAggregatesFilter<"Optica"> | Date | string
    atualizadoEm?: DateTimeWithAggregatesFilter<"Optica"> | Date | string
  }

  export type UsuarioWhereInput = {
    AND?: UsuarioWhereInput | UsuarioWhereInput[]
    OR?: UsuarioWhereInput[]
    NOT?: UsuarioWhereInput | UsuarioWhereInput[]
    id?: StringFilter<"Usuario"> | string
    email?: StringFilter<"Usuario"> | string
    cpf?: StringNullableFilter<"Usuario"> | string | null
    nome?: StringFilter<"Usuario"> | string
    whatsapp?: StringNullableFilter<"Usuario"> | string | null
    senhaHash?: StringFilter<"Usuario"> | string
    avatarUrl?: StringNullableFilter<"Usuario"> | string | null
    papel?: EnumPapelUsuarioFilter<"Usuario"> | $Enums.PapelUsuario
    status?: EnumStatusUsuarioFilter<"Usuario"> | $Enums.StatusUsuario
    saldoMoedinhas?: IntFilter<"Usuario"> | number
    rankingMoedinhas?: IntFilter<"Usuario"> | number
    nivel?: EnumNivelVendedorFilter<"Usuario"> | $Enums.NivelVendedor
    tokenResetarSenha?: StringNullableFilter<"Usuario"> | string | null
    tokenResetarSenhaExpira?: DateTimeNullableFilter<"Usuario"> | Date | string | null
    mapeamentoPlanilhaSalvo?: JsonNullableFilter<"Usuario">
    opticaId?: StringNullableFilter<"Usuario"> | string | null
    gerenteId?: StringNullableFilter<"Usuario"> | string | null
    criadoEm?: DateTimeFilter<"Usuario"> | Date | string
    atualizadoEm?: DateTimeFilter<"Usuario"> | Date | string
    optica?: XOR<OpticaNullableScalarRelationFilter, OpticaWhereInput> | null
    gerente?: XOR<UsuarioNullableScalarRelationFilter, UsuarioWhereInput> | null
    vendedores?: UsuarioListRelationFilter
    enviosVenda?: EnvioVendaListRelationFilter
    resgatesPremios?: ResgatePremioListRelationFilter
    relatoriosFinanceiros?: RelatorioFinanceiroListRelationFilter
    notificacoes?: NotificacaoListRelationFilter
    cartelasConcluidas?: CartelaConcluidaListRelationFilter
  }

  export type UsuarioOrderByWithRelationInput = {
    id?: SortOrder
    email?: SortOrder
    cpf?: SortOrderInput | SortOrder
    nome?: SortOrder
    whatsapp?: SortOrderInput | SortOrder
    senhaHash?: SortOrder
    avatarUrl?: SortOrderInput | SortOrder
    papel?: SortOrder
    status?: SortOrder
    saldoMoedinhas?: SortOrder
    rankingMoedinhas?: SortOrder
    nivel?: SortOrder
    tokenResetarSenha?: SortOrderInput | SortOrder
    tokenResetarSenhaExpira?: SortOrderInput | SortOrder
    mapeamentoPlanilhaSalvo?: SortOrderInput | SortOrder
    opticaId?: SortOrderInput | SortOrder
    gerenteId?: SortOrderInput | SortOrder
    criadoEm?: SortOrder
    atualizadoEm?: SortOrder
    optica?: OpticaOrderByWithRelationInput
    gerente?: UsuarioOrderByWithRelationInput
    vendedores?: UsuarioOrderByRelationAggregateInput
    enviosVenda?: EnvioVendaOrderByRelationAggregateInput
    resgatesPremios?: ResgatePremioOrderByRelationAggregateInput
    relatoriosFinanceiros?: RelatorioFinanceiroOrderByRelationAggregateInput
    notificacoes?: NotificacaoOrderByRelationAggregateInput
    cartelasConcluidas?: CartelaConcluidaOrderByRelationAggregateInput
  }

  export type UsuarioWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    email?: string
    cpf?: string
    tokenResetarSenha?: string
    AND?: UsuarioWhereInput | UsuarioWhereInput[]
    OR?: UsuarioWhereInput[]
    NOT?: UsuarioWhereInput | UsuarioWhereInput[]
    nome?: StringFilter<"Usuario"> | string
    whatsapp?: StringNullableFilter<"Usuario"> | string | null
    senhaHash?: StringFilter<"Usuario"> | string
    avatarUrl?: StringNullableFilter<"Usuario"> | string | null
    papel?: EnumPapelUsuarioFilter<"Usuario"> | $Enums.PapelUsuario
    status?: EnumStatusUsuarioFilter<"Usuario"> | $Enums.StatusUsuario
    saldoMoedinhas?: IntFilter<"Usuario"> | number
    rankingMoedinhas?: IntFilter<"Usuario"> | number
    nivel?: EnumNivelVendedorFilter<"Usuario"> | $Enums.NivelVendedor
    tokenResetarSenhaExpira?: DateTimeNullableFilter<"Usuario"> | Date | string | null
    mapeamentoPlanilhaSalvo?: JsonNullableFilter<"Usuario">
    opticaId?: StringNullableFilter<"Usuario"> | string | null
    gerenteId?: StringNullableFilter<"Usuario"> | string | null
    criadoEm?: DateTimeFilter<"Usuario"> | Date | string
    atualizadoEm?: DateTimeFilter<"Usuario"> | Date | string
    optica?: XOR<OpticaNullableScalarRelationFilter, OpticaWhereInput> | null
    gerente?: XOR<UsuarioNullableScalarRelationFilter, UsuarioWhereInput> | null
    vendedores?: UsuarioListRelationFilter
    enviosVenda?: EnvioVendaListRelationFilter
    resgatesPremios?: ResgatePremioListRelationFilter
    relatoriosFinanceiros?: RelatorioFinanceiroListRelationFilter
    notificacoes?: NotificacaoListRelationFilter
    cartelasConcluidas?: CartelaConcluidaListRelationFilter
  }, "id" | "email" | "cpf" | "tokenResetarSenha">

  export type UsuarioOrderByWithAggregationInput = {
    id?: SortOrder
    email?: SortOrder
    cpf?: SortOrderInput | SortOrder
    nome?: SortOrder
    whatsapp?: SortOrderInput | SortOrder
    senhaHash?: SortOrder
    avatarUrl?: SortOrderInput | SortOrder
    papel?: SortOrder
    status?: SortOrder
    saldoMoedinhas?: SortOrder
    rankingMoedinhas?: SortOrder
    nivel?: SortOrder
    tokenResetarSenha?: SortOrderInput | SortOrder
    tokenResetarSenhaExpira?: SortOrderInput | SortOrder
    mapeamentoPlanilhaSalvo?: SortOrderInput | SortOrder
    opticaId?: SortOrderInput | SortOrder
    gerenteId?: SortOrderInput | SortOrder
    criadoEm?: SortOrder
    atualizadoEm?: SortOrder
    _count?: UsuarioCountOrderByAggregateInput
    _avg?: UsuarioAvgOrderByAggregateInput
    _max?: UsuarioMaxOrderByAggregateInput
    _min?: UsuarioMinOrderByAggregateInput
    _sum?: UsuarioSumOrderByAggregateInput
  }

  export type UsuarioScalarWhereWithAggregatesInput = {
    AND?: UsuarioScalarWhereWithAggregatesInput | UsuarioScalarWhereWithAggregatesInput[]
    OR?: UsuarioScalarWhereWithAggregatesInput[]
    NOT?: UsuarioScalarWhereWithAggregatesInput | UsuarioScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Usuario"> | string
    email?: StringWithAggregatesFilter<"Usuario"> | string
    cpf?: StringNullableWithAggregatesFilter<"Usuario"> | string | null
    nome?: StringWithAggregatesFilter<"Usuario"> | string
    whatsapp?: StringNullableWithAggregatesFilter<"Usuario"> | string | null
    senhaHash?: StringWithAggregatesFilter<"Usuario"> | string
    avatarUrl?: StringNullableWithAggregatesFilter<"Usuario"> | string | null
    papel?: EnumPapelUsuarioWithAggregatesFilter<"Usuario"> | $Enums.PapelUsuario
    status?: EnumStatusUsuarioWithAggregatesFilter<"Usuario"> | $Enums.StatusUsuario
    saldoMoedinhas?: IntWithAggregatesFilter<"Usuario"> | number
    rankingMoedinhas?: IntWithAggregatesFilter<"Usuario"> | number
    nivel?: EnumNivelVendedorWithAggregatesFilter<"Usuario"> | $Enums.NivelVendedor
    tokenResetarSenha?: StringNullableWithAggregatesFilter<"Usuario"> | string | null
    tokenResetarSenhaExpira?: DateTimeNullableWithAggregatesFilter<"Usuario"> | Date | string | null
    mapeamentoPlanilhaSalvo?: JsonNullableWithAggregatesFilter<"Usuario">
    opticaId?: StringNullableWithAggregatesFilter<"Usuario"> | string | null
    gerenteId?: StringNullableWithAggregatesFilter<"Usuario"> | string | null
    criadoEm?: DateTimeWithAggregatesFilter<"Usuario"> | Date | string
    atualizadoEm?: DateTimeWithAggregatesFilter<"Usuario"> | Date | string
  }

  export type CampanhaWhereInput = {
    AND?: CampanhaWhereInput | CampanhaWhereInput[]
    OR?: CampanhaWhereInput[]
    NOT?: CampanhaWhereInput | CampanhaWhereInput[]
    id?: StringFilter<"Campanha"> | string
    titulo?: StringFilter<"Campanha"> | string
    descricao?: StringFilter<"Campanha"> | string
    dataInicio?: DateTimeFilter<"Campanha"> | Date | string
    dataFim?: DateTimeFilter<"Campanha"> | Date | string
    moedinhasPorCartela?: IntFilter<"Campanha"> | number
    pontosReaisPorCartela?: DecimalFilter<"Campanha"> | Decimal | DecimalJsLike | number | string
    status?: StringFilter<"Campanha"> | string
    percentualGerente?: DecimalFilter<"Campanha"> | Decimal | DecimalJsLike | number | string
    paraTodasOticas?: BoolFilter<"Campanha"> | boolean
    criadoEm?: DateTimeFilter<"Campanha"> | Date | string
    atualizadoEm?: DateTimeFilter<"Campanha"> | Date | string
    oticasAlvo?: OpticaListRelationFilter
    cartelas?: RegraCartelaListRelationFilter
    enviosVenda?: EnvioVendaListRelationFilter
    relatoriosFinanceiros?: RelatorioFinanceiroListRelationFilter
    cartelasConcluidas?: CartelaConcluidaListRelationFilter
  }

  export type CampanhaOrderByWithRelationInput = {
    id?: SortOrder
    titulo?: SortOrder
    descricao?: SortOrder
    dataInicio?: SortOrder
    dataFim?: SortOrder
    moedinhasPorCartela?: SortOrder
    pontosReaisPorCartela?: SortOrder
    status?: SortOrder
    percentualGerente?: SortOrder
    paraTodasOticas?: SortOrder
    criadoEm?: SortOrder
    atualizadoEm?: SortOrder
    oticasAlvo?: OpticaOrderByRelationAggregateInput
    cartelas?: RegraCartelaOrderByRelationAggregateInput
    enviosVenda?: EnvioVendaOrderByRelationAggregateInput
    relatoriosFinanceiros?: RelatorioFinanceiroOrderByRelationAggregateInput
    cartelasConcluidas?: CartelaConcluidaOrderByRelationAggregateInput
  }

  export type CampanhaWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: CampanhaWhereInput | CampanhaWhereInput[]
    OR?: CampanhaWhereInput[]
    NOT?: CampanhaWhereInput | CampanhaWhereInput[]
    titulo?: StringFilter<"Campanha"> | string
    descricao?: StringFilter<"Campanha"> | string
    dataInicio?: DateTimeFilter<"Campanha"> | Date | string
    dataFim?: DateTimeFilter<"Campanha"> | Date | string
    moedinhasPorCartela?: IntFilter<"Campanha"> | number
    pontosReaisPorCartela?: DecimalFilter<"Campanha"> | Decimal | DecimalJsLike | number | string
    status?: StringFilter<"Campanha"> | string
    percentualGerente?: DecimalFilter<"Campanha"> | Decimal | DecimalJsLike | number | string
    paraTodasOticas?: BoolFilter<"Campanha"> | boolean
    criadoEm?: DateTimeFilter<"Campanha"> | Date | string
    atualizadoEm?: DateTimeFilter<"Campanha"> | Date | string
    oticasAlvo?: OpticaListRelationFilter
    cartelas?: RegraCartelaListRelationFilter
    enviosVenda?: EnvioVendaListRelationFilter
    relatoriosFinanceiros?: RelatorioFinanceiroListRelationFilter
    cartelasConcluidas?: CartelaConcluidaListRelationFilter
  }, "id">

  export type CampanhaOrderByWithAggregationInput = {
    id?: SortOrder
    titulo?: SortOrder
    descricao?: SortOrder
    dataInicio?: SortOrder
    dataFim?: SortOrder
    moedinhasPorCartela?: SortOrder
    pontosReaisPorCartela?: SortOrder
    status?: SortOrder
    percentualGerente?: SortOrder
    paraTodasOticas?: SortOrder
    criadoEm?: SortOrder
    atualizadoEm?: SortOrder
    _count?: CampanhaCountOrderByAggregateInput
    _avg?: CampanhaAvgOrderByAggregateInput
    _max?: CampanhaMaxOrderByAggregateInput
    _min?: CampanhaMinOrderByAggregateInput
    _sum?: CampanhaSumOrderByAggregateInput
  }

  export type CampanhaScalarWhereWithAggregatesInput = {
    AND?: CampanhaScalarWhereWithAggregatesInput | CampanhaScalarWhereWithAggregatesInput[]
    OR?: CampanhaScalarWhereWithAggregatesInput[]
    NOT?: CampanhaScalarWhereWithAggregatesInput | CampanhaScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Campanha"> | string
    titulo?: StringWithAggregatesFilter<"Campanha"> | string
    descricao?: StringWithAggregatesFilter<"Campanha"> | string
    dataInicio?: DateTimeWithAggregatesFilter<"Campanha"> | Date | string
    dataFim?: DateTimeWithAggregatesFilter<"Campanha"> | Date | string
    moedinhasPorCartela?: IntWithAggregatesFilter<"Campanha"> | number
    pontosReaisPorCartela?: DecimalWithAggregatesFilter<"Campanha"> | Decimal | DecimalJsLike | number | string
    status?: StringWithAggregatesFilter<"Campanha"> | string
    percentualGerente?: DecimalWithAggregatesFilter<"Campanha"> | Decimal | DecimalJsLike | number | string
    paraTodasOticas?: BoolWithAggregatesFilter<"Campanha"> | boolean
    criadoEm?: DateTimeWithAggregatesFilter<"Campanha"> | Date | string
    atualizadoEm?: DateTimeWithAggregatesFilter<"Campanha"> | Date | string
  }

  export type RegraCartelaWhereInput = {
    AND?: RegraCartelaWhereInput | RegraCartelaWhereInput[]
    OR?: RegraCartelaWhereInput[]
    NOT?: RegraCartelaWhereInput | RegraCartelaWhereInput[]
    id?: StringFilter<"RegraCartela"> | string
    numeroCartela?: IntFilter<"RegraCartela"> | number
    descricao?: StringNullableFilter<"RegraCartela"> | string | null
    campanhaId?: StringFilter<"RegraCartela"> | string
    criadoEm?: DateTimeFilter<"RegraCartela"> | Date | string
    atualizadoEm?: DateTimeFilter<"RegraCartela"> | Date | string
    campanha?: XOR<CampanhaScalarRelationFilter, CampanhaWhereInput>
    requisitos?: RequisitoCartelaListRelationFilter
  }

  export type RegraCartelaOrderByWithRelationInput = {
    id?: SortOrder
    numeroCartela?: SortOrder
    descricao?: SortOrderInput | SortOrder
    campanhaId?: SortOrder
    criadoEm?: SortOrder
    atualizadoEm?: SortOrder
    campanha?: CampanhaOrderByWithRelationInput
    requisitos?: RequisitoCartelaOrderByRelationAggregateInput
  }

  export type RegraCartelaWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    campanhaId_numeroCartela?: RegraCartelaCampanhaIdNumeroCartelaCompoundUniqueInput
    AND?: RegraCartelaWhereInput | RegraCartelaWhereInput[]
    OR?: RegraCartelaWhereInput[]
    NOT?: RegraCartelaWhereInput | RegraCartelaWhereInput[]
    numeroCartela?: IntFilter<"RegraCartela"> | number
    descricao?: StringNullableFilter<"RegraCartela"> | string | null
    campanhaId?: StringFilter<"RegraCartela"> | string
    criadoEm?: DateTimeFilter<"RegraCartela"> | Date | string
    atualizadoEm?: DateTimeFilter<"RegraCartela"> | Date | string
    campanha?: XOR<CampanhaScalarRelationFilter, CampanhaWhereInput>
    requisitos?: RequisitoCartelaListRelationFilter
  }, "id" | "campanhaId_numeroCartela">

  export type RegraCartelaOrderByWithAggregationInput = {
    id?: SortOrder
    numeroCartela?: SortOrder
    descricao?: SortOrderInput | SortOrder
    campanhaId?: SortOrder
    criadoEm?: SortOrder
    atualizadoEm?: SortOrder
    _count?: RegraCartelaCountOrderByAggregateInput
    _avg?: RegraCartelaAvgOrderByAggregateInput
    _max?: RegraCartelaMaxOrderByAggregateInput
    _min?: RegraCartelaMinOrderByAggregateInput
    _sum?: RegraCartelaSumOrderByAggregateInput
  }

  export type RegraCartelaScalarWhereWithAggregatesInput = {
    AND?: RegraCartelaScalarWhereWithAggregatesInput | RegraCartelaScalarWhereWithAggregatesInput[]
    OR?: RegraCartelaScalarWhereWithAggregatesInput[]
    NOT?: RegraCartelaScalarWhereWithAggregatesInput | RegraCartelaScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"RegraCartela"> | string
    numeroCartela?: IntWithAggregatesFilter<"RegraCartela"> | number
    descricao?: StringNullableWithAggregatesFilter<"RegraCartela"> | string | null
    campanhaId?: StringWithAggregatesFilter<"RegraCartela"> | string
    criadoEm?: DateTimeWithAggregatesFilter<"RegraCartela"> | Date | string
    atualizadoEm?: DateTimeWithAggregatesFilter<"RegraCartela"> | Date | string
  }

  export type RequisitoCartelaWhereInput = {
    AND?: RequisitoCartelaWhereInput | RequisitoCartelaWhereInput[]
    OR?: RequisitoCartelaWhereInput[]
    NOT?: RequisitoCartelaWhereInput | RequisitoCartelaWhereInput[]
    id?: StringFilter<"RequisitoCartela"> | string
    descricao?: StringFilter<"RequisitoCartela"> | string
    quantidade?: IntFilter<"RequisitoCartela"> | number
    tipoUnidade?: EnumTipoUnidadeFilter<"RequisitoCartela"> | $Enums.TipoUnidade
    ordem?: IntFilter<"RequisitoCartela"> | number
    regraCartelaId?: StringFilter<"RequisitoCartela"> | string
    criadoEm?: DateTimeFilter<"RequisitoCartela"> | Date | string
    atualizadoEm?: DateTimeFilter<"RequisitoCartela"> | Date | string
    regraCartela?: XOR<RegraCartelaScalarRelationFilter, RegraCartelaWhereInput>
    condicoes?: CondicaoRequisitoListRelationFilter
    enviosVenda?: EnvioVendaListRelationFilter
  }

  export type RequisitoCartelaOrderByWithRelationInput = {
    id?: SortOrder
    descricao?: SortOrder
    quantidade?: SortOrder
    tipoUnidade?: SortOrder
    ordem?: SortOrder
    regraCartelaId?: SortOrder
    criadoEm?: SortOrder
    atualizadoEm?: SortOrder
    regraCartela?: RegraCartelaOrderByWithRelationInput
    condicoes?: CondicaoRequisitoOrderByRelationAggregateInput
    enviosVenda?: EnvioVendaOrderByRelationAggregateInput
  }

  export type RequisitoCartelaWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: RequisitoCartelaWhereInput | RequisitoCartelaWhereInput[]
    OR?: RequisitoCartelaWhereInput[]
    NOT?: RequisitoCartelaWhereInput | RequisitoCartelaWhereInput[]
    descricao?: StringFilter<"RequisitoCartela"> | string
    quantidade?: IntFilter<"RequisitoCartela"> | number
    tipoUnidade?: EnumTipoUnidadeFilter<"RequisitoCartela"> | $Enums.TipoUnidade
    ordem?: IntFilter<"RequisitoCartela"> | number
    regraCartelaId?: StringFilter<"RequisitoCartela"> | string
    criadoEm?: DateTimeFilter<"RequisitoCartela"> | Date | string
    atualizadoEm?: DateTimeFilter<"RequisitoCartela"> | Date | string
    regraCartela?: XOR<RegraCartelaScalarRelationFilter, RegraCartelaWhereInput>
    condicoes?: CondicaoRequisitoListRelationFilter
    enviosVenda?: EnvioVendaListRelationFilter
  }, "id">

  export type RequisitoCartelaOrderByWithAggregationInput = {
    id?: SortOrder
    descricao?: SortOrder
    quantidade?: SortOrder
    tipoUnidade?: SortOrder
    ordem?: SortOrder
    regraCartelaId?: SortOrder
    criadoEm?: SortOrder
    atualizadoEm?: SortOrder
    _count?: RequisitoCartelaCountOrderByAggregateInput
    _avg?: RequisitoCartelaAvgOrderByAggregateInput
    _max?: RequisitoCartelaMaxOrderByAggregateInput
    _min?: RequisitoCartelaMinOrderByAggregateInput
    _sum?: RequisitoCartelaSumOrderByAggregateInput
  }

  export type RequisitoCartelaScalarWhereWithAggregatesInput = {
    AND?: RequisitoCartelaScalarWhereWithAggregatesInput | RequisitoCartelaScalarWhereWithAggregatesInput[]
    OR?: RequisitoCartelaScalarWhereWithAggregatesInput[]
    NOT?: RequisitoCartelaScalarWhereWithAggregatesInput | RequisitoCartelaScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"RequisitoCartela"> | string
    descricao?: StringWithAggregatesFilter<"RequisitoCartela"> | string
    quantidade?: IntWithAggregatesFilter<"RequisitoCartela"> | number
    tipoUnidade?: EnumTipoUnidadeWithAggregatesFilter<"RequisitoCartela"> | $Enums.TipoUnidade
    ordem?: IntWithAggregatesFilter<"RequisitoCartela"> | number
    regraCartelaId?: StringWithAggregatesFilter<"RequisitoCartela"> | string
    criadoEm?: DateTimeWithAggregatesFilter<"RequisitoCartela"> | Date | string
    atualizadoEm?: DateTimeWithAggregatesFilter<"RequisitoCartela"> | Date | string
  }

  export type CondicaoRequisitoWhereInput = {
    AND?: CondicaoRequisitoWhereInput | CondicaoRequisitoWhereInput[]
    OR?: CondicaoRequisitoWhereInput[]
    NOT?: CondicaoRequisitoWhereInput | CondicaoRequisitoWhereInput[]
    id?: StringFilter<"CondicaoRequisito"> | string
    campo?: EnumCampoVerificacaoFilter<"CondicaoRequisito"> | $Enums.CampoVerificacao
    operador?: EnumOperadorCondicaoFilter<"CondicaoRequisito"> | $Enums.OperadorCondicao
    valor?: StringFilter<"CondicaoRequisito"> | string
    requisitoId?: StringFilter<"CondicaoRequisito"> | string
    criadoEm?: DateTimeFilter<"CondicaoRequisito"> | Date | string
    atualizadoEm?: DateTimeFilter<"CondicaoRequisito"> | Date | string
    requisito?: XOR<RequisitoCartelaScalarRelationFilter, RequisitoCartelaWhereInput>
  }

  export type CondicaoRequisitoOrderByWithRelationInput = {
    id?: SortOrder
    campo?: SortOrder
    operador?: SortOrder
    valor?: SortOrder
    requisitoId?: SortOrder
    criadoEm?: SortOrder
    atualizadoEm?: SortOrder
    requisito?: RequisitoCartelaOrderByWithRelationInput
  }

  export type CondicaoRequisitoWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: CondicaoRequisitoWhereInput | CondicaoRequisitoWhereInput[]
    OR?: CondicaoRequisitoWhereInput[]
    NOT?: CondicaoRequisitoWhereInput | CondicaoRequisitoWhereInput[]
    campo?: EnumCampoVerificacaoFilter<"CondicaoRequisito"> | $Enums.CampoVerificacao
    operador?: EnumOperadorCondicaoFilter<"CondicaoRequisito"> | $Enums.OperadorCondicao
    valor?: StringFilter<"CondicaoRequisito"> | string
    requisitoId?: StringFilter<"CondicaoRequisito"> | string
    criadoEm?: DateTimeFilter<"CondicaoRequisito"> | Date | string
    atualizadoEm?: DateTimeFilter<"CondicaoRequisito"> | Date | string
    requisito?: XOR<RequisitoCartelaScalarRelationFilter, RequisitoCartelaWhereInput>
  }, "id">

  export type CondicaoRequisitoOrderByWithAggregationInput = {
    id?: SortOrder
    campo?: SortOrder
    operador?: SortOrder
    valor?: SortOrder
    requisitoId?: SortOrder
    criadoEm?: SortOrder
    atualizadoEm?: SortOrder
    _count?: CondicaoRequisitoCountOrderByAggregateInput
    _max?: CondicaoRequisitoMaxOrderByAggregateInput
    _min?: CondicaoRequisitoMinOrderByAggregateInput
  }

  export type CondicaoRequisitoScalarWhereWithAggregatesInput = {
    AND?: CondicaoRequisitoScalarWhereWithAggregatesInput | CondicaoRequisitoScalarWhereWithAggregatesInput[]
    OR?: CondicaoRequisitoScalarWhereWithAggregatesInput[]
    NOT?: CondicaoRequisitoScalarWhereWithAggregatesInput | CondicaoRequisitoScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"CondicaoRequisito"> | string
    campo?: EnumCampoVerificacaoWithAggregatesFilter<"CondicaoRequisito"> | $Enums.CampoVerificacao
    operador?: EnumOperadorCondicaoWithAggregatesFilter<"CondicaoRequisito"> | $Enums.OperadorCondicao
    valor?: StringWithAggregatesFilter<"CondicaoRequisito"> | string
    requisitoId?: StringWithAggregatesFilter<"CondicaoRequisito"> | string
    criadoEm?: DateTimeWithAggregatesFilter<"CondicaoRequisito"> | Date | string
    atualizadoEm?: DateTimeWithAggregatesFilter<"CondicaoRequisito"> | Date | string
  }

  export type EnvioVendaWhereInput = {
    AND?: EnvioVendaWhereInput | EnvioVendaWhereInput[]
    OR?: EnvioVendaWhereInput[]
    NOT?: EnvioVendaWhereInput | EnvioVendaWhereInput[]
    id?: StringFilter<"EnvioVenda"> | string
    numeroPedido?: StringFilter<"EnvioVenda"> | string
    status?: EnumStatusEnvioVendaFilter<"EnvioVenda"> | $Enums.StatusEnvioVenda
    dataEnvio?: DateTimeFilter<"EnvioVenda"> | Date | string
    motivoRejeicao?: StringNullableFilter<"EnvioVenda"> | string | null
    infoConflito?: StringNullableFilter<"EnvioVenda"> | string | null
    numeroCartelaAtendida?: IntNullableFilter<"EnvioVenda"> | number | null
    dataValidacao?: DateTimeNullableFilter<"EnvioVenda"> | Date | string | null
    vendedorId?: StringFilter<"EnvioVenda"> | string
    campanhaId?: StringFilter<"EnvioVenda"> | string
    requisitoId?: StringFilter<"EnvioVenda"> | string
    criadoEm?: DateTimeFilter<"EnvioVenda"> | Date | string
    atualizadoEm?: DateTimeFilter<"EnvioVenda"> | Date | string
    vendedor?: XOR<UsuarioScalarRelationFilter, UsuarioWhereInput>
    campanha?: XOR<CampanhaScalarRelationFilter, CampanhaWhereInput>
    requisito?: XOR<RequisitoCartelaScalarRelationFilter, RequisitoCartelaWhereInput>
  }

  export type EnvioVendaOrderByWithRelationInput = {
    id?: SortOrder
    numeroPedido?: SortOrder
    status?: SortOrder
    dataEnvio?: SortOrder
    motivoRejeicao?: SortOrderInput | SortOrder
    infoConflito?: SortOrderInput | SortOrder
    numeroCartelaAtendida?: SortOrderInput | SortOrder
    dataValidacao?: SortOrderInput | SortOrder
    vendedorId?: SortOrder
    campanhaId?: SortOrder
    requisitoId?: SortOrder
    criadoEm?: SortOrder
    atualizadoEm?: SortOrder
    vendedor?: UsuarioOrderByWithRelationInput
    campanha?: CampanhaOrderByWithRelationInput
    requisito?: RequisitoCartelaOrderByWithRelationInput
  }

  export type EnvioVendaWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: EnvioVendaWhereInput | EnvioVendaWhereInput[]
    OR?: EnvioVendaWhereInput[]
    NOT?: EnvioVendaWhereInput | EnvioVendaWhereInput[]
    numeroPedido?: StringFilter<"EnvioVenda"> | string
    status?: EnumStatusEnvioVendaFilter<"EnvioVenda"> | $Enums.StatusEnvioVenda
    dataEnvio?: DateTimeFilter<"EnvioVenda"> | Date | string
    motivoRejeicao?: StringNullableFilter<"EnvioVenda"> | string | null
    infoConflito?: StringNullableFilter<"EnvioVenda"> | string | null
    numeroCartelaAtendida?: IntNullableFilter<"EnvioVenda"> | number | null
    dataValidacao?: DateTimeNullableFilter<"EnvioVenda"> | Date | string | null
    vendedorId?: StringFilter<"EnvioVenda"> | string
    campanhaId?: StringFilter<"EnvioVenda"> | string
    requisitoId?: StringFilter<"EnvioVenda"> | string
    criadoEm?: DateTimeFilter<"EnvioVenda"> | Date | string
    atualizadoEm?: DateTimeFilter<"EnvioVenda"> | Date | string
    vendedor?: XOR<UsuarioScalarRelationFilter, UsuarioWhereInput>
    campanha?: XOR<CampanhaScalarRelationFilter, CampanhaWhereInput>
    requisito?: XOR<RequisitoCartelaScalarRelationFilter, RequisitoCartelaWhereInput>
  }, "id">

  export type EnvioVendaOrderByWithAggregationInput = {
    id?: SortOrder
    numeroPedido?: SortOrder
    status?: SortOrder
    dataEnvio?: SortOrder
    motivoRejeicao?: SortOrderInput | SortOrder
    infoConflito?: SortOrderInput | SortOrder
    numeroCartelaAtendida?: SortOrderInput | SortOrder
    dataValidacao?: SortOrderInput | SortOrder
    vendedorId?: SortOrder
    campanhaId?: SortOrder
    requisitoId?: SortOrder
    criadoEm?: SortOrder
    atualizadoEm?: SortOrder
    _count?: EnvioVendaCountOrderByAggregateInput
    _avg?: EnvioVendaAvgOrderByAggregateInput
    _max?: EnvioVendaMaxOrderByAggregateInput
    _min?: EnvioVendaMinOrderByAggregateInput
    _sum?: EnvioVendaSumOrderByAggregateInput
  }

  export type EnvioVendaScalarWhereWithAggregatesInput = {
    AND?: EnvioVendaScalarWhereWithAggregatesInput | EnvioVendaScalarWhereWithAggregatesInput[]
    OR?: EnvioVendaScalarWhereWithAggregatesInput[]
    NOT?: EnvioVendaScalarWhereWithAggregatesInput | EnvioVendaScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"EnvioVenda"> | string
    numeroPedido?: StringWithAggregatesFilter<"EnvioVenda"> | string
    status?: EnumStatusEnvioVendaWithAggregatesFilter<"EnvioVenda"> | $Enums.StatusEnvioVenda
    dataEnvio?: DateTimeWithAggregatesFilter<"EnvioVenda"> | Date | string
    motivoRejeicao?: StringNullableWithAggregatesFilter<"EnvioVenda"> | string | null
    infoConflito?: StringNullableWithAggregatesFilter<"EnvioVenda"> | string | null
    numeroCartelaAtendida?: IntNullableWithAggregatesFilter<"EnvioVenda"> | number | null
    dataValidacao?: DateTimeNullableWithAggregatesFilter<"EnvioVenda"> | Date | string | null
    vendedorId?: StringWithAggregatesFilter<"EnvioVenda"> | string
    campanhaId?: StringWithAggregatesFilter<"EnvioVenda"> | string
    requisitoId?: StringWithAggregatesFilter<"EnvioVenda"> | string
    criadoEm?: DateTimeWithAggregatesFilter<"EnvioVenda"> | Date | string
    atualizadoEm?: DateTimeWithAggregatesFilter<"EnvioVenda"> | Date | string
  }

  export type PremioWhereInput = {
    AND?: PremioWhereInput | PremioWhereInput[]
    OR?: PremioWhereInput[]
    NOT?: PremioWhereInput | PremioWhereInput[]
    id?: StringFilter<"Premio"> | string
    nome?: StringFilter<"Premio"> | string
    descricao?: StringFilter<"Premio"> | string
    imageUrl?: StringNullableFilter<"Premio"> | string | null
    custoMoedinhas?: IntFilter<"Premio"> | number
    estoque?: IntFilter<"Premio"> | number
    ativo?: BoolFilter<"Premio"> | boolean
    criadoEm?: DateTimeFilter<"Premio"> | Date | string
    atualizadoEm?: DateTimeFilter<"Premio"> | Date | string
    resgates?: ResgatePremioListRelationFilter
  }

  export type PremioOrderByWithRelationInput = {
    id?: SortOrder
    nome?: SortOrder
    descricao?: SortOrder
    imageUrl?: SortOrderInput | SortOrder
    custoMoedinhas?: SortOrder
    estoque?: SortOrder
    ativo?: SortOrder
    criadoEm?: SortOrder
    atualizadoEm?: SortOrder
    resgates?: ResgatePremioOrderByRelationAggregateInput
  }

  export type PremioWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: PremioWhereInput | PremioWhereInput[]
    OR?: PremioWhereInput[]
    NOT?: PremioWhereInput | PremioWhereInput[]
    nome?: StringFilter<"Premio"> | string
    descricao?: StringFilter<"Premio"> | string
    imageUrl?: StringNullableFilter<"Premio"> | string | null
    custoMoedinhas?: IntFilter<"Premio"> | number
    estoque?: IntFilter<"Premio"> | number
    ativo?: BoolFilter<"Premio"> | boolean
    criadoEm?: DateTimeFilter<"Premio"> | Date | string
    atualizadoEm?: DateTimeFilter<"Premio"> | Date | string
    resgates?: ResgatePremioListRelationFilter
  }, "id">

  export type PremioOrderByWithAggregationInput = {
    id?: SortOrder
    nome?: SortOrder
    descricao?: SortOrder
    imageUrl?: SortOrderInput | SortOrder
    custoMoedinhas?: SortOrder
    estoque?: SortOrder
    ativo?: SortOrder
    criadoEm?: SortOrder
    atualizadoEm?: SortOrder
    _count?: PremioCountOrderByAggregateInput
    _avg?: PremioAvgOrderByAggregateInput
    _max?: PremioMaxOrderByAggregateInput
    _min?: PremioMinOrderByAggregateInput
    _sum?: PremioSumOrderByAggregateInput
  }

  export type PremioScalarWhereWithAggregatesInput = {
    AND?: PremioScalarWhereWithAggregatesInput | PremioScalarWhereWithAggregatesInput[]
    OR?: PremioScalarWhereWithAggregatesInput[]
    NOT?: PremioScalarWhereWithAggregatesInput | PremioScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Premio"> | string
    nome?: StringWithAggregatesFilter<"Premio"> | string
    descricao?: StringWithAggregatesFilter<"Premio"> | string
    imageUrl?: StringNullableWithAggregatesFilter<"Premio"> | string | null
    custoMoedinhas?: IntWithAggregatesFilter<"Premio"> | number
    estoque?: IntWithAggregatesFilter<"Premio"> | number
    ativo?: BoolWithAggregatesFilter<"Premio"> | boolean
    criadoEm?: DateTimeWithAggregatesFilter<"Premio"> | Date | string
    atualizadoEm?: DateTimeWithAggregatesFilter<"Premio"> | Date | string
  }

  export type ResgatePremioWhereInput = {
    AND?: ResgatePremioWhereInput | ResgatePremioWhereInput[]
    OR?: ResgatePremioWhereInput[]
    NOT?: ResgatePremioWhereInput | ResgatePremioWhereInput[]
    id?: StringFilter<"ResgatePremio"> | string
    dataSolicitacao?: DateTimeFilter<"ResgatePremio"> | Date | string
    status?: EnumStatusResgateFilter<"ResgatePremio"> | $Enums.StatusResgate
    dataAtualizacao?: DateTimeFilter<"ResgatePremio"> | Date | string
    motivoCancelamento?: StringNullableFilter<"ResgatePremio"> | string | null
    vendedorId?: StringFilter<"ResgatePremio"> | string
    premioId?: StringFilter<"ResgatePremio"> | string
    criadoEm?: DateTimeFilter<"ResgatePremio"> | Date | string
    atualizadoEm?: DateTimeFilter<"ResgatePremio"> | Date | string
    vendedor?: XOR<UsuarioScalarRelationFilter, UsuarioWhereInput>
    premio?: XOR<PremioScalarRelationFilter, PremioWhereInput>
  }

  export type ResgatePremioOrderByWithRelationInput = {
    id?: SortOrder
    dataSolicitacao?: SortOrder
    status?: SortOrder
    dataAtualizacao?: SortOrder
    motivoCancelamento?: SortOrderInput | SortOrder
    vendedorId?: SortOrder
    premioId?: SortOrder
    criadoEm?: SortOrder
    atualizadoEm?: SortOrder
    vendedor?: UsuarioOrderByWithRelationInput
    premio?: PremioOrderByWithRelationInput
  }

  export type ResgatePremioWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: ResgatePremioWhereInput | ResgatePremioWhereInput[]
    OR?: ResgatePremioWhereInput[]
    NOT?: ResgatePremioWhereInput | ResgatePremioWhereInput[]
    dataSolicitacao?: DateTimeFilter<"ResgatePremio"> | Date | string
    status?: EnumStatusResgateFilter<"ResgatePremio"> | $Enums.StatusResgate
    dataAtualizacao?: DateTimeFilter<"ResgatePremio"> | Date | string
    motivoCancelamento?: StringNullableFilter<"ResgatePremio"> | string | null
    vendedorId?: StringFilter<"ResgatePremio"> | string
    premioId?: StringFilter<"ResgatePremio"> | string
    criadoEm?: DateTimeFilter<"ResgatePremio"> | Date | string
    atualizadoEm?: DateTimeFilter<"ResgatePremio"> | Date | string
    vendedor?: XOR<UsuarioScalarRelationFilter, UsuarioWhereInput>
    premio?: XOR<PremioScalarRelationFilter, PremioWhereInput>
  }, "id">

  export type ResgatePremioOrderByWithAggregationInput = {
    id?: SortOrder
    dataSolicitacao?: SortOrder
    status?: SortOrder
    dataAtualizacao?: SortOrder
    motivoCancelamento?: SortOrderInput | SortOrder
    vendedorId?: SortOrder
    premioId?: SortOrder
    criadoEm?: SortOrder
    atualizadoEm?: SortOrder
    _count?: ResgatePremioCountOrderByAggregateInput
    _max?: ResgatePremioMaxOrderByAggregateInput
    _min?: ResgatePremioMinOrderByAggregateInput
  }

  export type ResgatePremioScalarWhereWithAggregatesInput = {
    AND?: ResgatePremioScalarWhereWithAggregatesInput | ResgatePremioScalarWhereWithAggregatesInput[]
    OR?: ResgatePremioScalarWhereWithAggregatesInput[]
    NOT?: ResgatePremioScalarWhereWithAggregatesInput | ResgatePremioScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"ResgatePremio"> | string
    dataSolicitacao?: DateTimeWithAggregatesFilter<"ResgatePremio"> | Date | string
    status?: EnumStatusResgateWithAggregatesFilter<"ResgatePremio"> | $Enums.StatusResgate
    dataAtualizacao?: DateTimeWithAggregatesFilter<"ResgatePremio"> | Date | string
    motivoCancelamento?: StringNullableWithAggregatesFilter<"ResgatePremio"> | string | null
    vendedorId?: StringWithAggregatesFilter<"ResgatePremio"> | string
    premioId?: StringWithAggregatesFilter<"ResgatePremio"> | string
    criadoEm?: DateTimeWithAggregatesFilter<"ResgatePremio"> | Date | string
    atualizadoEm?: DateTimeWithAggregatesFilter<"ResgatePremio"> | Date | string
  }

  export type RelatorioFinanceiroWhereInput = {
    AND?: RelatorioFinanceiroWhereInput | RelatorioFinanceiroWhereInput[]
    OR?: RelatorioFinanceiroWhereInput[]
    NOT?: RelatorioFinanceiroWhereInput | RelatorioFinanceiroWhereInput[]
    id?: StringFilter<"RelatorioFinanceiro"> | string
    valor?: DecimalFilter<"RelatorioFinanceiro"> | Decimal | DecimalJsLike | number | string
    status?: EnumStatusPagamentoFilter<"RelatorioFinanceiro"> | $Enums.StatusPagamento
    tipo?: StringFilter<"RelatorioFinanceiro"> | string
    dataGerado?: DateTimeFilter<"RelatorioFinanceiro"> | Date | string
    dataPagamento?: DateTimeNullableFilter<"RelatorioFinanceiro"> | Date | string | null
    observacoes?: StringNullableFilter<"RelatorioFinanceiro"> | string | null
    usuarioId?: StringFilter<"RelatorioFinanceiro"> | string
    campanhaId?: StringFilter<"RelatorioFinanceiro"> | string
    criadoEm?: DateTimeFilter<"RelatorioFinanceiro"> | Date | string
    atualizadoEm?: DateTimeFilter<"RelatorioFinanceiro"> | Date | string
    usuario?: XOR<UsuarioScalarRelationFilter, UsuarioWhereInput>
    campanha?: XOR<CampanhaScalarRelationFilter, CampanhaWhereInput>
  }

  export type RelatorioFinanceiroOrderByWithRelationInput = {
    id?: SortOrder
    valor?: SortOrder
    status?: SortOrder
    tipo?: SortOrder
    dataGerado?: SortOrder
    dataPagamento?: SortOrderInput | SortOrder
    observacoes?: SortOrderInput | SortOrder
    usuarioId?: SortOrder
    campanhaId?: SortOrder
    criadoEm?: SortOrder
    atualizadoEm?: SortOrder
    usuario?: UsuarioOrderByWithRelationInput
    campanha?: CampanhaOrderByWithRelationInput
  }

  export type RelatorioFinanceiroWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: RelatorioFinanceiroWhereInput | RelatorioFinanceiroWhereInput[]
    OR?: RelatorioFinanceiroWhereInput[]
    NOT?: RelatorioFinanceiroWhereInput | RelatorioFinanceiroWhereInput[]
    valor?: DecimalFilter<"RelatorioFinanceiro"> | Decimal | DecimalJsLike | number | string
    status?: EnumStatusPagamentoFilter<"RelatorioFinanceiro"> | $Enums.StatusPagamento
    tipo?: StringFilter<"RelatorioFinanceiro"> | string
    dataGerado?: DateTimeFilter<"RelatorioFinanceiro"> | Date | string
    dataPagamento?: DateTimeNullableFilter<"RelatorioFinanceiro"> | Date | string | null
    observacoes?: StringNullableFilter<"RelatorioFinanceiro"> | string | null
    usuarioId?: StringFilter<"RelatorioFinanceiro"> | string
    campanhaId?: StringFilter<"RelatorioFinanceiro"> | string
    criadoEm?: DateTimeFilter<"RelatorioFinanceiro"> | Date | string
    atualizadoEm?: DateTimeFilter<"RelatorioFinanceiro"> | Date | string
    usuario?: XOR<UsuarioScalarRelationFilter, UsuarioWhereInput>
    campanha?: XOR<CampanhaScalarRelationFilter, CampanhaWhereInput>
  }, "id">

  export type RelatorioFinanceiroOrderByWithAggregationInput = {
    id?: SortOrder
    valor?: SortOrder
    status?: SortOrder
    tipo?: SortOrder
    dataGerado?: SortOrder
    dataPagamento?: SortOrderInput | SortOrder
    observacoes?: SortOrderInput | SortOrder
    usuarioId?: SortOrder
    campanhaId?: SortOrder
    criadoEm?: SortOrder
    atualizadoEm?: SortOrder
    _count?: RelatorioFinanceiroCountOrderByAggregateInput
    _avg?: RelatorioFinanceiroAvgOrderByAggregateInput
    _max?: RelatorioFinanceiroMaxOrderByAggregateInput
    _min?: RelatorioFinanceiroMinOrderByAggregateInput
    _sum?: RelatorioFinanceiroSumOrderByAggregateInput
  }

  export type RelatorioFinanceiroScalarWhereWithAggregatesInput = {
    AND?: RelatorioFinanceiroScalarWhereWithAggregatesInput | RelatorioFinanceiroScalarWhereWithAggregatesInput[]
    OR?: RelatorioFinanceiroScalarWhereWithAggregatesInput[]
    NOT?: RelatorioFinanceiroScalarWhereWithAggregatesInput | RelatorioFinanceiroScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"RelatorioFinanceiro"> | string
    valor?: DecimalWithAggregatesFilter<"RelatorioFinanceiro"> | Decimal | DecimalJsLike | number | string
    status?: EnumStatusPagamentoWithAggregatesFilter<"RelatorioFinanceiro"> | $Enums.StatusPagamento
    tipo?: StringWithAggregatesFilter<"RelatorioFinanceiro"> | string
    dataGerado?: DateTimeWithAggregatesFilter<"RelatorioFinanceiro"> | Date | string
    dataPagamento?: DateTimeNullableWithAggregatesFilter<"RelatorioFinanceiro"> | Date | string | null
    observacoes?: StringNullableWithAggregatesFilter<"RelatorioFinanceiro"> | string | null
    usuarioId?: StringWithAggregatesFilter<"RelatorioFinanceiro"> | string
    campanhaId?: StringWithAggregatesFilter<"RelatorioFinanceiro"> | string
    criadoEm?: DateTimeWithAggregatesFilter<"RelatorioFinanceiro"> | Date | string
    atualizadoEm?: DateTimeWithAggregatesFilter<"RelatorioFinanceiro"> | Date | string
  }

  export type NotificacaoWhereInput = {
    AND?: NotificacaoWhereInput | NotificacaoWhereInput[]
    OR?: NotificacaoWhereInput[]
    NOT?: NotificacaoWhereInput | NotificacaoWhereInput[]
    id?: StringFilter<"Notificacao"> | string
    mensagem?: StringFilter<"Notificacao"> | string
    lida?: BoolFilter<"Notificacao"> | boolean
    linkUrl?: StringNullableFilter<"Notificacao"> | string | null
    dataCriacao?: DateTimeFilter<"Notificacao"> | Date | string
    usuarioId?: StringFilter<"Notificacao"> | string
    criadoEm?: DateTimeFilter<"Notificacao"> | Date | string
    atualizadoEm?: DateTimeFilter<"Notificacao"> | Date | string
    usuario?: XOR<UsuarioScalarRelationFilter, UsuarioWhereInput>
  }

  export type NotificacaoOrderByWithRelationInput = {
    id?: SortOrder
    mensagem?: SortOrder
    lida?: SortOrder
    linkUrl?: SortOrderInput | SortOrder
    dataCriacao?: SortOrder
    usuarioId?: SortOrder
    criadoEm?: SortOrder
    atualizadoEm?: SortOrder
    usuario?: UsuarioOrderByWithRelationInput
  }

  export type NotificacaoWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: NotificacaoWhereInput | NotificacaoWhereInput[]
    OR?: NotificacaoWhereInput[]
    NOT?: NotificacaoWhereInput | NotificacaoWhereInput[]
    mensagem?: StringFilter<"Notificacao"> | string
    lida?: BoolFilter<"Notificacao"> | boolean
    linkUrl?: StringNullableFilter<"Notificacao"> | string | null
    dataCriacao?: DateTimeFilter<"Notificacao"> | Date | string
    usuarioId?: StringFilter<"Notificacao"> | string
    criadoEm?: DateTimeFilter<"Notificacao"> | Date | string
    atualizadoEm?: DateTimeFilter<"Notificacao"> | Date | string
    usuario?: XOR<UsuarioScalarRelationFilter, UsuarioWhereInput>
  }, "id">

  export type NotificacaoOrderByWithAggregationInput = {
    id?: SortOrder
    mensagem?: SortOrder
    lida?: SortOrder
    linkUrl?: SortOrderInput | SortOrder
    dataCriacao?: SortOrder
    usuarioId?: SortOrder
    criadoEm?: SortOrder
    atualizadoEm?: SortOrder
    _count?: NotificacaoCountOrderByAggregateInput
    _max?: NotificacaoMaxOrderByAggregateInput
    _min?: NotificacaoMinOrderByAggregateInput
  }

  export type NotificacaoScalarWhereWithAggregatesInput = {
    AND?: NotificacaoScalarWhereWithAggregatesInput | NotificacaoScalarWhereWithAggregatesInput[]
    OR?: NotificacaoScalarWhereWithAggregatesInput[]
    NOT?: NotificacaoScalarWhereWithAggregatesInput | NotificacaoScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Notificacao"> | string
    mensagem?: StringWithAggregatesFilter<"Notificacao"> | string
    lida?: BoolWithAggregatesFilter<"Notificacao"> | boolean
    linkUrl?: StringNullableWithAggregatesFilter<"Notificacao"> | string | null
    dataCriacao?: DateTimeWithAggregatesFilter<"Notificacao"> | Date | string
    usuarioId?: StringWithAggregatesFilter<"Notificacao"> | string
    criadoEm?: DateTimeWithAggregatesFilter<"Notificacao"> | Date | string
    atualizadoEm?: DateTimeWithAggregatesFilter<"Notificacao"> | Date | string
  }

  export type ConfiguracaoGlobalWhereInput = {
    AND?: ConfiguracaoGlobalWhereInput | ConfiguracaoGlobalWhereInput[]
    OR?: ConfiguracaoGlobalWhereInput[]
    NOT?: ConfiguracaoGlobalWhereInput | ConfiguracaoGlobalWhereInput[]
    id?: StringFilter<"ConfiguracaoGlobal"> | string
    chave?: StringFilter<"ConfiguracaoGlobal"> | string
    valor?: StringFilter<"ConfiguracaoGlobal"> | string
    descricao?: StringFilter<"ConfiguracaoGlobal"> | string
    criadoEm?: DateTimeFilter<"ConfiguracaoGlobal"> | Date | string
    atualizadoEm?: DateTimeFilter<"ConfiguracaoGlobal"> | Date | string
  }

  export type ConfiguracaoGlobalOrderByWithRelationInput = {
    id?: SortOrder
    chave?: SortOrder
    valor?: SortOrder
    descricao?: SortOrder
    criadoEm?: SortOrder
    atualizadoEm?: SortOrder
  }

  export type ConfiguracaoGlobalWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    chave?: string
    AND?: ConfiguracaoGlobalWhereInput | ConfiguracaoGlobalWhereInput[]
    OR?: ConfiguracaoGlobalWhereInput[]
    NOT?: ConfiguracaoGlobalWhereInput | ConfiguracaoGlobalWhereInput[]
    valor?: StringFilter<"ConfiguracaoGlobal"> | string
    descricao?: StringFilter<"ConfiguracaoGlobal"> | string
    criadoEm?: DateTimeFilter<"ConfiguracaoGlobal"> | Date | string
    atualizadoEm?: DateTimeFilter<"ConfiguracaoGlobal"> | Date | string
  }, "id" | "chave">

  export type ConfiguracaoGlobalOrderByWithAggregationInput = {
    id?: SortOrder
    chave?: SortOrder
    valor?: SortOrder
    descricao?: SortOrder
    criadoEm?: SortOrder
    atualizadoEm?: SortOrder
    _count?: ConfiguracaoGlobalCountOrderByAggregateInput
    _max?: ConfiguracaoGlobalMaxOrderByAggregateInput
    _min?: ConfiguracaoGlobalMinOrderByAggregateInput
  }

  export type ConfiguracaoGlobalScalarWhereWithAggregatesInput = {
    AND?: ConfiguracaoGlobalScalarWhereWithAggregatesInput | ConfiguracaoGlobalScalarWhereWithAggregatesInput[]
    OR?: ConfiguracaoGlobalScalarWhereWithAggregatesInput[]
    NOT?: ConfiguracaoGlobalScalarWhereWithAggregatesInput | ConfiguracaoGlobalScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"ConfiguracaoGlobal"> | string
    chave?: StringWithAggregatesFilter<"ConfiguracaoGlobal"> | string
    valor?: StringWithAggregatesFilter<"ConfiguracaoGlobal"> | string
    descricao?: StringWithAggregatesFilter<"ConfiguracaoGlobal"> | string
    criadoEm?: DateTimeWithAggregatesFilter<"ConfiguracaoGlobal"> | Date | string
    atualizadoEm?: DateTimeWithAggregatesFilter<"ConfiguracaoGlobal"> | Date | string
  }

  export type CartelaConcluidaWhereInput = {
    AND?: CartelaConcluidaWhereInput | CartelaConcluidaWhereInput[]
    OR?: CartelaConcluidaWhereInput[]
    NOT?: CartelaConcluidaWhereInput | CartelaConcluidaWhereInput[]
    id?: StringFilter<"CartelaConcluida"> | string
    dataConclusao?: DateTimeFilter<"CartelaConcluida"> | Date | string
    numeroCartela?: IntFilter<"CartelaConcluida"> | number
    vendedorId?: StringFilter<"CartelaConcluida"> | string
    campanhaId?: StringFilter<"CartelaConcluida"> | string
    vendedor?: XOR<UsuarioScalarRelationFilter, UsuarioWhereInput>
    campanha?: XOR<CampanhaScalarRelationFilter, CampanhaWhereInput>
  }

  export type CartelaConcluidaOrderByWithRelationInput = {
    id?: SortOrder
    dataConclusao?: SortOrder
    numeroCartela?: SortOrder
    vendedorId?: SortOrder
    campanhaId?: SortOrder
    vendedor?: UsuarioOrderByWithRelationInput
    campanha?: CampanhaOrderByWithRelationInput
  }

  export type CartelaConcluidaWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    vendedorId_campanhaId_numeroCartela?: CartelaConcluidaVendedorIdCampanhaIdNumeroCartelaCompoundUniqueInput
    AND?: CartelaConcluidaWhereInput | CartelaConcluidaWhereInput[]
    OR?: CartelaConcluidaWhereInput[]
    NOT?: CartelaConcluidaWhereInput | CartelaConcluidaWhereInput[]
    dataConclusao?: DateTimeFilter<"CartelaConcluida"> | Date | string
    numeroCartela?: IntFilter<"CartelaConcluida"> | number
    vendedorId?: StringFilter<"CartelaConcluida"> | string
    campanhaId?: StringFilter<"CartelaConcluida"> | string
    vendedor?: XOR<UsuarioScalarRelationFilter, UsuarioWhereInput>
    campanha?: XOR<CampanhaScalarRelationFilter, CampanhaWhereInput>
  }, "id" | "vendedorId_campanhaId_numeroCartela">

  export type CartelaConcluidaOrderByWithAggregationInput = {
    id?: SortOrder
    dataConclusao?: SortOrder
    numeroCartela?: SortOrder
    vendedorId?: SortOrder
    campanhaId?: SortOrder
    _count?: CartelaConcluidaCountOrderByAggregateInput
    _avg?: CartelaConcluidaAvgOrderByAggregateInput
    _max?: CartelaConcluidaMaxOrderByAggregateInput
    _min?: CartelaConcluidaMinOrderByAggregateInput
    _sum?: CartelaConcluidaSumOrderByAggregateInput
  }

  export type CartelaConcluidaScalarWhereWithAggregatesInput = {
    AND?: CartelaConcluidaScalarWhereWithAggregatesInput | CartelaConcluidaScalarWhereWithAggregatesInput[]
    OR?: CartelaConcluidaScalarWhereWithAggregatesInput[]
    NOT?: CartelaConcluidaScalarWhereWithAggregatesInput | CartelaConcluidaScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"CartelaConcluida"> | string
    dataConclusao?: DateTimeWithAggregatesFilter<"CartelaConcluida"> | Date | string
    numeroCartela?: IntWithAggregatesFilter<"CartelaConcluida"> | number
    vendedorId?: StringWithAggregatesFilter<"CartelaConcluida"> | string
    campanhaId?: StringWithAggregatesFilter<"CartelaConcluida"> | string
  }

  export type OpticaCreateInput = {
    id?: string
    cnpj: string
    nome: string
    endereco?: string | null
    cidade?: string | null
    estado?: string | null
    telefone?: string | null
    email?: string | null
    ativa?: boolean
    ehMatriz?: boolean
    criadoEm?: Date | string
    atualizadoEm?: Date | string
    matriz?: OpticaCreateNestedOneWithoutFiliaisInput
    filiais?: OpticaCreateNestedManyWithoutMatrizInput
    usuarios?: UsuarioCreateNestedManyWithoutOpticaInput
    campanhasAlvo?: CampanhaCreateNestedManyWithoutOticasAlvoInput
  }

  export type OpticaUncheckedCreateInput = {
    id?: string
    cnpj: string
    nome: string
    endereco?: string | null
    cidade?: string | null
    estado?: string | null
    telefone?: string | null
    email?: string | null
    ativa?: boolean
    ehMatriz?: boolean
    matrizId?: string | null
    criadoEm?: Date | string
    atualizadoEm?: Date | string
    filiais?: OpticaUncheckedCreateNestedManyWithoutMatrizInput
    usuarios?: UsuarioUncheckedCreateNestedManyWithoutOpticaInput
    campanhasAlvo?: CampanhaUncheckedCreateNestedManyWithoutOticasAlvoInput
  }

  export type OpticaUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    endereco?: NullableStringFieldUpdateOperationsInput | string | null
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    ativa?: BoolFieldUpdateOperationsInput | boolean
    ehMatriz?: BoolFieldUpdateOperationsInput | boolean
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    matriz?: OpticaUpdateOneWithoutFiliaisNestedInput
    filiais?: OpticaUpdateManyWithoutMatrizNestedInput
    usuarios?: UsuarioUpdateManyWithoutOpticaNestedInput
    campanhasAlvo?: CampanhaUpdateManyWithoutOticasAlvoNestedInput
  }

  export type OpticaUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    endereco?: NullableStringFieldUpdateOperationsInput | string | null
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    ativa?: BoolFieldUpdateOperationsInput | boolean
    ehMatriz?: BoolFieldUpdateOperationsInput | boolean
    matrizId?: NullableStringFieldUpdateOperationsInput | string | null
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    filiais?: OpticaUncheckedUpdateManyWithoutMatrizNestedInput
    usuarios?: UsuarioUncheckedUpdateManyWithoutOpticaNestedInput
    campanhasAlvo?: CampanhaUncheckedUpdateManyWithoutOticasAlvoNestedInput
  }

  export type OpticaCreateManyInput = {
    id?: string
    cnpj: string
    nome: string
    endereco?: string | null
    cidade?: string | null
    estado?: string | null
    telefone?: string | null
    email?: string | null
    ativa?: boolean
    ehMatriz?: boolean
    matrizId?: string | null
    criadoEm?: Date | string
    atualizadoEm?: Date | string
  }

  export type OpticaUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    endereco?: NullableStringFieldUpdateOperationsInput | string | null
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    ativa?: BoolFieldUpdateOperationsInput | boolean
    ehMatriz?: BoolFieldUpdateOperationsInput | boolean
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OpticaUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    endereco?: NullableStringFieldUpdateOperationsInput | string | null
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    ativa?: BoolFieldUpdateOperationsInput | boolean
    ehMatriz?: BoolFieldUpdateOperationsInput | boolean
    matrizId?: NullableStringFieldUpdateOperationsInput | string | null
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UsuarioCreateInput = {
    id?: string
    email: string
    cpf?: string | null
    nome: string
    whatsapp?: string | null
    senhaHash: string
    avatarUrl?: string | null
    papel: $Enums.PapelUsuario
    status?: $Enums.StatusUsuario
    saldoMoedinhas?: number
    rankingMoedinhas?: number
    nivel?: $Enums.NivelVendedor
    tokenResetarSenha?: string | null
    tokenResetarSenhaExpira?: Date | string | null
    mapeamentoPlanilhaSalvo?: NullableJsonNullValueInput | InputJsonValue
    criadoEm?: Date | string
    atualizadoEm?: Date | string
    optica?: OpticaCreateNestedOneWithoutUsuariosInput
    gerente?: UsuarioCreateNestedOneWithoutVendedoresInput
    vendedores?: UsuarioCreateNestedManyWithoutGerenteInput
    enviosVenda?: EnvioVendaCreateNestedManyWithoutVendedorInput
    resgatesPremios?: ResgatePremioCreateNestedManyWithoutVendedorInput
    relatoriosFinanceiros?: RelatorioFinanceiroCreateNestedManyWithoutUsuarioInput
    notificacoes?: NotificacaoCreateNestedManyWithoutUsuarioInput
    cartelasConcluidas?: CartelaConcluidaCreateNestedManyWithoutVendedorInput
  }

  export type UsuarioUncheckedCreateInput = {
    id?: string
    email: string
    cpf?: string | null
    nome: string
    whatsapp?: string | null
    senhaHash: string
    avatarUrl?: string | null
    papel: $Enums.PapelUsuario
    status?: $Enums.StatusUsuario
    saldoMoedinhas?: number
    rankingMoedinhas?: number
    nivel?: $Enums.NivelVendedor
    tokenResetarSenha?: string | null
    tokenResetarSenhaExpira?: Date | string | null
    mapeamentoPlanilhaSalvo?: NullableJsonNullValueInput | InputJsonValue
    opticaId?: string | null
    gerenteId?: string | null
    criadoEm?: Date | string
    atualizadoEm?: Date | string
    vendedores?: UsuarioUncheckedCreateNestedManyWithoutGerenteInput
    enviosVenda?: EnvioVendaUncheckedCreateNestedManyWithoutVendedorInput
    resgatesPremios?: ResgatePremioUncheckedCreateNestedManyWithoutVendedorInput
    relatoriosFinanceiros?: RelatorioFinanceiroUncheckedCreateNestedManyWithoutUsuarioInput
    notificacoes?: NotificacaoUncheckedCreateNestedManyWithoutUsuarioInput
    cartelasConcluidas?: CartelaConcluidaUncheckedCreateNestedManyWithoutVendedorInput
  }

  export type UsuarioUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    nome?: StringFieldUpdateOperationsInput | string
    whatsapp?: NullableStringFieldUpdateOperationsInput | string | null
    senhaHash?: StringFieldUpdateOperationsInput | string
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    papel?: EnumPapelUsuarioFieldUpdateOperationsInput | $Enums.PapelUsuario
    status?: EnumStatusUsuarioFieldUpdateOperationsInput | $Enums.StatusUsuario
    saldoMoedinhas?: IntFieldUpdateOperationsInput | number
    rankingMoedinhas?: IntFieldUpdateOperationsInput | number
    nivel?: EnumNivelVendedorFieldUpdateOperationsInput | $Enums.NivelVendedor
    tokenResetarSenha?: NullableStringFieldUpdateOperationsInput | string | null
    tokenResetarSenhaExpira?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    mapeamentoPlanilhaSalvo?: NullableJsonNullValueInput | InputJsonValue
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    optica?: OpticaUpdateOneWithoutUsuariosNestedInput
    gerente?: UsuarioUpdateOneWithoutVendedoresNestedInput
    vendedores?: UsuarioUpdateManyWithoutGerenteNestedInput
    enviosVenda?: EnvioVendaUpdateManyWithoutVendedorNestedInput
    resgatesPremios?: ResgatePremioUpdateManyWithoutVendedorNestedInput
    relatoriosFinanceiros?: RelatorioFinanceiroUpdateManyWithoutUsuarioNestedInput
    notificacoes?: NotificacaoUpdateManyWithoutUsuarioNestedInput
    cartelasConcluidas?: CartelaConcluidaUpdateManyWithoutVendedorNestedInput
  }

  export type UsuarioUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    nome?: StringFieldUpdateOperationsInput | string
    whatsapp?: NullableStringFieldUpdateOperationsInput | string | null
    senhaHash?: StringFieldUpdateOperationsInput | string
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    papel?: EnumPapelUsuarioFieldUpdateOperationsInput | $Enums.PapelUsuario
    status?: EnumStatusUsuarioFieldUpdateOperationsInput | $Enums.StatusUsuario
    saldoMoedinhas?: IntFieldUpdateOperationsInput | number
    rankingMoedinhas?: IntFieldUpdateOperationsInput | number
    nivel?: EnumNivelVendedorFieldUpdateOperationsInput | $Enums.NivelVendedor
    tokenResetarSenha?: NullableStringFieldUpdateOperationsInput | string | null
    tokenResetarSenhaExpira?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    mapeamentoPlanilhaSalvo?: NullableJsonNullValueInput | InputJsonValue
    opticaId?: NullableStringFieldUpdateOperationsInput | string | null
    gerenteId?: NullableStringFieldUpdateOperationsInput | string | null
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    vendedores?: UsuarioUncheckedUpdateManyWithoutGerenteNestedInput
    enviosVenda?: EnvioVendaUncheckedUpdateManyWithoutVendedorNestedInput
    resgatesPremios?: ResgatePremioUncheckedUpdateManyWithoutVendedorNestedInput
    relatoriosFinanceiros?: RelatorioFinanceiroUncheckedUpdateManyWithoutUsuarioNestedInput
    notificacoes?: NotificacaoUncheckedUpdateManyWithoutUsuarioNestedInput
    cartelasConcluidas?: CartelaConcluidaUncheckedUpdateManyWithoutVendedorNestedInput
  }

  export type UsuarioCreateManyInput = {
    id?: string
    email: string
    cpf?: string | null
    nome: string
    whatsapp?: string | null
    senhaHash: string
    avatarUrl?: string | null
    papel: $Enums.PapelUsuario
    status?: $Enums.StatusUsuario
    saldoMoedinhas?: number
    rankingMoedinhas?: number
    nivel?: $Enums.NivelVendedor
    tokenResetarSenha?: string | null
    tokenResetarSenhaExpira?: Date | string | null
    mapeamentoPlanilhaSalvo?: NullableJsonNullValueInput | InputJsonValue
    opticaId?: string | null
    gerenteId?: string | null
    criadoEm?: Date | string
    atualizadoEm?: Date | string
  }

  export type UsuarioUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    nome?: StringFieldUpdateOperationsInput | string
    whatsapp?: NullableStringFieldUpdateOperationsInput | string | null
    senhaHash?: StringFieldUpdateOperationsInput | string
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    papel?: EnumPapelUsuarioFieldUpdateOperationsInput | $Enums.PapelUsuario
    status?: EnumStatusUsuarioFieldUpdateOperationsInput | $Enums.StatusUsuario
    saldoMoedinhas?: IntFieldUpdateOperationsInput | number
    rankingMoedinhas?: IntFieldUpdateOperationsInput | number
    nivel?: EnumNivelVendedorFieldUpdateOperationsInput | $Enums.NivelVendedor
    tokenResetarSenha?: NullableStringFieldUpdateOperationsInput | string | null
    tokenResetarSenhaExpira?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    mapeamentoPlanilhaSalvo?: NullableJsonNullValueInput | InputJsonValue
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UsuarioUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    nome?: StringFieldUpdateOperationsInput | string
    whatsapp?: NullableStringFieldUpdateOperationsInput | string | null
    senhaHash?: StringFieldUpdateOperationsInput | string
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    papel?: EnumPapelUsuarioFieldUpdateOperationsInput | $Enums.PapelUsuario
    status?: EnumStatusUsuarioFieldUpdateOperationsInput | $Enums.StatusUsuario
    saldoMoedinhas?: IntFieldUpdateOperationsInput | number
    rankingMoedinhas?: IntFieldUpdateOperationsInput | number
    nivel?: EnumNivelVendedorFieldUpdateOperationsInput | $Enums.NivelVendedor
    tokenResetarSenha?: NullableStringFieldUpdateOperationsInput | string | null
    tokenResetarSenhaExpira?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    mapeamentoPlanilhaSalvo?: NullableJsonNullValueInput | InputJsonValue
    opticaId?: NullableStringFieldUpdateOperationsInput | string | null
    gerenteId?: NullableStringFieldUpdateOperationsInput | string | null
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CampanhaCreateInput = {
    id?: string
    titulo: string
    descricao: string
    dataInicio: Date | string
    dataFim: Date | string
    moedinhasPorCartela: number
    pontosReaisPorCartela: Decimal | DecimalJsLike | number | string
    status?: string
    percentualGerente?: Decimal | DecimalJsLike | number | string
    paraTodasOticas?: boolean
    criadoEm?: Date | string
    atualizadoEm?: Date | string
    oticasAlvo?: OpticaCreateNestedManyWithoutCampanhasAlvoInput
    cartelas?: RegraCartelaCreateNestedManyWithoutCampanhaInput
    enviosVenda?: EnvioVendaCreateNestedManyWithoutCampanhaInput
    relatoriosFinanceiros?: RelatorioFinanceiroCreateNestedManyWithoutCampanhaInput
    cartelasConcluidas?: CartelaConcluidaCreateNestedManyWithoutCampanhaInput
  }

  export type CampanhaUncheckedCreateInput = {
    id?: string
    titulo: string
    descricao: string
    dataInicio: Date | string
    dataFim: Date | string
    moedinhasPorCartela: number
    pontosReaisPorCartela: Decimal | DecimalJsLike | number | string
    status?: string
    percentualGerente?: Decimal | DecimalJsLike | number | string
    paraTodasOticas?: boolean
    criadoEm?: Date | string
    atualizadoEm?: Date | string
    oticasAlvo?: OpticaUncheckedCreateNestedManyWithoutCampanhasAlvoInput
    cartelas?: RegraCartelaUncheckedCreateNestedManyWithoutCampanhaInput
    enviosVenda?: EnvioVendaUncheckedCreateNestedManyWithoutCampanhaInput
    relatoriosFinanceiros?: RelatorioFinanceiroUncheckedCreateNestedManyWithoutCampanhaInput
    cartelasConcluidas?: CartelaConcluidaUncheckedCreateNestedManyWithoutCampanhaInput
  }

  export type CampanhaUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    dataInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    dataFim?: DateTimeFieldUpdateOperationsInput | Date | string
    moedinhasPorCartela?: IntFieldUpdateOperationsInput | number
    pontosReaisPorCartela?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: StringFieldUpdateOperationsInput | string
    percentualGerente?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    paraTodasOticas?: BoolFieldUpdateOperationsInput | boolean
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    oticasAlvo?: OpticaUpdateManyWithoutCampanhasAlvoNestedInput
    cartelas?: RegraCartelaUpdateManyWithoutCampanhaNestedInput
    enviosVenda?: EnvioVendaUpdateManyWithoutCampanhaNestedInput
    relatoriosFinanceiros?: RelatorioFinanceiroUpdateManyWithoutCampanhaNestedInput
    cartelasConcluidas?: CartelaConcluidaUpdateManyWithoutCampanhaNestedInput
  }

  export type CampanhaUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    dataInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    dataFim?: DateTimeFieldUpdateOperationsInput | Date | string
    moedinhasPorCartela?: IntFieldUpdateOperationsInput | number
    pontosReaisPorCartela?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: StringFieldUpdateOperationsInput | string
    percentualGerente?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    paraTodasOticas?: BoolFieldUpdateOperationsInput | boolean
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    oticasAlvo?: OpticaUncheckedUpdateManyWithoutCampanhasAlvoNestedInput
    cartelas?: RegraCartelaUncheckedUpdateManyWithoutCampanhaNestedInput
    enviosVenda?: EnvioVendaUncheckedUpdateManyWithoutCampanhaNestedInput
    relatoriosFinanceiros?: RelatorioFinanceiroUncheckedUpdateManyWithoutCampanhaNestedInput
    cartelasConcluidas?: CartelaConcluidaUncheckedUpdateManyWithoutCampanhaNestedInput
  }

  export type CampanhaCreateManyInput = {
    id?: string
    titulo: string
    descricao: string
    dataInicio: Date | string
    dataFim: Date | string
    moedinhasPorCartela: number
    pontosReaisPorCartela: Decimal | DecimalJsLike | number | string
    status?: string
    percentualGerente?: Decimal | DecimalJsLike | number | string
    paraTodasOticas?: boolean
    criadoEm?: Date | string
    atualizadoEm?: Date | string
  }

  export type CampanhaUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    dataInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    dataFim?: DateTimeFieldUpdateOperationsInput | Date | string
    moedinhasPorCartela?: IntFieldUpdateOperationsInput | number
    pontosReaisPorCartela?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: StringFieldUpdateOperationsInput | string
    percentualGerente?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    paraTodasOticas?: BoolFieldUpdateOperationsInput | boolean
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CampanhaUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    dataInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    dataFim?: DateTimeFieldUpdateOperationsInput | Date | string
    moedinhasPorCartela?: IntFieldUpdateOperationsInput | number
    pontosReaisPorCartela?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: StringFieldUpdateOperationsInput | string
    percentualGerente?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    paraTodasOticas?: BoolFieldUpdateOperationsInput | boolean
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RegraCartelaCreateInput = {
    id?: string
    numeroCartela: number
    descricao?: string | null
    criadoEm?: Date | string
    atualizadoEm?: Date | string
    campanha: CampanhaCreateNestedOneWithoutCartelasInput
    requisitos?: RequisitoCartelaCreateNestedManyWithoutRegraCartelaInput
  }

  export type RegraCartelaUncheckedCreateInput = {
    id?: string
    numeroCartela: number
    descricao?: string | null
    campanhaId: string
    criadoEm?: Date | string
    atualizadoEm?: Date | string
    requisitos?: RequisitoCartelaUncheckedCreateNestedManyWithoutRegraCartelaInput
  }

  export type RegraCartelaUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    numeroCartela?: IntFieldUpdateOperationsInput | number
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    campanha?: CampanhaUpdateOneRequiredWithoutCartelasNestedInput
    requisitos?: RequisitoCartelaUpdateManyWithoutRegraCartelaNestedInput
  }

  export type RegraCartelaUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    numeroCartela?: IntFieldUpdateOperationsInput | number
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    campanhaId?: StringFieldUpdateOperationsInput | string
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    requisitos?: RequisitoCartelaUncheckedUpdateManyWithoutRegraCartelaNestedInput
  }

  export type RegraCartelaCreateManyInput = {
    id?: string
    numeroCartela: number
    descricao?: string | null
    campanhaId: string
    criadoEm?: Date | string
    atualizadoEm?: Date | string
  }

  export type RegraCartelaUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    numeroCartela?: IntFieldUpdateOperationsInput | number
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RegraCartelaUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    numeroCartela?: IntFieldUpdateOperationsInput | number
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    campanhaId?: StringFieldUpdateOperationsInput | string
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RequisitoCartelaCreateInput = {
    id?: string
    descricao: string
    quantidade: number
    tipoUnidade?: $Enums.TipoUnidade
    ordem: number
    criadoEm?: Date | string
    atualizadoEm?: Date | string
    regraCartela: RegraCartelaCreateNestedOneWithoutRequisitosInput
    condicoes?: CondicaoRequisitoCreateNestedManyWithoutRequisitoInput
    enviosVenda?: EnvioVendaCreateNestedManyWithoutRequisitoInput
  }

  export type RequisitoCartelaUncheckedCreateInput = {
    id?: string
    descricao: string
    quantidade: number
    tipoUnidade?: $Enums.TipoUnidade
    ordem: number
    regraCartelaId: string
    criadoEm?: Date | string
    atualizadoEm?: Date | string
    condicoes?: CondicaoRequisitoUncheckedCreateNestedManyWithoutRequisitoInput
    enviosVenda?: EnvioVendaUncheckedCreateNestedManyWithoutRequisitoInput
  }

  export type RequisitoCartelaUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    quantidade?: IntFieldUpdateOperationsInput | number
    tipoUnidade?: EnumTipoUnidadeFieldUpdateOperationsInput | $Enums.TipoUnidade
    ordem?: IntFieldUpdateOperationsInput | number
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    regraCartela?: RegraCartelaUpdateOneRequiredWithoutRequisitosNestedInput
    condicoes?: CondicaoRequisitoUpdateManyWithoutRequisitoNestedInput
    enviosVenda?: EnvioVendaUpdateManyWithoutRequisitoNestedInput
  }

  export type RequisitoCartelaUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    quantidade?: IntFieldUpdateOperationsInput | number
    tipoUnidade?: EnumTipoUnidadeFieldUpdateOperationsInput | $Enums.TipoUnidade
    ordem?: IntFieldUpdateOperationsInput | number
    regraCartelaId?: StringFieldUpdateOperationsInput | string
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    condicoes?: CondicaoRequisitoUncheckedUpdateManyWithoutRequisitoNestedInput
    enviosVenda?: EnvioVendaUncheckedUpdateManyWithoutRequisitoNestedInput
  }

  export type RequisitoCartelaCreateManyInput = {
    id?: string
    descricao: string
    quantidade: number
    tipoUnidade?: $Enums.TipoUnidade
    ordem: number
    regraCartelaId: string
    criadoEm?: Date | string
    atualizadoEm?: Date | string
  }

  export type RequisitoCartelaUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    quantidade?: IntFieldUpdateOperationsInput | number
    tipoUnidade?: EnumTipoUnidadeFieldUpdateOperationsInput | $Enums.TipoUnidade
    ordem?: IntFieldUpdateOperationsInput | number
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RequisitoCartelaUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    quantidade?: IntFieldUpdateOperationsInput | number
    tipoUnidade?: EnumTipoUnidadeFieldUpdateOperationsInput | $Enums.TipoUnidade
    ordem?: IntFieldUpdateOperationsInput | number
    regraCartelaId?: StringFieldUpdateOperationsInput | string
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CondicaoRequisitoCreateInput = {
    id?: string
    campo: $Enums.CampoVerificacao
    operador: $Enums.OperadorCondicao
    valor: string
    criadoEm?: Date | string
    atualizadoEm?: Date | string
    requisito: RequisitoCartelaCreateNestedOneWithoutCondicoesInput
  }

  export type CondicaoRequisitoUncheckedCreateInput = {
    id?: string
    campo: $Enums.CampoVerificacao
    operador: $Enums.OperadorCondicao
    valor: string
    requisitoId: string
    criadoEm?: Date | string
    atualizadoEm?: Date | string
  }

  export type CondicaoRequisitoUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    campo?: EnumCampoVerificacaoFieldUpdateOperationsInput | $Enums.CampoVerificacao
    operador?: EnumOperadorCondicaoFieldUpdateOperationsInput | $Enums.OperadorCondicao
    valor?: StringFieldUpdateOperationsInput | string
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    requisito?: RequisitoCartelaUpdateOneRequiredWithoutCondicoesNestedInput
  }

  export type CondicaoRequisitoUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    campo?: EnumCampoVerificacaoFieldUpdateOperationsInput | $Enums.CampoVerificacao
    operador?: EnumOperadorCondicaoFieldUpdateOperationsInput | $Enums.OperadorCondicao
    valor?: StringFieldUpdateOperationsInput | string
    requisitoId?: StringFieldUpdateOperationsInput | string
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CondicaoRequisitoCreateManyInput = {
    id?: string
    campo: $Enums.CampoVerificacao
    operador: $Enums.OperadorCondicao
    valor: string
    requisitoId: string
    criadoEm?: Date | string
    atualizadoEm?: Date | string
  }

  export type CondicaoRequisitoUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    campo?: EnumCampoVerificacaoFieldUpdateOperationsInput | $Enums.CampoVerificacao
    operador?: EnumOperadorCondicaoFieldUpdateOperationsInput | $Enums.OperadorCondicao
    valor?: StringFieldUpdateOperationsInput | string
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CondicaoRequisitoUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    campo?: EnumCampoVerificacaoFieldUpdateOperationsInput | $Enums.CampoVerificacao
    operador?: EnumOperadorCondicaoFieldUpdateOperationsInput | $Enums.OperadorCondicao
    valor?: StringFieldUpdateOperationsInput | string
    requisitoId?: StringFieldUpdateOperationsInput | string
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EnvioVendaCreateInput = {
    id?: string
    numeroPedido: string
    status?: $Enums.StatusEnvioVenda
    dataEnvio?: Date | string
    motivoRejeicao?: string | null
    infoConflito?: string | null
    numeroCartelaAtendida?: number | null
    dataValidacao?: Date | string | null
    criadoEm?: Date | string
    atualizadoEm?: Date | string
    vendedor: UsuarioCreateNestedOneWithoutEnviosVendaInput
    campanha: CampanhaCreateNestedOneWithoutEnviosVendaInput
    requisito: RequisitoCartelaCreateNestedOneWithoutEnviosVendaInput
  }

  export type EnvioVendaUncheckedCreateInput = {
    id?: string
    numeroPedido: string
    status?: $Enums.StatusEnvioVenda
    dataEnvio?: Date | string
    motivoRejeicao?: string | null
    infoConflito?: string | null
    numeroCartelaAtendida?: number | null
    dataValidacao?: Date | string | null
    vendedorId: string
    campanhaId: string
    requisitoId: string
    criadoEm?: Date | string
    atualizadoEm?: Date | string
  }

  export type EnvioVendaUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    numeroPedido?: StringFieldUpdateOperationsInput | string
    status?: EnumStatusEnvioVendaFieldUpdateOperationsInput | $Enums.StatusEnvioVenda
    dataEnvio?: DateTimeFieldUpdateOperationsInput | Date | string
    motivoRejeicao?: NullableStringFieldUpdateOperationsInput | string | null
    infoConflito?: NullableStringFieldUpdateOperationsInput | string | null
    numeroCartelaAtendida?: NullableIntFieldUpdateOperationsInput | number | null
    dataValidacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    vendedor?: UsuarioUpdateOneRequiredWithoutEnviosVendaNestedInput
    campanha?: CampanhaUpdateOneRequiredWithoutEnviosVendaNestedInput
    requisito?: RequisitoCartelaUpdateOneRequiredWithoutEnviosVendaNestedInput
  }

  export type EnvioVendaUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    numeroPedido?: StringFieldUpdateOperationsInput | string
    status?: EnumStatusEnvioVendaFieldUpdateOperationsInput | $Enums.StatusEnvioVenda
    dataEnvio?: DateTimeFieldUpdateOperationsInput | Date | string
    motivoRejeicao?: NullableStringFieldUpdateOperationsInput | string | null
    infoConflito?: NullableStringFieldUpdateOperationsInput | string | null
    numeroCartelaAtendida?: NullableIntFieldUpdateOperationsInput | number | null
    dataValidacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    vendedorId?: StringFieldUpdateOperationsInput | string
    campanhaId?: StringFieldUpdateOperationsInput | string
    requisitoId?: StringFieldUpdateOperationsInput | string
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EnvioVendaCreateManyInput = {
    id?: string
    numeroPedido: string
    status?: $Enums.StatusEnvioVenda
    dataEnvio?: Date | string
    motivoRejeicao?: string | null
    infoConflito?: string | null
    numeroCartelaAtendida?: number | null
    dataValidacao?: Date | string | null
    vendedorId: string
    campanhaId: string
    requisitoId: string
    criadoEm?: Date | string
    atualizadoEm?: Date | string
  }

  export type EnvioVendaUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    numeroPedido?: StringFieldUpdateOperationsInput | string
    status?: EnumStatusEnvioVendaFieldUpdateOperationsInput | $Enums.StatusEnvioVenda
    dataEnvio?: DateTimeFieldUpdateOperationsInput | Date | string
    motivoRejeicao?: NullableStringFieldUpdateOperationsInput | string | null
    infoConflito?: NullableStringFieldUpdateOperationsInput | string | null
    numeroCartelaAtendida?: NullableIntFieldUpdateOperationsInput | number | null
    dataValidacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EnvioVendaUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    numeroPedido?: StringFieldUpdateOperationsInput | string
    status?: EnumStatusEnvioVendaFieldUpdateOperationsInput | $Enums.StatusEnvioVenda
    dataEnvio?: DateTimeFieldUpdateOperationsInput | Date | string
    motivoRejeicao?: NullableStringFieldUpdateOperationsInput | string | null
    infoConflito?: NullableStringFieldUpdateOperationsInput | string | null
    numeroCartelaAtendida?: NullableIntFieldUpdateOperationsInput | number | null
    dataValidacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    vendedorId?: StringFieldUpdateOperationsInput | string
    campanhaId?: StringFieldUpdateOperationsInput | string
    requisitoId?: StringFieldUpdateOperationsInput | string
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PremioCreateInput = {
    id?: string
    nome: string
    descricao: string
    imageUrl?: string | null
    custoMoedinhas: number
    estoque?: number
    ativo?: boolean
    criadoEm?: Date | string
    atualizadoEm?: Date | string
    resgates?: ResgatePremioCreateNestedManyWithoutPremioInput
  }

  export type PremioUncheckedCreateInput = {
    id?: string
    nome: string
    descricao: string
    imageUrl?: string | null
    custoMoedinhas: number
    estoque?: number
    ativo?: boolean
    criadoEm?: Date | string
    atualizadoEm?: Date | string
    resgates?: ResgatePremioUncheckedCreateNestedManyWithoutPremioInput
  }

  export type PremioUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    custoMoedinhas?: IntFieldUpdateOperationsInput | number
    estoque?: IntFieldUpdateOperationsInput | number
    ativo?: BoolFieldUpdateOperationsInput | boolean
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    resgates?: ResgatePremioUpdateManyWithoutPremioNestedInput
  }

  export type PremioUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    custoMoedinhas?: IntFieldUpdateOperationsInput | number
    estoque?: IntFieldUpdateOperationsInput | number
    ativo?: BoolFieldUpdateOperationsInput | boolean
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    resgates?: ResgatePremioUncheckedUpdateManyWithoutPremioNestedInput
  }

  export type PremioCreateManyInput = {
    id?: string
    nome: string
    descricao: string
    imageUrl?: string | null
    custoMoedinhas: number
    estoque?: number
    ativo?: boolean
    criadoEm?: Date | string
    atualizadoEm?: Date | string
  }

  export type PremioUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    custoMoedinhas?: IntFieldUpdateOperationsInput | number
    estoque?: IntFieldUpdateOperationsInput | number
    ativo?: BoolFieldUpdateOperationsInput | boolean
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PremioUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    custoMoedinhas?: IntFieldUpdateOperationsInput | number
    estoque?: IntFieldUpdateOperationsInput | number
    ativo?: BoolFieldUpdateOperationsInput | boolean
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ResgatePremioCreateInput = {
    id?: string
    dataSolicitacao?: Date | string
    status?: $Enums.StatusResgate
    dataAtualizacao?: Date | string
    motivoCancelamento?: string | null
    criadoEm?: Date | string
    atualizadoEm?: Date | string
    vendedor: UsuarioCreateNestedOneWithoutResgatesPremiosInput
    premio: PremioCreateNestedOneWithoutResgatesInput
  }

  export type ResgatePremioUncheckedCreateInput = {
    id?: string
    dataSolicitacao?: Date | string
    status?: $Enums.StatusResgate
    dataAtualizacao?: Date | string
    motivoCancelamento?: string | null
    vendedorId: string
    premioId: string
    criadoEm?: Date | string
    atualizadoEm?: Date | string
  }

  export type ResgatePremioUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    dataSolicitacao?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumStatusResgateFieldUpdateOperationsInput | $Enums.StatusResgate
    dataAtualizacao?: DateTimeFieldUpdateOperationsInput | Date | string
    motivoCancelamento?: NullableStringFieldUpdateOperationsInput | string | null
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    vendedor?: UsuarioUpdateOneRequiredWithoutResgatesPremiosNestedInput
    premio?: PremioUpdateOneRequiredWithoutResgatesNestedInput
  }

  export type ResgatePremioUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    dataSolicitacao?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumStatusResgateFieldUpdateOperationsInput | $Enums.StatusResgate
    dataAtualizacao?: DateTimeFieldUpdateOperationsInput | Date | string
    motivoCancelamento?: NullableStringFieldUpdateOperationsInput | string | null
    vendedorId?: StringFieldUpdateOperationsInput | string
    premioId?: StringFieldUpdateOperationsInput | string
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ResgatePremioCreateManyInput = {
    id?: string
    dataSolicitacao?: Date | string
    status?: $Enums.StatusResgate
    dataAtualizacao?: Date | string
    motivoCancelamento?: string | null
    vendedorId: string
    premioId: string
    criadoEm?: Date | string
    atualizadoEm?: Date | string
  }

  export type ResgatePremioUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    dataSolicitacao?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumStatusResgateFieldUpdateOperationsInput | $Enums.StatusResgate
    dataAtualizacao?: DateTimeFieldUpdateOperationsInput | Date | string
    motivoCancelamento?: NullableStringFieldUpdateOperationsInput | string | null
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ResgatePremioUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    dataSolicitacao?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumStatusResgateFieldUpdateOperationsInput | $Enums.StatusResgate
    dataAtualizacao?: DateTimeFieldUpdateOperationsInput | Date | string
    motivoCancelamento?: NullableStringFieldUpdateOperationsInput | string | null
    vendedorId?: StringFieldUpdateOperationsInput | string
    premioId?: StringFieldUpdateOperationsInput | string
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RelatorioFinanceiroCreateInput = {
    id?: string
    valor: Decimal | DecimalJsLike | number | string
    status?: $Enums.StatusPagamento
    tipo: string
    dataGerado?: Date | string
    dataPagamento?: Date | string | null
    observacoes?: string | null
    criadoEm?: Date | string
    atualizadoEm?: Date | string
    usuario: UsuarioCreateNestedOneWithoutRelatoriosFinanceirosInput
    campanha: CampanhaCreateNestedOneWithoutRelatoriosFinanceirosInput
  }

  export type RelatorioFinanceiroUncheckedCreateInput = {
    id?: string
    valor: Decimal | DecimalJsLike | number | string
    status?: $Enums.StatusPagamento
    tipo: string
    dataGerado?: Date | string
    dataPagamento?: Date | string | null
    observacoes?: string | null
    usuarioId: string
    campanhaId: string
    criadoEm?: Date | string
    atualizadoEm?: Date | string
  }

  export type RelatorioFinanceiroUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    valor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: EnumStatusPagamentoFieldUpdateOperationsInput | $Enums.StatusPagamento
    tipo?: StringFieldUpdateOperationsInput | string
    dataGerado?: DateTimeFieldUpdateOperationsInput | Date | string
    dataPagamento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    observacoes?: NullableStringFieldUpdateOperationsInput | string | null
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    usuario?: UsuarioUpdateOneRequiredWithoutRelatoriosFinanceirosNestedInput
    campanha?: CampanhaUpdateOneRequiredWithoutRelatoriosFinanceirosNestedInput
  }

  export type RelatorioFinanceiroUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    valor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: EnumStatusPagamentoFieldUpdateOperationsInput | $Enums.StatusPagamento
    tipo?: StringFieldUpdateOperationsInput | string
    dataGerado?: DateTimeFieldUpdateOperationsInput | Date | string
    dataPagamento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    observacoes?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioId?: StringFieldUpdateOperationsInput | string
    campanhaId?: StringFieldUpdateOperationsInput | string
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RelatorioFinanceiroCreateManyInput = {
    id?: string
    valor: Decimal | DecimalJsLike | number | string
    status?: $Enums.StatusPagamento
    tipo: string
    dataGerado?: Date | string
    dataPagamento?: Date | string | null
    observacoes?: string | null
    usuarioId: string
    campanhaId: string
    criadoEm?: Date | string
    atualizadoEm?: Date | string
  }

  export type RelatorioFinanceiroUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    valor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: EnumStatusPagamentoFieldUpdateOperationsInput | $Enums.StatusPagamento
    tipo?: StringFieldUpdateOperationsInput | string
    dataGerado?: DateTimeFieldUpdateOperationsInput | Date | string
    dataPagamento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    observacoes?: NullableStringFieldUpdateOperationsInput | string | null
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RelatorioFinanceiroUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    valor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: EnumStatusPagamentoFieldUpdateOperationsInput | $Enums.StatusPagamento
    tipo?: StringFieldUpdateOperationsInput | string
    dataGerado?: DateTimeFieldUpdateOperationsInput | Date | string
    dataPagamento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    observacoes?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioId?: StringFieldUpdateOperationsInput | string
    campanhaId?: StringFieldUpdateOperationsInput | string
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type NotificacaoCreateInput = {
    id?: string
    mensagem: string
    lida?: boolean
    linkUrl?: string | null
    dataCriacao?: Date | string
    criadoEm?: Date | string
    atualizadoEm?: Date | string
    usuario: UsuarioCreateNestedOneWithoutNotificacoesInput
  }

  export type NotificacaoUncheckedCreateInput = {
    id?: string
    mensagem: string
    lida?: boolean
    linkUrl?: string | null
    dataCriacao?: Date | string
    usuarioId: string
    criadoEm?: Date | string
    atualizadoEm?: Date | string
  }

  export type NotificacaoUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    mensagem?: StringFieldUpdateOperationsInput | string
    lida?: BoolFieldUpdateOperationsInput | boolean
    linkUrl?: NullableStringFieldUpdateOperationsInput | string | null
    dataCriacao?: DateTimeFieldUpdateOperationsInput | Date | string
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    usuario?: UsuarioUpdateOneRequiredWithoutNotificacoesNestedInput
  }

  export type NotificacaoUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    mensagem?: StringFieldUpdateOperationsInput | string
    lida?: BoolFieldUpdateOperationsInput | boolean
    linkUrl?: NullableStringFieldUpdateOperationsInput | string | null
    dataCriacao?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioId?: StringFieldUpdateOperationsInput | string
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type NotificacaoCreateManyInput = {
    id?: string
    mensagem: string
    lida?: boolean
    linkUrl?: string | null
    dataCriacao?: Date | string
    usuarioId: string
    criadoEm?: Date | string
    atualizadoEm?: Date | string
  }

  export type NotificacaoUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    mensagem?: StringFieldUpdateOperationsInput | string
    lida?: BoolFieldUpdateOperationsInput | boolean
    linkUrl?: NullableStringFieldUpdateOperationsInput | string | null
    dataCriacao?: DateTimeFieldUpdateOperationsInput | Date | string
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type NotificacaoUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    mensagem?: StringFieldUpdateOperationsInput | string
    lida?: BoolFieldUpdateOperationsInput | boolean
    linkUrl?: NullableStringFieldUpdateOperationsInput | string | null
    dataCriacao?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioId?: StringFieldUpdateOperationsInput | string
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ConfiguracaoGlobalCreateInput = {
    id?: string
    chave: string
    valor: string
    descricao: string
    criadoEm?: Date | string
    atualizadoEm?: Date | string
  }

  export type ConfiguracaoGlobalUncheckedCreateInput = {
    id?: string
    chave: string
    valor: string
    descricao: string
    criadoEm?: Date | string
    atualizadoEm?: Date | string
  }

  export type ConfiguracaoGlobalUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    chave?: StringFieldUpdateOperationsInput | string
    valor?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ConfiguracaoGlobalUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    chave?: StringFieldUpdateOperationsInput | string
    valor?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ConfiguracaoGlobalCreateManyInput = {
    id?: string
    chave: string
    valor: string
    descricao: string
    criadoEm?: Date | string
    atualizadoEm?: Date | string
  }

  export type ConfiguracaoGlobalUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    chave?: StringFieldUpdateOperationsInput | string
    valor?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ConfiguracaoGlobalUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    chave?: StringFieldUpdateOperationsInput | string
    valor?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CartelaConcluidaCreateInput = {
    id?: string
    dataConclusao?: Date | string
    numeroCartela: number
    vendedor: UsuarioCreateNestedOneWithoutCartelasConcluidasInput
    campanha: CampanhaCreateNestedOneWithoutCartelasConcluidasInput
  }

  export type CartelaConcluidaUncheckedCreateInput = {
    id?: string
    dataConclusao?: Date | string
    numeroCartela: number
    vendedorId: string
    campanhaId: string
  }

  export type CartelaConcluidaUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    dataConclusao?: DateTimeFieldUpdateOperationsInput | Date | string
    numeroCartela?: IntFieldUpdateOperationsInput | number
    vendedor?: UsuarioUpdateOneRequiredWithoutCartelasConcluidasNestedInput
    campanha?: CampanhaUpdateOneRequiredWithoutCartelasConcluidasNestedInput
  }

  export type CartelaConcluidaUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    dataConclusao?: DateTimeFieldUpdateOperationsInput | Date | string
    numeroCartela?: IntFieldUpdateOperationsInput | number
    vendedorId?: StringFieldUpdateOperationsInput | string
    campanhaId?: StringFieldUpdateOperationsInput | string
  }

  export type CartelaConcluidaCreateManyInput = {
    id?: string
    dataConclusao?: Date | string
    numeroCartela: number
    vendedorId: string
    campanhaId: string
  }

  export type CartelaConcluidaUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    dataConclusao?: DateTimeFieldUpdateOperationsInput | Date | string
    numeroCartela?: IntFieldUpdateOperationsInput | number
  }

  export type CartelaConcluidaUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    dataConclusao?: DateTimeFieldUpdateOperationsInput | Date | string
    numeroCartela?: IntFieldUpdateOperationsInput | number
    vendedorId?: StringFieldUpdateOperationsInput | string
    campanhaId?: StringFieldUpdateOperationsInput | string
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type OpticaNullableScalarRelationFilter = {
    is?: OpticaWhereInput | null
    isNot?: OpticaWhereInput | null
  }

  export type OpticaListRelationFilter = {
    every?: OpticaWhereInput
    some?: OpticaWhereInput
    none?: OpticaWhereInput
  }

  export type UsuarioListRelationFilter = {
    every?: UsuarioWhereInput
    some?: UsuarioWhereInput
    none?: UsuarioWhereInput
  }

  export type CampanhaListRelationFilter = {
    every?: CampanhaWhereInput
    some?: CampanhaWhereInput
    none?: CampanhaWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type OpticaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UsuarioOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CampanhaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type OpticaCountOrderByAggregateInput = {
    id?: SortOrder
    cnpj?: SortOrder
    nome?: SortOrder
    endereco?: SortOrder
    cidade?: SortOrder
    estado?: SortOrder
    telefone?: SortOrder
    email?: SortOrder
    ativa?: SortOrder
    ehMatriz?: SortOrder
    matrizId?: SortOrder
    criadoEm?: SortOrder
    atualizadoEm?: SortOrder
  }

  export type OpticaMaxOrderByAggregateInput = {
    id?: SortOrder
    cnpj?: SortOrder
    nome?: SortOrder
    endereco?: SortOrder
    cidade?: SortOrder
    estado?: SortOrder
    telefone?: SortOrder
    email?: SortOrder
    ativa?: SortOrder
    ehMatriz?: SortOrder
    matrizId?: SortOrder
    criadoEm?: SortOrder
    atualizadoEm?: SortOrder
  }

  export type OpticaMinOrderByAggregateInput = {
    id?: SortOrder
    cnpj?: SortOrder
    nome?: SortOrder
    endereco?: SortOrder
    cidade?: SortOrder
    estado?: SortOrder
    telefone?: SortOrder
    email?: SortOrder
    ativa?: SortOrder
    ehMatriz?: SortOrder
    matrizId?: SortOrder
    criadoEm?: SortOrder
    atualizadoEm?: SortOrder
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type EnumPapelUsuarioFilter<$PrismaModel = never> = {
    equals?: $Enums.PapelUsuario | EnumPapelUsuarioFieldRefInput<$PrismaModel>
    in?: $Enums.PapelUsuario[] | ListEnumPapelUsuarioFieldRefInput<$PrismaModel>
    notIn?: $Enums.PapelUsuario[] | ListEnumPapelUsuarioFieldRefInput<$PrismaModel>
    not?: NestedEnumPapelUsuarioFilter<$PrismaModel> | $Enums.PapelUsuario
  }

  export type EnumStatusUsuarioFilter<$PrismaModel = never> = {
    equals?: $Enums.StatusUsuario | EnumStatusUsuarioFieldRefInput<$PrismaModel>
    in?: $Enums.StatusUsuario[] | ListEnumStatusUsuarioFieldRefInput<$PrismaModel>
    notIn?: $Enums.StatusUsuario[] | ListEnumStatusUsuarioFieldRefInput<$PrismaModel>
    not?: NestedEnumStatusUsuarioFilter<$PrismaModel> | $Enums.StatusUsuario
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type EnumNivelVendedorFilter<$PrismaModel = never> = {
    equals?: $Enums.NivelVendedor | EnumNivelVendedorFieldRefInput<$PrismaModel>
    in?: $Enums.NivelVendedor[] | ListEnumNivelVendedorFieldRefInput<$PrismaModel>
    notIn?: $Enums.NivelVendedor[] | ListEnumNivelVendedorFieldRefInput<$PrismaModel>
    not?: NestedEnumNivelVendedorFilter<$PrismaModel> | $Enums.NivelVendedor
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }
  export type JsonNullableFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type UsuarioNullableScalarRelationFilter = {
    is?: UsuarioWhereInput | null
    isNot?: UsuarioWhereInput | null
  }

  export type EnvioVendaListRelationFilter = {
    every?: EnvioVendaWhereInput
    some?: EnvioVendaWhereInput
    none?: EnvioVendaWhereInput
  }

  export type ResgatePremioListRelationFilter = {
    every?: ResgatePremioWhereInput
    some?: ResgatePremioWhereInput
    none?: ResgatePremioWhereInput
  }

  export type RelatorioFinanceiroListRelationFilter = {
    every?: RelatorioFinanceiroWhereInput
    some?: RelatorioFinanceiroWhereInput
    none?: RelatorioFinanceiroWhereInput
  }

  export type NotificacaoListRelationFilter = {
    every?: NotificacaoWhereInput
    some?: NotificacaoWhereInput
    none?: NotificacaoWhereInput
  }

  export type CartelaConcluidaListRelationFilter = {
    every?: CartelaConcluidaWhereInput
    some?: CartelaConcluidaWhereInput
    none?: CartelaConcluidaWhereInput
  }

  export type EnvioVendaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ResgatePremioOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type RelatorioFinanceiroOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type NotificacaoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CartelaConcluidaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UsuarioCountOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    cpf?: SortOrder
    nome?: SortOrder
    whatsapp?: SortOrder
    senhaHash?: SortOrder
    avatarUrl?: SortOrder
    papel?: SortOrder
    status?: SortOrder
    saldoMoedinhas?: SortOrder
    rankingMoedinhas?: SortOrder
    nivel?: SortOrder
    tokenResetarSenha?: SortOrder
    tokenResetarSenhaExpira?: SortOrder
    mapeamentoPlanilhaSalvo?: SortOrder
    opticaId?: SortOrder
    gerenteId?: SortOrder
    criadoEm?: SortOrder
    atualizadoEm?: SortOrder
  }

  export type UsuarioAvgOrderByAggregateInput = {
    saldoMoedinhas?: SortOrder
    rankingMoedinhas?: SortOrder
  }

  export type UsuarioMaxOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    cpf?: SortOrder
    nome?: SortOrder
    whatsapp?: SortOrder
    senhaHash?: SortOrder
    avatarUrl?: SortOrder
    papel?: SortOrder
    status?: SortOrder
    saldoMoedinhas?: SortOrder
    rankingMoedinhas?: SortOrder
    nivel?: SortOrder
    tokenResetarSenha?: SortOrder
    tokenResetarSenhaExpira?: SortOrder
    opticaId?: SortOrder
    gerenteId?: SortOrder
    criadoEm?: SortOrder
    atualizadoEm?: SortOrder
  }

  export type UsuarioMinOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    cpf?: SortOrder
    nome?: SortOrder
    whatsapp?: SortOrder
    senhaHash?: SortOrder
    avatarUrl?: SortOrder
    papel?: SortOrder
    status?: SortOrder
    saldoMoedinhas?: SortOrder
    rankingMoedinhas?: SortOrder
    nivel?: SortOrder
    tokenResetarSenha?: SortOrder
    tokenResetarSenhaExpira?: SortOrder
    opticaId?: SortOrder
    gerenteId?: SortOrder
    criadoEm?: SortOrder
    atualizadoEm?: SortOrder
  }

  export type UsuarioSumOrderByAggregateInput = {
    saldoMoedinhas?: SortOrder
    rankingMoedinhas?: SortOrder
  }

  export type EnumPapelUsuarioWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.PapelUsuario | EnumPapelUsuarioFieldRefInput<$PrismaModel>
    in?: $Enums.PapelUsuario[] | ListEnumPapelUsuarioFieldRefInput<$PrismaModel>
    notIn?: $Enums.PapelUsuario[] | ListEnumPapelUsuarioFieldRefInput<$PrismaModel>
    not?: NestedEnumPapelUsuarioWithAggregatesFilter<$PrismaModel> | $Enums.PapelUsuario
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumPapelUsuarioFilter<$PrismaModel>
    _max?: NestedEnumPapelUsuarioFilter<$PrismaModel>
  }

  export type EnumStatusUsuarioWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.StatusUsuario | EnumStatusUsuarioFieldRefInput<$PrismaModel>
    in?: $Enums.StatusUsuario[] | ListEnumStatusUsuarioFieldRefInput<$PrismaModel>
    notIn?: $Enums.StatusUsuario[] | ListEnumStatusUsuarioFieldRefInput<$PrismaModel>
    not?: NestedEnumStatusUsuarioWithAggregatesFilter<$PrismaModel> | $Enums.StatusUsuario
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumStatusUsuarioFilter<$PrismaModel>
    _max?: NestedEnumStatusUsuarioFilter<$PrismaModel>
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type EnumNivelVendedorWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.NivelVendedor | EnumNivelVendedorFieldRefInput<$PrismaModel>
    in?: $Enums.NivelVendedor[] | ListEnumNivelVendedorFieldRefInput<$PrismaModel>
    notIn?: $Enums.NivelVendedor[] | ListEnumNivelVendedorFieldRefInput<$PrismaModel>
    not?: NestedEnumNivelVendedorWithAggregatesFilter<$PrismaModel> | $Enums.NivelVendedor
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumNivelVendedorFilter<$PrismaModel>
    _max?: NestedEnumNivelVendedorFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }
  export type JsonNullableWithAggregatesFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedJsonNullableFilter<$PrismaModel>
    _max?: NestedJsonNullableFilter<$PrismaModel>
  }

  export type DecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type RegraCartelaListRelationFilter = {
    every?: RegraCartelaWhereInput
    some?: RegraCartelaWhereInput
    none?: RegraCartelaWhereInput
  }

  export type RegraCartelaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CampanhaCountOrderByAggregateInput = {
    id?: SortOrder
    titulo?: SortOrder
    descricao?: SortOrder
    dataInicio?: SortOrder
    dataFim?: SortOrder
    moedinhasPorCartela?: SortOrder
    pontosReaisPorCartela?: SortOrder
    status?: SortOrder
    percentualGerente?: SortOrder
    paraTodasOticas?: SortOrder
    criadoEm?: SortOrder
    atualizadoEm?: SortOrder
  }

  export type CampanhaAvgOrderByAggregateInput = {
    moedinhasPorCartela?: SortOrder
    pontosReaisPorCartela?: SortOrder
    percentualGerente?: SortOrder
  }

  export type CampanhaMaxOrderByAggregateInput = {
    id?: SortOrder
    titulo?: SortOrder
    descricao?: SortOrder
    dataInicio?: SortOrder
    dataFim?: SortOrder
    moedinhasPorCartela?: SortOrder
    pontosReaisPorCartela?: SortOrder
    status?: SortOrder
    percentualGerente?: SortOrder
    paraTodasOticas?: SortOrder
    criadoEm?: SortOrder
    atualizadoEm?: SortOrder
  }

  export type CampanhaMinOrderByAggregateInput = {
    id?: SortOrder
    titulo?: SortOrder
    descricao?: SortOrder
    dataInicio?: SortOrder
    dataFim?: SortOrder
    moedinhasPorCartela?: SortOrder
    pontosReaisPorCartela?: SortOrder
    status?: SortOrder
    percentualGerente?: SortOrder
    paraTodasOticas?: SortOrder
    criadoEm?: SortOrder
    atualizadoEm?: SortOrder
  }

  export type CampanhaSumOrderByAggregateInput = {
    moedinhasPorCartela?: SortOrder
    pontosReaisPorCartela?: SortOrder
    percentualGerente?: SortOrder
  }

  export type DecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type CampanhaScalarRelationFilter = {
    is?: CampanhaWhereInput
    isNot?: CampanhaWhereInput
  }

  export type RequisitoCartelaListRelationFilter = {
    every?: RequisitoCartelaWhereInput
    some?: RequisitoCartelaWhereInput
    none?: RequisitoCartelaWhereInput
  }

  export type RequisitoCartelaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type RegraCartelaCampanhaIdNumeroCartelaCompoundUniqueInput = {
    campanhaId: string
    numeroCartela: number
  }

  export type RegraCartelaCountOrderByAggregateInput = {
    id?: SortOrder
    numeroCartela?: SortOrder
    descricao?: SortOrder
    campanhaId?: SortOrder
    criadoEm?: SortOrder
    atualizadoEm?: SortOrder
  }

  export type RegraCartelaAvgOrderByAggregateInput = {
    numeroCartela?: SortOrder
  }

  export type RegraCartelaMaxOrderByAggregateInput = {
    id?: SortOrder
    numeroCartela?: SortOrder
    descricao?: SortOrder
    campanhaId?: SortOrder
    criadoEm?: SortOrder
    atualizadoEm?: SortOrder
  }

  export type RegraCartelaMinOrderByAggregateInput = {
    id?: SortOrder
    numeroCartela?: SortOrder
    descricao?: SortOrder
    campanhaId?: SortOrder
    criadoEm?: SortOrder
    atualizadoEm?: SortOrder
  }

  export type RegraCartelaSumOrderByAggregateInput = {
    numeroCartela?: SortOrder
  }

  export type EnumTipoUnidadeFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoUnidade | EnumTipoUnidadeFieldRefInput<$PrismaModel>
    in?: $Enums.TipoUnidade[] | ListEnumTipoUnidadeFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoUnidade[] | ListEnumTipoUnidadeFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoUnidadeFilter<$PrismaModel> | $Enums.TipoUnidade
  }

  export type RegraCartelaScalarRelationFilter = {
    is?: RegraCartelaWhereInput
    isNot?: RegraCartelaWhereInput
  }

  export type CondicaoRequisitoListRelationFilter = {
    every?: CondicaoRequisitoWhereInput
    some?: CondicaoRequisitoWhereInput
    none?: CondicaoRequisitoWhereInput
  }

  export type CondicaoRequisitoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type RequisitoCartelaCountOrderByAggregateInput = {
    id?: SortOrder
    descricao?: SortOrder
    quantidade?: SortOrder
    tipoUnidade?: SortOrder
    ordem?: SortOrder
    regraCartelaId?: SortOrder
    criadoEm?: SortOrder
    atualizadoEm?: SortOrder
  }

  export type RequisitoCartelaAvgOrderByAggregateInput = {
    quantidade?: SortOrder
    ordem?: SortOrder
  }

  export type RequisitoCartelaMaxOrderByAggregateInput = {
    id?: SortOrder
    descricao?: SortOrder
    quantidade?: SortOrder
    tipoUnidade?: SortOrder
    ordem?: SortOrder
    regraCartelaId?: SortOrder
    criadoEm?: SortOrder
    atualizadoEm?: SortOrder
  }

  export type RequisitoCartelaMinOrderByAggregateInput = {
    id?: SortOrder
    descricao?: SortOrder
    quantidade?: SortOrder
    tipoUnidade?: SortOrder
    ordem?: SortOrder
    regraCartelaId?: SortOrder
    criadoEm?: SortOrder
    atualizadoEm?: SortOrder
  }

  export type RequisitoCartelaSumOrderByAggregateInput = {
    quantidade?: SortOrder
    ordem?: SortOrder
  }

  export type EnumTipoUnidadeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoUnidade | EnumTipoUnidadeFieldRefInput<$PrismaModel>
    in?: $Enums.TipoUnidade[] | ListEnumTipoUnidadeFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoUnidade[] | ListEnumTipoUnidadeFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoUnidadeWithAggregatesFilter<$PrismaModel> | $Enums.TipoUnidade
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTipoUnidadeFilter<$PrismaModel>
    _max?: NestedEnumTipoUnidadeFilter<$PrismaModel>
  }

  export type EnumCampoVerificacaoFilter<$PrismaModel = never> = {
    equals?: $Enums.CampoVerificacao | EnumCampoVerificacaoFieldRefInput<$PrismaModel>
    in?: $Enums.CampoVerificacao[] | ListEnumCampoVerificacaoFieldRefInput<$PrismaModel>
    notIn?: $Enums.CampoVerificacao[] | ListEnumCampoVerificacaoFieldRefInput<$PrismaModel>
    not?: NestedEnumCampoVerificacaoFilter<$PrismaModel> | $Enums.CampoVerificacao
  }

  export type EnumOperadorCondicaoFilter<$PrismaModel = never> = {
    equals?: $Enums.OperadorCondicao | EnumOperadorCondicaoFieldRefInput<$PrismaModel>
    in?: $Enums.OperadorCondicao[] | ListEnumOperadorCondicaoFieldRefInput<$PrismaModel>
    notIn?: $Enums.OperadorCondicao[] | ListEnumOperadorCondicaoFieldRefInput<$PrismaModel>
    not?: NestedEnumOperadorCondicaoFilter<$PrismaModel> | $Enums.OperadorCondicao
  }

  export type RequisitoCartelaScalarRelationFilter = {
    is?: RequisitoCartelaWhereInput
    isNot?: RequisitoCartelaWhereInput
  }

  export type CondicaoRequisitoCountOrderByAggregateInput = {
    id?: SortOrder
    campo?: SortOrder
    operador?: SortOrder
    valor?: SortOrder
    requisitoId?: SortOrder
    criadoEm?: SortOrder
    atualizadoEm?: SortOrder
  }

  export type CondicaoRequisitoMaxOrderByAggregateInput = {
    id?: SortOrder
    campo?: SortOrder
    operador?: SortOrder
    valor?: SortOrder
    requisitoId?: SortOrder
    criadoEm?: SortOrder
    atualizadoEm?: SortOrder
  }

  export type CondicaoRequisitoMinOrderByAggregateInput = {
    id?: SortOrder
    campo?: SortOrder
    operador?: SortOrder
    valor?: SortOrder
    requisitoId?: SortOrder
    criadoEm?: SortOrder
    atualizadoEm?: SortOrder
  }

  export type EnumCampoVerificacaoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.CampoVerificacao | EnumCampoVerificacaoFieldRefInput<$PrismaModel>
    in?: $Enums.CampoVerificacao[] | ListEnumCampoVerificacaoFieldRefInput<$PrismaModel>
    notIn?: $Enums.CampoVerificacao[] | ListEnumCampoVerificacaoFieldRefInput<$PrismaModel>
    not?: NestedEnumCampoVerificacaoWithAggregatesFilter<$PrismaModel> | $Enums.CampoVerificacao
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumCampoVerificacaoFilter<$PrismaModel>
    _max?: NestedEnumCampoVerificacaoFilter<$PrismaModel>
  }

  export type EnumOperadorCondicaoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.OperadorCondicao | EnumOperadorCondicaoFieldRefInput<$PrismaModel>
    in?: $Enums.OperadorCondicao[] | ListEnumOperadorCondicaoFieldRefInput<$PrismaModel>
    notIn?: $Enums.OperadorCondicao[] | ListEnumOperadorCondicaoFieldRefInput<$PrismaModel>
    not?: NestedEnumOperadorCondicaoWithAggregatesFilter<$PrismaModel> | $Enums.OperadorCondicao
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumOperadorCondicaoFilter<$PrismaModel>
    _max?: NestedEnumOperadorCondicaoFilter<$PrismaModel>
  }

  export type EnumStatusEnvioVendaFilter<$PrismaModel = never> = {
    equals?: $Enums.StatusEnvioVenda | EnumStatusEnvioVendaFieldRefInput<$PrismaModel>
    in?: $Enums.StatusEnvioVenda[] | ListEnumStatusEnvioVendaFieldRefInput<$PrismaModel>
    notIn?: $Enums.StatusEnvioVenda[] | ListEnumStatusEnvioVendaFieldRefInput<$PrismaModel>
    not?: NestedEnumStatusEnvioVendaFilter<$PrismaModel> | $Enums.StatusEnvioVenda
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type UsuarioScalarRelationFilter = {
    is?: UsuarioWhereInput
    isNot?: UsuarioWhereInput
  }

  export type EnvioVendaCountOrderByAggregateInput = {
    id?: SortOrder
    numeroPedido?: SortOrder
    status?: SortOrder
    dataEnvio?: SortOrder
    motivoRejeicao?: SortOrder
    infoConflito?: SortOrder
    numeroCartelaAtendida?: SortOrder
    dataValidacao?: SortOrder
    vendedorId?: SortOrder
    campanhaId?: SortOrder
    requisitoId?: SortOrder
    criadoEm?: SortOrder
    atualizadoEm?: SortOrder
  }

  export type EnvioVendaAvgOrderByAggregateInput = {
    numeroCartelaAtendida?: SortOrder
  }

  export type EnvioVendaMaxOrderByAggregateInput = {
    id?: SortOrder
    numeroPedido?: SortOrder
    status?: SortOrder
    dataEnvio?: SortOrder
    motivoRejeicao?: SortOrder
    infoConflito?: SortOrder
    numeroCartelaAtendida?: SortOrder
    dataValidacao?: SortOrder
    vendedorId?: SortOrder
    campanhaId?: SortOrder
    requisitoId?: SortOrder
    criadoEm?: SortOrder
    atualizadoEm?: SortOrder
  }

  export type EnvioVendaMinOrderByAggregateInput = {
    id?: SortOrder
    numeroPedido?: SortOrder
    status?: SortOrder
    dataEnvio?: SortOrder
    motivoRejeicao?: SortOrder
    infoConflito?: SortOrder
    numeroCartelaAtendida?: SortOrder
    dataValidacao?: SortOrder
    vendedorId?: SortOrder
    campanhaId?: SortOrder
    requisitoId?: SortOrder
    criadoEm?: SortOrder
    atualizadoEm?: SortOrder
  }

  export type EnvioVendaSumOrderByAggregateInput = {
    numeroCartelaAtendida?: SortOrder
  }

  export type EnumStatusEnvioVendaWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.StatusEnvioVenda | EnumStatusEnvioVendaFieldRefInput<$PrismaModel>
    in?: $Enums.StatusEnvioVenda[] | ListEnumStatusEnvioVendaFieldRefInput<$PrismaModel>
    notIn?: $Enums.StatusEnvioVenda[] | ListEnumStatusEnvioVendaFieldRefInput<$PrismaModel>
    not?: NestedEnumStatusEnvioVendaWithAggregatesFilter<$PrismaModel> | $Enums.StatusEnvioVenda
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumStatusEnvioVendaFilter<$PrismaModel>
    _max?: NestedEnumStatusEnvioVendaFilter<$PrismaModel>
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type PremioCountOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    descricao?: SortOrder
    imageUrl?: SortOrder
    custoMoedinhas?: SortOrder
    estoque?: SortOrder
    ativo?: SortOrder
    criadoEm?: SortOrder
    atualizadoEm?: SortOrder
  }

  export type PremioAvgOrderByAggregateInput = {
    custoMoedinhas?: SortOrder
    estoque?: SortOrder
  }

  export type PremioMaxOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    descricao?: SortOrder
    imageUrl?: SortOrder
    custoMoedinhas?: SortOrder
    estoque?: SortOrder
    ativo?: SortOrder
    criadoEm?: SortOrder
    atualizadoEm?: SortOrder
  }

  export type PremioMinOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    descricao?: SortOrder
    imageUrl?: SortOrder
    custoMoedinhas?: SortOrder
    estoque?: SortOrder
    ativo?: SortOrder
    criadoEm?: SortOrder
    atualizadoEm?: SortOrder
  }

  export type PremioSumOrderByAggregateInput = {
    custoMoedinhas?: SortOrder
    estoque?: SortOrder
  }

  export type EnumStatusResgateFilter<$PrismaModel = never> = {
    equals?: $Enums.StatusResgate | EnumStatusResgateFieldRefInput<$PrismaModel>
    in?: $Enums.StatusResgate[] | ListEnumStatusResgateFieldRefInput<$PrismaModel>
    notIn?: $Enums.StatusResgate[] | ListEnumStatusResgateFieldRefInput<$PrismaModel>
    not?: NestedEnumStatusResgateFilter<$PrismaModel> | $Enums.StatusResgate
  }

  export type PremioScalarRelationFilter = {
    is?: PremioWhereInput
    isNot?: PremioWhereInput
  }

  export type ResgatePremioCountOrderByAggregateInput = {
    id?: SortOrder
    dataSolicitacao?: SortOrder
    status?: SortOrder
    dataAtualizacao?: SortOrder
    motivoCancelamento?: SortOrder
    vendedorId?: SortOrder
    premioId?: SortOrder
    criadoEm?: SortOrder
    atualizadoEm?: SortOrder
  }

  export type ResgatePremioMaxOrderByAggregateInput = {
    id?: SortOrder
    dataSolicitacao?: SortOrder
    status?: SortOrder
    dataAtualizacao?: SortOrder
    motivoCancelamento?: SortOrder
    vendedorId?: SortOrder
    premioId?: SortOrder
    criadoEm?: SortOrder
    atualizadoEm?: SortOrder
  }

  export type ResgatePremioMinOrderByAggregateInput = {
    id?: SortOrder
    dataSolicitacao?: SortOrder
    status?: SortOrder
    dataAtualizacao?: SortOrder
    motivoCancelamento?: SortOrder
    vendedorId?: SortOrder
    premioId?: SortOrder
    criadoEm?: SortOrder
    atualizadoEm?: SortOrder
  }

  export type EnumStatusResgateWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.StatusResgate | EnumStatusResgateFieldRefInput<$PrismaModel>
    in?: $Enums.StatusResgate[] | ListEnumStatusResgateFieldRefInput<$PrismaModel>
    notIn?: $Enums.StatusResgate[] | ListEnumStatusResgateFieldRefInput<$PrismaModel>
    not?: NestedEnumStatusResgateWithAggregatesFilter<$PrismaModel> | $Enums.StatusResgate
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumStatusResgateFilter<$PrismaModel>
    _max?: NestedEnumStatusResgateFilter<$PrismaModel>
  }

  export type EnumStatusPagamentoFilter<$PrismaModel = never> = {
    equals?: $Enums.StatusPagamento | EnumStatusPagamentoFieldRefInput<$PrismaModel>
    in?: $Enums.StatusPagamento[] | ListEnumStatusPagamentoFieldRefInput<$PrismaModel>
    notIn?: $Enums.StatusPagamento[] | ListEnumStatusPagamentoFieldRefInput<$PrismaModel>
    not?: NestedEnumStatusPagamentoFilter<$PrismaModel> | $Enums.StatusPagamento
  }

  export type RelatorioFinanceiroCountOrderByAggregateInput = {
    id?: SortOrder
    valor?: SortOrder
    status?: SortOrder
    tipo?: SortOrder
    dataGerado?: SortOrder
    dataPagamento?: SortOrder
    observacoes?: SortOrder
    usuarioId?: SortOrder
    campanhaId?: SortOrder
    criadoEm?: SortOrder
    atualizadoEm?: SortOrder
  }

  export type RelatorioFinanceiroAvgOrderByAggregateInput = {
    valor?: SortOrder
  }

  export type RelatorioFinanceiroMaxOrderByAggregateInput = {
    id?: SortOrder
    valor?: SortOrder
    status?: SortOrder
    tipo?: SortOrder
    dataGerado?: SortOrder
    dataPagamento?: SortOrder
    observacoes?: SortOrder
    usuarioId?: SortOrder
    campanhaId?: SortOrder
    criadoEm?: SortOrder
    atualizadoEm?: SortOrder
  }

  export type RelatorioFinanceiroMinOrderByAggregateInput = {
    id?: SortOrder
    valor?: SortOrder
    status?: SortOrder
    tipo?: SortOrder
    dataGerado?: SortOrder
    dataPagamento?: SortOrder
    observacoes?: SortOrder
    usuarioId?: SortOrder
    campanhaId?: SortOrder
    criadoEm?: SortOrder
    atualizadoEm?: SortOrder
  }

  export type RelatorioFinanceiroSumOrderByAggregateInput = {
    valor?: SortOrder
  }

  export type EnumStatusPagamentoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.StatusPagamento | EnumStatusPagamentoFieldRefInput<$PrismaModel>
    in?: $Enums.StatusPagamento[] | ListEnumStatusPagamentoFieldRefInput<$PrismaModel>
    notIn?: $Enums.StatusPagamento[] | ListEnumStatusPagamentoFieldRefInput<$PrismaModel>
    not?: NestedEnumStatusPagamentoWithAggregatesFilter<$PrismaModel> | $Enums.StatusPagamento
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumStatusPagamentoFilter<$PrismaModel>
    _max?: NestedEnumStatusPagamentoFilter<$PrismaModel>
  }

  export type NotificacaoCountOrderByAggregateInput = {
    id?: SortOrder
    mensagem?: SortOrder
    lida?: SortOrder
    linkUrl?: SortOrder
    dataCriacao?: SortOrder
    usuarioId?: SortOrder
    criadoEm?: SortOrder
    atualizadoEm?: SortOrder
  }

  export type NotificacaoMaxOrderByAggregateInput = {
    id?: SortOrder
    mensagem?: SortOrder
    lida?: SortOrder
    linkUrl?: SortOrder
    dataCriacao?: SortOrder
    usuarioId?: SortOrder
    criadoEm?: SortOrder
    atualizadoEm?: SortOrder
  }

  export type NotificacaoMinOrderByAggregateInput = {
    id?: SortOrder
    mensagem?: SortOrder
    lida?: SortOrder
    linkUrl?: SortOrder
    dataCriacao?: SortOrder
    usuarioId?: SortOrder
    criadoEm?: SortOrder
    atualizadoEm?: SortOrder
  }

  export type ConfiguracaoGlobalCountOrderByAggregateInput = {
    id?: SortOrder
    chave?: SortOrder
    valor?: SortOrder
    descricao?: SortOrder
    criadoEm?: SortOrder
    atualizadoEm?: SortOrder
  }

  export type ConfiguracaoGlobalMaxOrderByAggregateInput = {
    id?: SortOrder
    chave?: SortOrder
    valor?: SortOrder
    descricao?: SortOrder
    criadoEm?: SortOrder
    atualizadoEm?: SortOrder
  }

  export type ConfiguracaoGlobalMinOrderByAggregateInput = {
    id?: SortOrder
    chave?: SortOrder
    valor?: SortOrder
    descricao?: SortOrder
    criadoEm?: SortOrder
    atualizadoEm?: SortOrder
  }

  export type CartelaConcluidaVendedorIdCampanhaIdNumeroCartelaCompoundUniqueInput = {
    vendedorId: string
    campanhaId: string
    numeroCartela: number
  }

  export type CartelaConcluidaCountOrderByAggregateInput = {
    id?: SortOrder
    dataConclusao?: SortOrder
    numeroCartela?: SortOrder
    vendedorId?: SortOrder
    campanhaId?: SortOrder
  }

  export type CartelaConcluidaAvgOrderByAggregateInput = {
    numeroCartela?: SortOrder
  }

  export type CartelaConcluidaMaxOrderByAggregateInput = {
    id?: SortOrder
    dataConclusao?: SortOrder
    numeroCartela?: SortOrder
    vendedorId?: SortOrder
    campanhaId?: SortOrder
  }

  export type CartelaConcluidaMinOrderByAggregateInput = {
    id?: SortOrder
    dataConclusao?: SortOrder
    numeroCartela?: SortOrder
    vendedorId?: SortOrder
    campanhaId?: SortOrder
  }

  export type CartelaConcluidaSumOrderByAggregateInput = {
    numeroCartela?: SortOrder
  }

  export type OpticaCreateNestedOneWithoutFiliaisInput = {
    create?: XOR<OpticaCreateWithoutFiliaisInput, OpticaUncheckedCreateWithoutFiliaisInput>
    connectOrCreate?: OpticaCreateOrConnectWithoutFiliaisInput
    connect?: OpticaWhereUniqueInput
  }

  export type OpticaCreateNestedManyWithoutMatrizInput = {
    create?: XOR<OpticaCreateWithoutMatrizInput, OpticaUncheckedCreateWithoutMatrizInput> | OpticaCreateWithoutMatrizInput[] | OpticaUncheckedCreateWithoutMatrizInput[]
    connectOrCreate?: OpticaCreateOrConnectWithoutMatrizInput | OpticaCreateOrConnectWithoutMatrizInput[]
    createMany?: OpticaCreateManyMatrizInputEnvelope
    connect?: OpticaWhereUniqueInput | OpticaWhereUniqueInput[]
  }

  export type UsuarioCreateNestedManyWithoutOpticaInput = {
    create?: XOR<UsuarioCreateWithoutOpticaInput, UsuarioUncheckedCreateWithoutOpticaInput> | UsuarioCreateWithoutOpticaInput[] | UsuarioUncheckedCreateWithoutOpticaInput[]
    connectOrCreate?: UsuarioCreateOrConnectWithoutOpticaInput | UsuarioCreateOrConnectWithoutOpticaInput[]
    createMany?: UsuarioCreateManyOpticaInputEnvelope
    connect?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
  }

  export type CampanhaCreateNestedManyWithoutOticasAlvoInput = {
    create?: XOR<CampanhaCreateWithoutOticasAlvoInput, CampanhaUncheckedCreateWithoutOticasAlvoInput> | CampanhaCreateWithoutOticasAlvoInput[] | CampanhaUncheckedCreateWithoutOticasAlvoInput[]
    connectOrCreate?: CampanhaCreateOrConnectWithoutOticasAlvoInput | CampanhaCreateOrConnectWithoutOticasAlvoInput[]
    connect?: CampanhaWhereUniqueInput | CampanhaWhereUniqueInput[]
  }

  export type OpticaUncheckedCreateNestedManyWithoutMatrizInput = {
    create?: XOR<OpticaCreateWithoutMatrizInput, OpticaUncheckedCreateWithoutMatrizInput> | OpticaCreateWithoutMatrizInput[] | OpticaUncheckedCreateWithoutMatrizInput[]
    connectOrCreate?: OpticaCreateOrConnectWithoutMatrizInput | OpticaCreateOrConnectWithoutMatrizInput[]
    createMany?: OpticaCreateManyMatrizInputEnvelope
    connect?: OpticaWhereUniqueInput | OpticaWhereUniqueInput[]
  }

  export type UsuarioUncheckedCreateNestedManyWithoutOpticaInput = {
    create?: XOR<UsuarioCreateWithoutOpticaInput, UsuarioUncheckedCreateWithoutOpticaInput> | UsuarioCreateWithoutOpticaInput[] | UsuarioUncheckedCreateWithoutOpticaInput[]
    connectOrCreate?: UsuarioCreateOrConnectWithoutOpticaInput | UsuarioCreateOrConnectWithoutOpticaInput[]
    createMany?: UsuarioCreateManyOpticaInputEnvelope
    connect?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
  }

  export type CampanhaUncheckedCreateNestedManyWithoutOticasAlvoInput = {
    create?: XOR<CampanhaCreateWithoutOticasAlvoInput, CampanhaUncheckedCreateWithoutOticasAlvoInput> | CampanhaCreateWithoutOticasAlvoInput[] | CampanhaUncheckedCreateWithoutOticasAlvoInput[]
    connectOrCreate?: CampanhaCreateOrConnectWithoutOticasAlvoInput | CampanhaCreateOrConnectWithoutOticasAlvoInput[]
    connect?: CampanhaWhereUniqueInput | CampanhaWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type OpticaUpdateOneWithoutFiliaisNestedInput = {
    create?: XOR<OpticaCreateWithoutFiliaisInput, OpticaUncheckedCreateWithoutFiliaisInput>
    connectOrCreate?: OpticaCreateOrConnectWithoutFiliaisInput
    upsert?: OpticaUpsertWithoutFiliaisInput
    disconnect?: OpticaWhereInput | boolean
    delete?: OpticaWhereInput | boolean
    connect?: OpticaWhereUniqueInput
    update?: XOR<XOR<OpticaUpdateToOneWithWhereWithoutFiliaisInput, OpticaUpdateWithoutFiliaisInput>, OpticaUncheckedUpdateWithoutFiliaisInput>
  }

  export type OpticaUpdateManyWithoutMatrizNestedInput = {
    create?: XOR<OpticaCreateWithoutMatrizInput, OpticaUncheckedCreateWithoutMatrizInput> | OpticaCreateWithoutMatrizInput[] | OpticaUncheckedCreateWithoutMatrizInput[]
    connectOrCreate?: OpticaCreateOrConnectWithoutMatrizInput | OpticaCreateOrConnectWithoutMatrizInput[]
    upsert?: OpticaUpsertWithWhereUniqueWithoutMatrizInput | OpticaUpsertWithWhereUniqueWithoutMatrizInput[]
    createMany?: OpticaCreateManyMatrizInputEnvelope
    set?: OpticaWhereUniqueInput | OpticaWhereUniqueInput[]
    disconnect?: OpticaWhereUniqueInput | OpticaWhereUniqueInput[]
    delete?: OpticaWhereUniqueInput | OpticaWhereUniqueInput[]
    connect?: OpticaWhereUniqueInput | OpticaWhereUniqueInput[]
    update?: OpticaUpdateWithWhereUniqueWithoutMatrizInput | OpticaUpdateWithWhereUniqueWithoutMatrizInput[]
    updateMany?: OpticaUpdateManyWithWhereWithoutMatrizInput | OpticaUpdateManyWithWhereWithoutMatrizInput[]
    deleteMany?: OpticaScalarWhereInput | OpticaScalarWhereInput[]
  }

  export type UsuarioUpdateManyWithoutOpticaNestedInput = {
    create?: XOR<UsuarioCreateWithoutOpticaInput, UsuarioUncheckedCreateWithoutOpticaInput> | UsuarioCreateWithoutOpticaInput[] | UsuarioUncheckedCreateWithoutOpticaInput[]
    connectOrCreate?: UsuarioCreateOrConnectWithoutOpticaInput | UsuarioCreateOrConnectWithoutOpticaInput[]
    upsert?: UsuarioUpsertWithWhereUniqueWithoutOpticaInput | UsuarioUpsertWithWhereUniqueWithoutOpticaInput[]
    createMany?: UsuarioCreateManyOpticaInputEnvelope
    set?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    disconnect?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    delete?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    connect?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    update?: UsuarioUpdateWithWhereUniqueWithoutOpticaInput | UsuarioUpdateWithWhereUniqueWithoutOpticaInput[]
    updateMany?: UsuarioUpdateManyWithWhereWithoutOpticaInput | UsuarioUpdateManyWithWhereWithoutOpticaInput[]
    deleteMany?: UsuarioScalarWhereInput | UsuarioScalarWhereInput[]
  }

  export type CampanhaUpdateManyWithoutOticasAlvoNestedInput = {
    create?: XOR<CampanhaCreateWithoutOticasAlvoInput, CampanhaUncheckedCreateWithoutOticasAlvoInput> | CampanhaCreateWithoutOticasAlvoInput[] | CampanhaUncheckedCreateWithoutOticasAlvoInput[]
    connectOrCreate?: CampanhaCreateOrConnectWithoutOticasAlvoInput | CampanhaCreateOrConnectWithoutOticasAlvoInput[]
    upsert?: CampanhaUpsertWithWhereUniqueWithoutOticasAlvoInput | CampanhaUpsertWithWhereUniqueWithoutOticasAlvoInput[]
    set?: CampanhaWhereUniqueInput | CampanhaWhereUniqueInput[]
    disconnect?: CampanhaWhereUniqueInput | CampanhaWhereUniqueInput[]
    delete?: CampanhaWhereUniqueInput | CampanhaWhereUniqueInput[]
    connect?: CampanhaWhereUniqueInput | CampanhaWhereUniqueInput[]
    update?: CampanhaUpdateWithWhereUniqueWithoutOticasAlvoInput | CampanhaUpdateWithWhereUniqueWithoutOticasAlvoInput[]
    updateMany?: CampanhaUpdateManyWithWhereWithoutOticasAlvoInput | CampanhaUpdateManyWithWhereWithoutOticasAlvoInput[]
    deleteMany?: CampanhaScalarWhereInput | CampanhaScalarWhereInput[]
  }

  export type OpticaUncheckedUpdateManyWithoutMatrizNestedInput = {
    create?: XOR<OpticaCreateWithoutMatrizInput, OpticaUncheckedCreateWithoutMatrizInput> | OpticaCreateWithoutMatrizInput[] | OpticaUncheckedCreateWithoutMatrizInput[]
    connectOrCreate?: OpticaCreateOrConnectWithoutMatrizInput | OpticaCreateOrConnectWithoutMatrizInput[]
    upsert?: OpticaUpsertWithWhereUniqueWithoutMatrizInput | OpticaUpsertWithWhereUniqueWithoutMatrizInput[]
    createMany?: OpticaCreateManyMatrizInputEnvelope
    set?: OpticaWhereUniqueInput | OpticaWhereUniqueInput[]
    disconnect?: OpticaWhereUniqueInput | OpticaWhereUniqueInput[]
    delete?: OpticaWhereUniqueInput | OpticaWhereUniqueInput[]
    connect?: OpticaWhereUniqueInput | OpticaWhereUniqueInput[]
    update?: OpticaUpdateWithWhereUniqueWithoutMatrizInput | OpticaUpdateWithWhereUniqueWithoutMatrizInput[]
    updateMany?: OpticaUpdateManyWithWhereWithoutMatrizInput | OpticaUpdateManyWithWhereWithoutMatrizInput[]
    deleteMany?: OpticaScalarWhereInput | OpticaScalarWhereInput[]
  }

  export type UsuarioUncheckedUpdateManyWithoutOpticaNestedInput = {
    create?: XOR<UsuarioCreateWithoutOpticaInput, UsuarioUncheckedCreateWithoutOpticaInput> | UsuarioCreateWithoutOpticaInput[] | UsuarioUncheckedCreateWithoutOpticaInput[]
    connectOrCreate?: UsuarioCreateOrConnectWithoutOpticaInput | UsuarioCreateOrConnectWithoutOpticaInput[]
    upsert?: UsuarioUpsertWithWhereUniqueWithoutOpticaInput | UsuarioUpsertWithWhereUniqueWithoutOpticaInput[]
    createMany?: UsuarioCreateManyOpticaInputEnvelope
    set?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    disconnect?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    delete?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    connect?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    update?: UsuarioUpdateWithWhereUniqueWithoutOpticaInput | UsuarioUpdateWithWhereUniqueWithoutOpticaInput[]
    updateMany?: UsuarioUpdateManyWithWhereWithoutOpticaInput | UsuarioUpdateManyWithWhereWithoutOpticaInput[]
    deleteMany?: UsuarioScalarWhereInput | UsuarioScalarWhereInput[]
  }

  export type CampanhaUncheckedUpdateManyWithoutOticasAlvoNestedInput = {
    create?: XOR<CampanhaCreateWithoutOticasAlvoInput, CampanhaUncheckedCreateWithoutOticasAlvoInput> | CampanhaCreateWithoutOticasAlvoInput[] | CampanhaUncheckedCreateWithoutOticasAlvoInput[]
    connectOrCreate?: CampanhaCreateOrConnectWithoutOticasAlvoInput | CampanhaCreateOrConnectWithoutOticasAlvoInput[]
    upsert?: CampanhaUpsertWithWhereUniqueWithoutOticasAlvoInput | CampanhaUpsertWithWhereUniqueWithoutOticasAlvoInput[]
    set?: CampanhaWhereUniqueInput | CampanhaWhereUniqueInput[]
    disconnect?: CampanhaWhereUniqueInput | CampanhaWhereUniqueInput[]
    delete?: CampanhaWhereUniqueInput | CampanhaWhereUniqueInput[]
    connect?: CampanhaWhereUniqueInput | CampanhaWhereUniqueInput[]
    update?: CampanhaUpdateWithWhereUniqueWithoutOticasAlvoInput | CampanhaUpdateWithWhereUniqueWithoutOticasAlvoInput[]
    updateMany?: CampanhaUpdateManyWithWhereWithoutOticasAlvoInput | CampanhaUpdateManyWithWhereWithoutOticasAlvoInput[]
    deleteMany?: CampanhaScalarWhereInput | CampanhaScalarWhereInput[]
  }

  export type OpticaCreateNestedOneWithoutUsuariosInput = {
    create?: XOR<OpticaCreateWithoutUsuariosInput, OpticaUncheckedCreateWithoutUsuariosInput>
    connectOrCreate?: OpticaCreateOrConnectWithoutUsuariosInput
    connect?: OpticaWhereUniqueInput
  }

  export type UsuarioCreateNestedOneWithoutVendedoresInput = {
    create?: XOR<UsuarioCreateWithoutVendedoresInput, UsuarioUncheckedCreateWithoutVendedoresInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutVendedoresInput
    connect?: UsuarioWhereUniqueInput
  }

  export type UsuarioCreateNestedManyWithoutGerenteInput = {
    create?: XOR<UsuarioCreateWithoutGerenteInput, UsuarioUncheckedCreateWithoutGerenteInput> | UsuarioCreateWithoutGerenteInput[] | UsuarioUncheckedCreateWithoutGerenteInput[]
    connectOrCreate?: UsuarioCreateOrConnectWithoutGerenteInput | UsuarioCreateOrConnectWithoutGerenteInput[]
    createMany?: UsuarioCreateManyGerenteInputEnvelope
    connect?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
  }

  export type EnvioVendaCreateNestedManyWithoutVendedorInput = {
    create?: XOR<EnvioVendaCreateWithoutVendedorInput, EnvioVendaUncheckedCreateWithoutVendedorInput> | EnvioVendaCreateWithoutVendedorInput[] | EnvioVendaUncheckedCreateWithoutVendedorInput[]
    connectOrCreate?: EnvioVendaCreateOrConnectWithoutVendedorInput | EnvioVendaCreateOrConnectWithoutVendedorInput[]
    createMany?: EnvioVendaCreateManyVendedorInputEnvelope
    connect?: EnvioVendaWhereUniqueInput | EnvioVendaWhereUniqueInput[]
  }

  export type ResgatePremioCreateNestedManyWithoutVendedorInput = {
    create?: XOR<ResgatePremioCreateWithoutVendedorInput, ResgatePremioUncheckedCreateWithoutVendedorInput> | ResgatePremioCreateWithoutVendedorInput[] | ResgatePremioUncheckedCreateWithoutVendedorInput[]
    connectOrCreate?: ResgatePremioCreateOrConnectWithoutVendedorInput | ResgatePremioCreateOrConnectWithoutVendedorInput[]
    createMany?: ResgatePremioCreateManyVendedorInputEnvelope
    connect?: ResgatePremioWhereUniqueInput | ResgatePremioWhereUniqueInput[]
  }

  export type RelatorioFinanceiroCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<RelatorioFinanceiroCreateWithoutUsuarioInput, RelatorioFinanceiroUncheckedCreateWithoutUsuarioInput> | RelatorioFinanceiroCreateWithoutUsuarioInput[] | RelatorioFinanceiroUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: RelatorioFinanceiroCreateOrConnectWithoutUsuarioInput | RelatorioFinanceiroCreateOrConnectWithoutUsuarioInput[]
    createMany?: RelatorioFinanceiroCreateManyUsuarioInputEnvelope
    connect?: RelatorioFinanceiroWhereUniqueInput | RelatorioFinanceiroWhereUniqueInput[]
  }

  export type NotificacaoCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<NotificacaoCreateWithoutUsuarioInput, NotificacaoUncheckedCreateWithoutUsuarioInput> | NotificacaoCreateWithoutUsuarioInput[] | NotificacaoUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: NotificacaoCreateOrConnectWithoutUsuarioInput | NotificacaoCreateOrConnectWithoutUsuarioInput[]
    createMany?: NotificacaoCreateManyUsuarioInputEnvelope
    connect?: NotificacaoWhereUniqueInput | NotificacaoWhereUniqueInput[]
  }

  export type CartelaConcluidaCreateNestedManyWithoutVendedorInput = {
    create?: XOR<CartelaConcluidaCreateWithoutVendedorInput, CartelaConcluidaUncheckedCreateWithoutVendedorInput> | CartelaConcluidaCreateWithoutVendedorInput[] | CartelaConcluidaUncheckedCreateWithoutVendedorInput[]
    connectOrCreate?: CartelaConcluidaCreateOrConnectWithoutVendedorInput | CartelaConcluidaCreateOrConnectWithoutVendedorInput[]
    createMany?: CartelaConcluidaCreateManyVendedorInputEnvelope
    connect?: CartelaConcluidaWhereUniqueInput | CartelaConcluidaWhereUniqueInput[]
  }

  export type UsuarioUncheckedCreateNestedManyWithoutGerenteInput = {
    create?: XOR<UsuarioCreateWithoutGerenteInput, UsuarioUncheckedCreateWithoutGerenteInput> | UsuarioCreateWithoutGerenteInput[] | UsuarioUncheckedCreateWithoutGerenteInput[]
    connectOrCreate?: UsuarioCreateOrConnectWithoutGerenteInput | UsuarioCreateOrConnectWithoutGerenteInput[]
    createMany?: UsuarioCreateManyGerenteInputEnvelope
    connect?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
  }

  export type EnvioVendaUncheckedCreateNestedManyWithoutVendedorInput = {
    create?: XOR<EnvioVendaCreateWithoutVendedorInput, EnvioVendaUncheckedCreateWithoutVendedorInput> | EnvioVendaCreateWithoutVendedorInput[] | EnvioVendaUncheckedCreateWithoutVendedorInput[]
    connectOrCreate?: EnvioVendaCreateOrConnectWithoutVendedorInput | EnvioVendaCreateOrConnectWithoutVendedorInput[]
    createMany?: EnvioVendaCreateManyVendedorInputEnvelope
    connect?: EnvioVendaWhereUniqueInput | EnvioVendaWhereUniqueInput[]
  }

  export type ResgatePremioUncheckedCreateNestedManyWithoutVendedorInput = {
    create?: XOR<ResgatePremioCreateWithoutVendedorInput, ResgatePremioUncheckedCreateWithoutVendedorInput> | ResgatePremioCreateWithoutVendedorInput[] | ResgatePremioUncheckedCreateWithoutVendedorInput[]
    connectOrCreate?: ResgatePremioCreateOrConnectWithoutVendedorInput | ResgatePremioCreateOrConnectWithoutVendedorInput[]
    createMany?: ResgatePremioCreateManyVendedorInputEnvelope
    connect?: ResgatePremioWhereUniqueInput | ResgatePremioWhereUniqueInput[]
  }

  export type RelatorioFinanceiroUncheckedCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<RelatorioFinanceiroCreateWithoutUsuarioInput, RelatorioFinanceiroUncheckedCreateWithoutUsuarioInput> | RelatorioFinanceiroCreateWithoutUsuarioInput[] | RelatorioFinanceiroUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: RelatorioFinanceiroCreateOrConnectWithoutUsuarioInput | RelatorioFinanceiroCreateOrConnectWithoutUsuarioInput[]
    createMany?: RelatorioFinanceiroCreateManyUsuarioInputEnvelope
    connect?: RelatorioFinanceiroWhereUniqueInput | RelatorioFinanceiroWhereUniqueInput[]
  }

  export type NotificacaoUncheckedCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<NotificacaoCreateWithoutUsuarioInput, NotificacaoUncheckedCreateWithoutUsuarioInput> | NotificacaoCreateWithoutUsuarioInput[] | NotificacaoUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: NotificacaoCreateOrConnectWithoutUsuarioInput | NotificacaoCreateOrConnectWithoutUsuarioInput[]
    createMany?: NotificacaoCreateManyUsuarioInputEnvelope
    connect?: NotificacaoWhereUniqueInput | NotificacaoWhereUniqueInput[]
  }

  export type CartelaConcluidaUncheckedCreateNestedManyWithoutVendedorInput = {
    create?: XOR<CartelaConcluidaCreateWithoutVendedorInput, CartelaConcluidaUncheckedCreateWithoutVendedorInput> | CartelaConcluidaCreateWithoutVendedorInput[] | CartelaConcluidaUncheckedCreateWithoutVendedorInput[]
    connectOrCreate?: CartelaConcluidaCreateOrConnectWithoutVendedorInput | CartelaConcluidaCreateOrConnectWithoutVendedorInput[]
    createMany?: CartelaConcluidaCreateManyVendedorInputEnvelope
    connect?: CartelaConcluidaWhereUniqueInput | CartelaConcluidaWhereUniqueInput[]
  }

  export type EnumPapelUsuarioFieldUpdateOperationsInput = {
    set?: $Enums.PapelUsuario
  }

  export type EnumStatusUsuarioFieldUpdateOperationsInput = {
    set?: $Enums.StatusUsuario
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type EnumNivelVendedorFieldUpdateOperationsInput = {
    set?: $Enums.NivelVendedor
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type OpticaUpdateOneWithoutUsuariosNestedInput = {
    create?: XOR<OpticaCreateWithoutUsuariosInput, OpticaUncheckedCreateWithoutUsuariosInput>
    connectOrCreate?: OpticaCreateOrConnectWithoutUsuariosInput
    upsert?: OpticaUpsertWithoutUsuariosInput
    disconnect?: OpticaWhereInput | boolean
    delete?: OpticaWhereInput | boolean
    connect?: OpticaWhereUniqueInput
    update?: XOR<XOR<OpticaUpdateToOneWithWhereWithoutUsuariosInput, OpticaUpdateWithoutUsuariosInput>, OpticaUncheckedUpdateWithoutUsuariosInput>
  }

  export type UsuarioUpdateOneWithoutVendedoresNestedInput = {
    create?: XOR<UsuarioCreateWithoutVendedoresInput, UsuarioUncheckedCreateWithoutVendedoresInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutVendedoresInput
    upsert?: UsuarioUpsertWithoutVendedoresInput
    disconnect?: UsuarioWhereInput | boolean
    delete?: UsuarioWhereInput | boolean
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutVendedoresInput, UsuarioUpdateWithoutVendedoresInput>, UsuarioUncheckedUpdateWithoutVendedoresInput>
  }

  export type UsuarioUpdateManyWithoutGerenteNestedInput = {
    create?: XOR<UsuarioCreateWithoutGerenteInput, UsuarioUncheckedCreateWithoutGerenteInput> | UsuarioCreateWithoutGerenteInput[] | UsuarioUncheckedCreateWithoutGerenteInput[]
    connectOrCreate?: UsuarioCreateOrConnectWithoutGerenteInput | UsuarioCreateOrConnectWithoutGerenteInput[]
    upsert?: UsuarioUpsertWithWhereUniqueWithoutGerenteInput | UsuarioUpsertWithWhereUniqueWithoutGerenteInput[]
    createMany?: UsuarioCreateManyGerenteInputEnvelope
    set?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    disconnect?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    delete?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    connect?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    update?: UsuarioUpdateWithWhereUniqueWithoutGerenteInput | UsuarioUpdateWithWhereUniqueWithoutGerenteInput[]
    updateMany?: UsuarioUpdateManyWithWhereWithoutGerenteInput | UsuarioUpdateManyWithWhereWithoutGerenteInput[]
    deleteMany?: UsuarioScalarWhereInput | UsuarioScalarWhereInput[]
  }

  export type EnvioVendaUpdateManyWithoutVendedorNestedInput = {
    create?: XOR<EnvioVendaCreateWithoutVendedorInput, EnvioVendaUncheckedCreateWithoutVendedorInput> | EnvioVendaCreateWithoutVendedorInput[] | EnvioVendaUncheckedCreateWithoutVendedorInput[]
    connectOrCreate?: EnvioVendaCreateOrConnectWithoutVendedorInput | EnvioVendaCreateOrConnectWithoutVendedorInput[]
    upsert?: EnvioVendaUpsertWithWhereUniqueWithoutVendedorInput | EnvioVendaUpsertWithWhereUniqueWithoutVendedorInput[]
    createMany?: EnvioVendaCreateManyVendedorInputEnvelope
    set?: EnvioVendaWhereUniqueInput | EnvioVendaWhereUniqueInput[]
    disconnect?: EnvioVendaWhereUniqueInput | EnvioVendaWhereUniqueInput[]
    delete?: EnvioVendaWhereUniqueInput | EnvioVendaWhereUniqueInput[]
    connect?: EnvioVendaWhereUniqueInput | EnvioVendaWhereUniqueInput[]
    update?: EnvioVendaUpdateWithWhereUniqueWithoutVendedorInput | EnvioVendaUpdateWithWhereUniqueWithoutVendedorInput[]
    updateMany?: EnvioVendaUpdateManyWithWhereWithoutVendedorInput | EnvioVendaUpdateManyWithWhereWithoutVendedorInput[]
    deleteMany?: EnvioVendaScalarWhereInput | EnvioVendaScalarWhereInput[]
  }

  export type ResgatePremioUpdateManyWithoutVendedorNestedInput = {
    create?: XOR<ResgatePremioCreateWithoutVendedorInput, ResgatePremioUncheckedCreateWithoutVendedorInput> | ResgatePremioCreateWithoutVendedorInput[] | ResgatePremioUncheckedCreateWithoutVendedorInput[]
    connectOrCreate?: ResgatePremioCreateOrConnectWithoutVendedorInput | ResgatePremioCreateOrConnectWithoutVendedorInput[]
    upsert?: ResgatePremioUpsertWithWhereUniqueWithoutVendedorInput | ResgatePremioUpsertWithWhereUniqueWithoutVendedorInput[]
    createMany?: ResgatePremioCreateManyVendedorInputEnvelope
    set?: ResgatePremioWhereUniqueInput | ResgatePremioWhereUniqueInput[]
    disconnect?: ResgatePremioWhereUniqueInput | ResgatePremioWhereUniqueInput[]
    delete?: ResgatePremioWhereUniqueInput | ResgatePremioWhereUniqueInput[]
    connect?: ResgatePremioWhereUniqueInput | ResgatePremioWhereUniqueInput[]
    update?: ResgatePremioUpdateWithWhereUniqueWithoutVendedorInput | ResgatePremioUpdateWithWhereUniqueWithoutVendedorInput[]
    updateMany?: ResgatePremioUpdateManyWithWhereWithoutVendedorInput | ResgatePremioUpdateManyWithWhereWithoutVendedorInput[]
    deleteMany?: ResgatePremioScalarWhereInput | ResgatePremioScalarWhereInput[]
  }

  export type RelatorioFinanceiroUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<RelatorioFinanceiroCreateWithoutUsuarioInput, RelatorioFinanceiroUncheckedCreateWithoutUsuarioInput> | RelatorioFinanceiroCreateWithoutUsuarioInput[] | RelatorioFinanceiroUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: RelatorioFinanceiroCreateOrConnectWithoutUsuarioInput | RelatorioFinanceiroCreateOrConnectWithoutUsuarioInput[]
    upsert?: RelatorioFinanceiroUpsertWithWhereUniqueWithoutUsuarioInput | RelatorioFinanceiroUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: RelatorioFinanceiroCreateManyUsuarioInputEnvelope
    set?: RelatorioFinanceiroWhereUniqueInput | RelatorioFinanceiroWhereUniqueInput[]
    disconnect?: RelatorioFinanceiroWhereUniqueInput | RelatorioFinanceiroWhereUniqueInput[]
    delete?: RelatorioFinanceiroWhereUniqueInput | RelatorioFinanceiroWhereUniqueInput[]
    connect?: RelatorioFinanceiroWhereUniqueInput | RelatorioFinanceiroWhereUniqueInput[]
    update?: RelatorioFinanceiroUpdateWithWhereUniqueWithoutUsuarioInput | RelatorioFinanceiroUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: RelatorioFinanceiroUpdateManyWithWhereWithoutUsuarioInput | RelatorioFinanceiroUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: RelatorioFinanceiroScalarWhereInput | RelatorioFinanceiroScalarWhereInput[]
  }

  export type NotificacaoUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<NotificacaoCreateWithoutUsuarioInput, NotificacaoUncheckedCreateWithoutUsuarioInput> | NotificacaoCreateWithoutUsuarioInput[] | NotificacaoUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: NotificacaoCreateOrConnectWithoutUsuarioInput | NotificacaoCreateOrConnectWithoutUsuarioInput[]
    upsert?: NotificacaoUpsertWithWhereUniqueWithoutUsuarioInput | NotificacaoUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: NotificacaoCreateManyUsuarioInputEnvelope
    set?: NotificacaoWhereUniqueInput | NotificacaoWhereUniqueInput[]
    disconnect?: NotificacaoWhereUniqueInput | NotificacaoWhereUniqueInput[]
    delete?: NotificacaoWhereUniqueInput | NotificacaoWhereUniqueInput[]
    connect?: NotificacaoWhereUniqueInput | NotificacaoWhereUniqueInput[]
    update?: NotificacaoUpdateWithWhereUniqueWithoutUsuarioInput | NotificacaoUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: NotificacaoUpdateManyWithWhereWithoutUsuarioInput | NotificacaoUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: NotificacaoScalarWhereInput | NotificacaoScalarWhereInput[]
  }

  export type CartelaConcluidaUpdateManyWithoutVendedorNestedInput = {
    create?: XOR<CartelaConcluidaCreateWithoutVendedorInput, CartelaConcluidaUncheckedCreateWithoutVendedorInput> | CartelaConcluidaCreateWithoutVendedorInput[] | CartelaConcluidaUncheckedCreateWithoutVendedorInput[]
    connectOrCreate?: CartelaConcluidaCreateOrConnectWithoutVendedorInput | CartelaConcluidaCreateOrConnectWithoutVendedorInput[]
    upsert?: CartelaConcluidaUpsertWithWhereUniqueWithoutVendedorInput | CartelaConcluidaUpsertWithWhereUniqueWithoutVendedorInput[]
    createMany?: CartelaConcluidaCreateManyVendedorInputEnvelope
    set?: CartelaConcluidaWhereUniqueInput | CartelaConcluidaWhereUniqueInput[]
    disconnect?: CartelaConcluidaWhereUniqueInput | CartelaConcluidaWhereUniqueInput[]
    delete?: CartelaConcluidaWhereUniqueInput | CartelaConcluidaWhereUniqueInput[]
    connect?: CartelaConcluidaWhereUniqueInput | CartelaConcluidaWhereUniqueInput[]
    update?: CartelaConcluidaUpdateWithWhereUniqueWithoutVendedorInput | CartelaConcluidaUpdateWithWhereUniqueWithoutVendedorInput[]
    updateMany?: CartelaConcluidaUpdateManyWithWhereWithoutVendedorInput | CartelaConcluidaUpdateManyWithWhereWithoutVendedorInput[]
    deleteMany?: CartelaConcluidaScalarWhereInput | CartelaConcluidaScalarWhereInput[]
  }

  export type UsuarioUncheckedUpdateManyWithoutGerenteNestedInput = {
    create?: XOR<UsuarioCreateWithoutGerenteInput, UsuarioUncheckedCreateWithoutGerenteInput> | UsuarioCreateWithoutGerenteInput[] | UsuarioUncheckedCreateWithoutGerenteInput[]
    connectOrCreate?: UsuarioCreateOrConnectWithoutGerenteInput | UsuarioCreateOrConnectWithoutGerenteInput[]
    upsert?: UsuarioUpsertWithWhereUniqueWithoutGerenteInput | UsuarioUpsertWithWhereUniqueWithoutGerenteInput[]
    createMany?: UsuarioCreateManyGerenteInputEnvelope
    set?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    disconnect?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    delete?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    connect?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    update?: UsuarioUpdateWithWhereUniqueWithoutGerenteInput | UsuarioUpdateWithWhereUniqueWithoutGerenteInput[]
    updateMany?: UsuarioUpdateManyWithWhereWithoutGerenteInput | UsuarioUpdateManyWithWhereWithoutGerenteInput[]
    deleteMany?: UsuarioScalarWhereInput | UsuarioScalarWhereInput[]
  }

  export type EnvioVendaUncheckedUpdateManyWithoutVendedorNestedInput = {
    create?: XOR<EnvioVendaCreateWithoutVendedorInput, EnvioVendaUncheckedCreateWithoutVendedorInput> | EnvioVendaCreateWithoutVendedorInput[] | EnvioVendaUncheckedCreateWithoutVendedorInput[]
    connectOrCreate?: EnvioVendaCreateOrConnectWithoutVendedorInput | EnvioVendaCreateOrConnectWithoutVendedorInput[]
    upsert?: EnvioVendaUpsertWithWhereUniqueWithoutVendedorInput | EnvioVendaUpsertWithWhereUniqueWithoutVendedorInput[]
    createMany?: EnvioVendaCreateManyVendedorInputEnvelope
    set?: EnvioVendaWhereUniqueInput | EnvioVendaWhereUniqueInput[]
    disconnect?: EnvioVendaWhereUniqueInput | EnvioVendaWhereUniqueInput[]
    delete?: EnvioVendaWhereUniqueInput | EnvioVendaWhereUniqueInput[]
    connect?: EnvioVendaWhereUniqueInput | EnvioVendaWhereUniqueInput[]
    update?: EnvioVendaUpdateWithWhereUniqueWithoutVendedorInput | EnvioVendaUpdateWithWhereUniqueWithoutVendedorInput[]
    updateMany?: EnvioVendaUpdateManyWithWhereWithoutVendedorInput | EnvioVendaUpdateManyWithWhereWithoutVendedorInput[]
    deleteMany?: EnvioVendaScalarWhereInput | EnvioVendaScalarWhereInput[]
  }

  export type ResgatePremioUncheckedUpdateManyWithoutVendedorNestedInput = {
    create?: XOR<ResgatePremioCreateWithoutVendedorInput, ResgatePremioUncheckedCreateWithoutVendedorInput> | ResgatePremioCreateWithoutVendedorInput[] | ResgatePremioUncheckedCreateWithoutVendedorInput[]
    connectOrCreate?: ResgatePremioCreateOrConnectWithoutVendedorInput | ResgatePremioCreateOrConnectWithoutVendedorInput[]
    upsert?: ResgatePremioUpsertWithWhereUniqueWithoutVendedorInput | ResgatePremioUpsertWithWhereUniqueWithoutVendedorInput[]
    createMany?: ResgatePremioCreateManyVendedorInputEnvelope
    set?: ResgatePremioWhereUniqueInput | ResgatePremioWhereUniqueInput[]
    disconnect?: ResgatePremioWhereUniqueInput | ResgatePremioWhereUniqueInput[]
    delete?: ResgatePremioWhereUniqueInput | ResgatePremioWhereUniqueInput[]
    connect?: ResgatePremioWhereUniqueInput | ResgatePremioWhereUniqueInput[]
    update?: ResgatePremioUpdateWithWhereUniqueWithoutVendedorInput | ResgatePremioUpdateWithWhereUniqueWithoutVendedorInput[]
    updateMany?: ResgatePremioUpdateManyWithWhereWithoutVendedorInput | ResgatePremioUpdateManyWithWhereWithoutVendedorInput[]
    deleteMany?: ResgatePremioScalarWhereInput | ResgatePremioScalarWhereInput[]
  }

  export type RelatorioFinanceiroUncheckedUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<RelatorioFinanceiroCreateWithoutUsuarioInput, RelatorioFinanceiroUncheckedCreateWithoutUsuarioInput> | RelatorioFinanceiroCreateWithoutUsuarioInput[] | RelatorioFinanceiroUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: RelatorioFinanceiroCreateOrConnectWithoutUsuarioInput | RelatorioFinanceiroCreateOrConnectWithoutUsuarioInput[]
    upsert?: RelatorioFinanceiroUpsertWithWhereUniqueWithoutUsuarioInput | RelatorioFinanceiroUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: RelatorioFinanceiroCreateManyUsuarioInputEnvelope
    set?: RelatorioFinanceiroWhereUniqueInput | RelatorioFinanceiroWhereUniqueInput[]
    disconnect?: RelatorioFinanceiroWhereUniqueInput | RelatorioFinanceiroWhereUniqueInput[]
    delete?: RelatorioFinanceiroWhereUniqueInput | RelatorioFinanceiroWhereUniqueInput[]
    connect?: RelatorioFinanceiroWhereUniqueInput | RelatorioFinanceiroWhereUniqueInput[]
    update?: RelatorioFinanceiroUpdateWithWhereUniqueWithoutUsuarioInput | RelatorioFinanceiroUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: RelatorioFinanceiroUpdateManyWithWhereWithoutUsuarioInput | RelatorioFinanceiroUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: RelatorioFinanceiroScalarWhereInput | RelatorioFinanceiroScalarWhereInput[]
  }

  export type NotificacaoUncheckedUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<NotificacaoCreateWithoutUsuarioInput, NotificacaoUncheckedCreateWithoutUsuarioInput> | NotificacaoCreateWithoutUsuarioInput[] | NotificacaoUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: NotificacaoCreateOrConnectWithoutUsuarioInput | NotificacaoCreateOrConnectWithoutUsuarioInput[]
    upsert?: NotificacaoUpsertWithWhereUniqueWithoutUsuarioInput | NotificacaoUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: NotificacaoCreateManyUsuarioInputEnvelope
    set?: NotificacaoWhereUniqueInput | NotificacaoWhereUniqueInput[]
    disconnect?: NotificacaoWhereUniqueInput | NotificacaoWhereUniqueInput[]
    delete?: NotificacaoWhereUniqueInput | NotificacaoWhereUniqueInput[]
    connect?: NotificacaoWhereUniqueInput | NotificacaoWhereUniqueInput[]
    update?: NotificacaoUpdateWithWhereUniqueWithoutUsuarioInput | NotificacaoUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: NotificacaoUpdateManyWithWhereWithoutUsuarioInput | NotificacaoUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: NotificacaoScalarWhereInput | NotificacaoScalarWhereInput[]
  }

  export type CartelaConcluidaUncheckedUpdateManyWithoutVendedorNestedInput = {
    create?: XOR<CartelaConcluidaCreateWithoutVendedorInput, CartelaConcluidaUncheckedCreateWithoutVendedorInput> | CartelaConcluidaCreateWithoutVendedorInput[] | CartelaConcluidaUncheckedCreateWithoutVendedorInput[]
    connectOrCreate?: CartelaConcluidaCreateOrConnectWithoutVendedorInput | CartelaConcluidaCreateOrConnectWithoutVendedorInput[]
    upsert?: CartelaConcluidaUpsertWithWhereUniqueWithoutVendedorInput | CartelaConcluidaUpsertWithWhereUniqueWithoutVendedorInput[]
    createMany?: CartelaConcluidaCreateManyVendedorInputEnvelope
    set?: CartelaConcluidaWhereUniqueInput | CartelaConcluidaWhereUniqueInput[]
    disconnect?: CartelaConcluidaWhereUniqueInput | CartelaConcluidaWhereUniqueInput[]
    delete?: CartelaConcluidaWhereUniqueInput | CartelaConcluidaWhereUniqueInput[]
    connect?: CartelaConcluidaWhereUniqueInput | CartelaConcluidaWhereUniqueInput[]
    update?: CartelaConcluidaUpdateWithWhereUniqueWithoutVendedorInput | CartelaConcluidaUpdateWithWhereUniqueWithoutVendedorInput[]
    updateMany?: CartelaConcluidaUpdateManyWithWhereWithoutVendedorInput | CartelaConcluidaUpdateManyWithWhereWithoutVendedorInput[]
    deleteMany?: CartelaConcluidaScalarWhereInput | CartelaConcluidaScalarWhereInput[]
  }

  export type OpticaCreateNestedManyWithoutCampanhasAlvoInput = {
    create?: XOR<OpticaCreateWithoutCampanhasAlvoInput, OpticaUncheckedCreateWithoutCampanhasAlvoInput> | OpticaCreateWithoutCampanhasAlvoInput[] | OpticaUncheckedCreateWithoutCampanhasAlvoInput[]
    connectOrCreate?: OpticaCreateOrConnectWithoutCampanhasAlvoInput | OpticaCreateOrConnectWithoutCampanhasAlvoInput[]
    connect?: OpticaWhereUniqueInput | OpticaWhereUniqueInput[]
  }

  export type RegraCartelaCreateNestedManyWithoutCampanhaInput = {
    create?: XOR<RegraCartelaCreateWithoutCampanhaInput, RegraCartelaUncheckedCreateWithoutCampanhaInput> | RegraCartelaCreateWithoutCampanhaInput[] | RegraCartelaUncheckedCreateWithoutCampanhaInput[]
    connectOrCreate?: RegraCartelaCreateOrConnectWithoutCampanhaInput | RegraCartelaCreateOrConnectWithoutCampanhaInput[]
    createMany?: RegraCartelaCreateManyCampanhaInputEnvelope
    connect?: RegraCartelaWhereUniqueInput | RegraCartelaWhereUniqueInput[]
  }

  export type EnvioVendaCreateNestedManyWithoutCampanhaInput = {
    create?: XOR<EnvioVendaCreateWithoutCampanhaInput, EnvioVendaUncheckedCreateWithoutCampanhaInput> | EnvioVendaCreateWithoutCampanhaInput[] | EnvioVendaUncheckedCreateWithoutCampanhaInput[]
    connectOrCreate?: EnvioVendaCreateOrConnectWithoutCampanhaInput | EnvioVendaCreateOrConnectWithoutCampanhaInput[]
    createMany?: EnvioVendaCreateManyCampanhaInputEnvelope
    connect?: EnvioVendaWhereUniqueInput | EnvioVendaWhereUniqueInput[]
  }

  export type RelatorioFinanceiroCreateNestedManyWithoutCampanhaInput = {
    create?: XOR<RelatorioFinanceiroCreateWithoutCampanhaInput, RelatorioFinanceiroUncheckedCreateWithoutCampanhaInput> | RelatorioFinanceiroCreateWithoutCampanhaInput[] | RelatorioFinanceiroUncheckedCreateWithoutCampanhaInput[]
    connectOrCreate?: RelatorioFinanceiroCreateOrConnectWithoutCampanhaInput | RelatorioFinanceiroCreateOrConnectWithoutCampanhaInput[]
    createMany?: RelatorioFinanceiroCreateManyCampanhaInputEnvelope
    connect?: RelatorioFinanceiroWhereUniqueInput | RelatorioFinanceiroWhereUniqueInput[]
  }

  export type CartelaConcluidaCreateNestedManyWithoutCampanhaInput = {
    create?: XOR<CartelaConcluidaCreateWithoutCampanhaInput, CartelaConcluidaUncheckedCreateWithoutCampanhaInput> | CartelaConcluidaCreateWithoutCampanhaInput[] | CartelaConcluidaUncheckedCreateWithoutCampanhaInput[]
    connectOrCreate?: CartelaConcluidaCreateOrConnectWithoutCampanhaInput | CartelaConcluidaCreateOrConnectWithoutCampanhaInput[]
    createMany?: CartelaConcluidaCreateManyCampanhaInputEnvelope
    connect?: CartelaConcluidaWhereUniqueInput | CartelaConcluidaWhereUniqueInput[]
  }

  export type OpticaUncheckedCreateNestedManyWithoutCampanhasAlvoInput = {
    create?: XOR<OpticaCreateWithoutCampanhasAlvoInput, OpticaUncheckedCreateWithoutCampanhasAlvoInput> | OpticaCreateWithoutCampanhasAlvoInput[] | OpticaUncheckedCreateWithoutCampanhasAlvoInput[]
    connectOrCreate?: OpticaCreateOrConnectWithoutCampanhasAlvoInput | OpticaCreateOrConnectWithoutCampanhasAlvoInput[]
    connect?: OpticaWhereUniqueInput | OpticaWhereUniqueInput[]
  }

  export type RegraCartelaUncheckedCreateNestedManyWithoutCampanhaInput = {
    create?: XOR<RegraCartelaCreateWithoutCampanhaInput, RegraCartelaUncheckedCreateWithoutCampanhaInput> | RegraCartelaCreateWithoutCampanhaInput[] | RegraCartelaUncheckedCreateWithoutCampanhaInput[]
    connectOrCreate?: RegraCartelaCreateOrConnectWithoutCampanhaInput | RegraCartelaCreateOrConnectWithoutCampanhaInput[]
    createMany?: RegraCartelaCreateManyCampanhaInputEnvelope
    connect?: RegraCartelaWhereUniqueInput | RegraCartelaWhereUniqueInput[]
  }

  export type EnvioVendaUncheckedCreateNestedManyWithoutCampanhaInput = {
    create?: XOR<EnvioVendaCreateWithoutCampanhaInput, EnvioVendaUncheckedCreateWithoutCampanhaInput> | EnvioVendaCreateWithoutCampanhaInput[] | EnvioVendaUncheckedCreateWithoutCampanhaInput[]
    connectOrCreate?: EnvioVendaCreateOrConnectWithoutCampanhaInput | EnvioVendaCreateOrConnectWithoutCampanhaInput[]
    createMany?: EnvioVendaCreateManyCampanhaInputEnvelope
    connect?: EnvioVendaWhereUniqueInput | EnvioVendaWhereUniqueInput[]
  }

  export type RelatorioFinanceiroUncheckedCreateNestedManyWithoutCampanhaInput = {
    create?: XOR<RelatorioFinanceiroCreateWithoutCampanhaInput, RelatorioFinanceiroUncheckedCreateWithoutCampanhaInput> | RelatorioFinanceiroCreateWithoutCampanhaInput[] | RelatorioFinanceiroUncheckedCreateWithoutCampanhaInput[]
    connectOrCreate?: RelatorioFinanceiroCreateOrConnectWithoutCampanhaInput | RelatorioFinanceiroCreateOrConnectWithoutCampanhaInput[]
    createMany?: RelatorioFinanceiroCreateManyCampanhaInputEnvelope
    connect?: RelatorioFinanceiroWhereUniqueInput | RelatorioFinanceiroWhereUniqueInput[]
  }

  export type CartelaConcluidaUncheckedCreateNestedManyWithoutCampanhaInput = {
    create?: XOR<CartelaConcluidaCreateWithoutCampanhaInput, CartelaConcluidaUncheckedCreateWithoutCampanhaInput> | CartelaConcluidaCreateWithoutCampanhaInput[] | CartelaConcluidaUncheckedCreateWithoutCampanhaInput[]
    connectOrCreate?: CartelaConcluidaCreateOrConnectWithoutCampanhaInput | CartelaConcluidaCreateOrConnectWithoutCampanhaInput[]
    createMany?: CartelaConcluidaCreateManyCampanhaInputEnvelope
    connect?: CartelaConcluidaWhereUniqueInput | CartelaConcluidaWhereUniqueInput[]
  }

  export type DecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type OpticaUpdateManyWithoutCampanhasAlvoNestedInput = {
    create?: XOR<OpticaCreateWithoutCampanhasAlvoInput, OpticaUncheckedCreateWithoutCampanhasAlvoInput> | OpticaCreateWithoutCampanhasAlvoInput[] | OpticaUncheckedCreateWithoutCampanhasAlvoInput[]
    connectOrCreate?: OpticaCreateOrConnectWithoutCampanhasAlvoInput | OpticaCreateOrConnectWithoutCampanhasAlvoInput[]
    upsert?: OpticaUpsertWithWhereUniqueWithoutCampanhasAlvoInput | OpticaUpsertWithWhereUniqueWithoutCampanhasAlvoInput[]
    set?: OpticaWhereUniqueInput | OpticaWhereUniqueInput[]
    disconnect?: OpticaWhereUniqueInput | OpticaWhereUniqueInput[]
    delete?: OpticaWhereUniqueInput | OpticaWhereUniqueInput[]
    connect?: OpticaWhereUniqueInput | OpticaWhereUniqueInput[]
    update?: OpticaUpdateWithWhereUniqueWithoutCampanhasAlvoInput | OpticaUpdateWithWhereUniqueWithoutCampanhasAlvoInput[]
    updateMany?: OpticaUpdateManyWithWhereWithoutCampanhasAlvoInput | OpticaUpdateManyWithWhereWithoutCampanhasAlvoInput[]
    deleteMany?: OpticaScalarWhereInput | OpticaScalarWhereInput[]
  }

  export type RegraCartelaUpdateManyWithoutCampanhaNestedInput = {
    create?: XOR<RegraCartelaCreateWithoutCampanhaInput, RegraCartelaUncheckedCreateWithoutCampanhaInput> | RegraCartelaCreateWithoutCampanhaInput[] | RegraCartelaUncheckedCreateWithoutCampanhaInput[]
    connectOrCreate?: RegraCartelaCreateOrConnectWithoutCampanhaInput | RegraCartelaCreateOrConnectWithoutCampanhaInput[]
    upsert?: RegraCartelaUpsertWithWhereUniqueWithoutCampanhaInput | RegraCartelaUpsertWithWhereUniqueWithoutCampanhaInput[]
    createMany?: RegraCartelaCreateManyCampanhaInputEnvelope
    set?: RegraCartelaWhereUniqueInput | RegraCartelaWhereUniqueInput[]
    disconnect?: RegraCartelaWhereUniqueInput | RegraCartelaWhereUniqueInput[]
    delete?: RegraCartelaWhereUniqueInput | RegraCartelaWhereUniqueInput[]
    connect?: RegraCartelaWhereUniqueInput | RegraCartelaWhereUniqueInput[]
    update?: RegraCartelaUpdateWithWhereUniqueWithoutCampanhaInput | RegraCartelaUpdateWithWhereUniqueWithoutCampanhaInput[]
    updateMany?: RegraCartelaUpdateManyWithWhereWithoutCampanhaInput | RegraCartelaUpdateManyWithWhereWithoutCampanhaInput[]
    deleteMany?: RegraCartelaScalarWhereInput | RegraCartelaScalarWhereInput[]
  }

  export type EnvioVendaUpdateManyWithoutCampanhaNestedInput = {
    create?: XOR<EnvioVendaCreateWithoutCampanhaInput, EnvioVendaUncheckedCreateWithoutCampanhaInput> | EnvioVendaCreateWithoutCampanhaInput[] | EnvioVendaUncheckedCreateWithoutCampanhaInput[]
    connectOrCreate?: EnvioVendaCreateOrConnectWithoutCampanhaInput | EnvioVendaCreateOrConnectWithoutCampanhaInput[]
    upsert?: EnvioVendaUpsertWithWhereUniqueWithoutCampanhaInput | EnvioVendaUpsertWithWhereUniqueWithoutCampanhaInput[]
    createMany?: EnvioVendaCreateManyCampanhaInputEnvelope
    set?: EnvioVendaWhereUniqueInput | EnvioVendaWhereUniqueInput[]
    disconnect?: EnvioVendaWhereUniqueInput | EnvioVendaWhereUniqueInput[]
    delete?: EnvioVendaWhereUniqueInput | EnvioVendaWhereUniqueInput[]
    connect?: EnvioVendaWhereUniqueInput | EnvioVendaWhereUniqueInput[]
    update?: EnvioVendaUpdateWithWhereUniqueWithoutCampanhaInput | EnvioVendaUpdateWithWhereUniqueWithoutCampanhaInput[]
    updateMany?: EnvioVendaUpdateManyWithWhereWithoutCampanhaInput | EnvioVendaUpdateManyWithWhereWithoutCampanhaInput[]
    deleteMany?: EnvioVendaScalarWhereInput | EnvioVendaScalarWhereInput[]
  }

  export type RelatorioFinanceiroUpdateManyWithoutCampanhaNestedInput = {
    create?: XOR<RelatorioFinanceiroCreateWithoutCampanhaInput, RelatorioFinanceiroUncheckedCreateWithoutCampanhaInput> | RelatorioFinanceiroCreateWithoutCampanhaInput[] | RelatorioFinanceiroUncheckedCreateWithoutCampanhaInput[]
    connectOrCreate?: RelatorioFinanceiroCreateOrConnectWithoutCampanhaInput | RelatorioFinanceiroCreateOrConnectWithoutCampanhaInput[]
    upsert?: RelatorioFinanceiroUpsertWithWhereUniqueWithoutCampanhaInput | RelatorioFinanceiroUpsertWithWhereUniqueWithoutCampanhaInput[]
    createMany?: RelatorioFinanceiroCreateManyCampanhaInputEnvelope
    set?: RelatorioFinanceiroWhereUniqueInput | RelatorioFinanceiroWhereUniqueInput[]
    disconnect?: RelatorioFinanceiroWhereUniqueInput | RelatorioFinanceiroWhereUniqueInput[]
    delete?: RelatorioFinanceiroWhereUniqueInput | RelatorioFinanceiroWhereUniqueInput[]
    connect?: RelatorioFinanceiroWhereUniqueInput | RelatorioFinanceiroWhereUniqueInput[]
    update?: RelatorioFinanceiroUpdateWithWhereUniqueWithoutCampanhaInput | RelatorioFinanceiroUpdateWithWhereUniqueWithoutCampanhaInput[]
    updateMany?: RelatorioFinanceiroUpdateManyWithWhereWithoutCampanhaInput | RelatorioFinanceiroUpdateManyWithWhereWithoutCampanhaInput[]
    deleteMany?: RelatorioFinanceiroScalarWhereInput | RelatorioFinanceiroScalarWhereInput[]
  }

  export type CartelaConcluidaUpdateManyWithoutCampanhaNestedInput = {
    create?: XOR<CartelaConcluidaCreateWithoutCampanhaInput, CartelaConcluidaUncheckedCreateWithoutCampanhaInput> | CartelaConcluidaCreateWithoutCampanhaInput[] | CartelaConcluidaUncheckedCreateWithoutCampanhaInput[]
    connectOrCreate?: CartelaConcluidaCreateOrConnectWithoutCampanhaInput | CartelaConcluidaCreateOrConnectWithoutCampanhaInput[]
    upsert?: CartelaConcluidaUpsertWithWhereUniqueWithoutCampanhaInput | CartelaConcluidaUpsertWithWhereUniqueWithoutCampanhaInput[]
    createMany?: CartelaConcluidaCreateManyCampanhaInputEnvelope
    set?: CartelaConcluidaWhereUniqueInput | CartelaConcluidaWhereUniqueInput[]
    disconnect?: CartelaConcluidaWhereUniqueInput | CartelaConcluidaWhereUniqueInput[]
    delete?: CartelaConcluidaWhereUniqueInput | CartelaConcluidaWhereUniqueInput[]
    connect?: CartelaConcluidaWhereUniqueInput | CartelaConcluidaWhereUniqueInput[]
    update?: CartelaConcluidaUpdateWithWhereUniqueWithoutCampanhaInput | CartelaConcluidaUpdateWithWhereUniqueWithoutCampanhaInput[]
    updateMany?: CartelaConcluidaUpdateManyWithWhereWithoutCampanhaInput | CartelaConcluidaUpdateManyWithWhereWithoutCampanhaInput[]
    deleteMany?: CartelaConcluidaScalarWhereInput | CartelaConcluidaScalarWhereInput[]
  }

  export type OpticaUncheckedUpdateManyWithoutCampanhasAlvoNestedInput = {
    create?: XOR<OpticaCreateWithoutCampanhasAlvoInput, OpticaUncheckedCreateWithoutCampanhasAlvoInput> | OpticaCreateWithoutCampanhasAlvoInput[] | OpticaUncheckedCreateWithoutCampanhasAlvoInput[]
    connectOrCreate?: OpticaCreateOrConnectWithoutCampanhasAlvoInput | OpticaCreateOrConnectWithoutCampanhasAlvoInput[]
    upsert?: OpticaUpsertWithWhereUniqueWithoutCampanhasAlvoInput | OpticaUpsertWithWhereUniqueWithoutCampanhasAlvoInput[]
    set?: OpticaWhereUniqueInput | OpticaWhereUniqueInput[]
    disconnect?: OpticaWhereUniqueInput | OpticaWhereUniqueInput[]
    delete?: OpticaWhereUniqueInput | OpticaWhereUniqueInput[]
    connect?: OpticaWhereUniqueInput | OpticaWhereUniqueInput[]
    update?: OpticaUpdateWithWhereUniqueWithoutCampanhasAlvoInput | OpticaUpdateWithWhereUniqueWithoutCampanhasAlvoInput[]
    updateMany?: OpticaUpdateManyWithWhereWithoutCampanhasAlvoInput | OpticaUpdateManyWithWhereWithoutCampanhasAlvoInput[]
    deleteMany?: OpticaScalarWhereInput | OpticaScalarWhereInput[]
  }

  export type RegraCartelaUncheckedUpdateManyWithoutCampanhaNestedInput = {
    create?: XOR<RegraCartelaCreateWithoutCampanhaInput, RegraCartelaUncheckedCreateWithoutCampanhaInput> | RegraCartelaCreateWithoutCampanhaInput[] | RegraCartelaUncheckedCreateWithoutCampanhaInput[]
    connectOrCreate?: RegraCartelaCreateOrConnectWithoutCampanhaInput | RegraCartelaCreateOrConnectWithoutCampanhaInput[]
    upsert?: RegraCartelaUpsertWithWhereUniqueWithoutCampanhaInput | RegraCartelaUpsertWithWhereUniqueWithoutCampanhaInput[]
    createMany?: RegraCartelaCreateManyCampanhaInputEnvelope
    set?: RegraCartelaWhereUniqueInput | RegraCartelaWhereUniqueInput[]
    disconnect?: RegraCartelaWhereUniqueInput | RegraCartelaWhereUniqueInput[]
    delete?: RegraCartelaWhereUniqueInput | RegraCartelaWhereUniqueInput[]
    connect?: RegraCartelaWhereUniqueInput | RegraCartelaWhereUniqueInput[]
    update?: RegraCartelaUpdateWithWhereUniqueWithoutCampanhaInput | RegraCartelaUpdateWithWhereUniqueWithoutCampanhaInput[]
    updateMany?: RegraCartelaUpdateManyWithWhereWithoutCampanhaInput | RegraCartelaUpdateManyWithWhereWithoutCampanhaInput[]
    deleteMany?: RegraCartelaScalarWhereInput | RegraCartelaScalarWhereInput[]
  }

  export type EnvioVendaUncheckedUpdateManyWithoutCampanhaNestedInput = {
    create?: XOR<EnvioVendaCreateWithoutCampanhaInput, EnvioVendaUncheckedCreateWithoutCampanhaInput> | EnvioVendaCreateWithoutCampanhaInput[] | EnvioVendaUncheckedCreateWithoutCampanhaInput[]
    connectOrCreate?: EnvioVendaCreateOrConnectWithoutCampanhaInput | EnvioVendaCreateOrConnectWithoutCampanhaInput[]
    upsert?: EnvioVendaUpsertWithWhereUniqueWithoutCampanhaInput | EnvioVendaUpsertWithWhereUniqueWithoutCampanhaInput[]
    createMany?: EnvioVendaCreateManyCampanhaInputEnvelope
    set?: EnvioVendaWhereUniqueInput | EnvioVendaWhereUniqueInput[]
    disconnect?: EnvioVendaWhereUniqueInput | EnvioVendaWhereUniqueInput[]
    delete?: EnvioVendaWhereUniqueInput | EnvioVendaWhereUniqueInput[]
    connect?: EnvioVendaWhereUniqueInput | EnvioVendaWhereUniqueInput[]
    update?: EnvioVendaUpdateWithWhereUniqueWithoutCampanhaInput | EnvioVendaUpdateWithWhereUniqueWithoutCampanhaInput[]
    updateMany?: EnvioVendaUpdateManyWithWhereWithoutCampanhaInput | EnvioVendaUpdateManyWithWhereWithoutCampanhaInput[]
    deleteMany?: EnvioVendaScalarWhereInput | EnvioVendaScalarWhereInput[]
  }

  export type RelatorioFinanceiroUncheckedUpdateManyWithoutCampanhaNestedInput = {
    create?: XOR<RelatorioFinanceiroCreateWithoutCampanhaInput, RelatorioFinanceiroUncheckedCreateWithoutCampanhaInput> | RelatorioFinanceiroCreateWithoutCampanhaInput[] | RelatorioFinanceiroUncheckedCreateWithoutCampanhaInput[]
    connectOrCreate?: RelatorioFinanceiroCreateOrConnectWithoutCampanhaInput | RelatorioFinanceiroCreateOrConnectWithoutCampanhaInput[]
    upsert?: RelatorioFinanceiroUpsertWithWhereUniqueWithoutCampanhaInput | RelatorioFinanceiroUpsertWithWhereUniqueWithoutCampanhaInput[]
    createMany?: RelatorioFinanceiroCreateManyCampanhaInputEnvelope
    set?: RelatorioFinanceiroWhereUniqueInput | RelatorioFinanceiroWhereUniqueInput[]
    disconnect?: RelatorioFinanceiroWhereUniqueInput | RelatorioFinanceiroWhereUniqueInput[]
    delete?: RelatorioFinanceiroWhereUniqueInput | RelatorioFinanceiroWhereUniqueInput[]
    connect?: RelatorioFinanceiroWhereUniqueInput | RelatorioFinanceiroWhereUniqueInput[]
    update?: RelatorioFinanceiroUpdateWithWhereUniqueWithoutCampanhaInput | RelatorioFinanceiroUpdateWithWhereUniqueWithoutCampanhaInput[]
    updateMany?: RelatorioFinanceiroUpdateManyWithWhereWithoutCampanhaInput | RelatorioFinanceiroUpdateManyWithWhereWithoutCampanhaInput[]
    deleteMany?: RelatorioFinanceiroScalarWhereInput | RelatorioFinanceiroScalarWhereInput[]
  }

  export type CartelaConcluidaUncheckedUpdateManyWithoutCampanhaNestedInput = {
    create?: XOR<CartelaConcluidaCreateWithoutCampanhaInput, CartelaConcluidaUncheckedCreateWithoutCampanhaInput> | CartelaConcluidaCreateWithoutCampanhaInput[] | CartelaConcluidaUncheckedCreateWithoutCampanhaInput[]
    connectOrCreate?: CartelaConcluidaCreateOrConnectWithoutCampanhaInput | CartelaConcluidaCreateOrConnectWithoutCampanhaInput[]
    upsert?: CartelaConcluidaUpsertWithWhereUniqueWithoutCampanhaInput | CartelaConcluidaUpsertWithWhereUniqueWithoutCampanhaInput[]
    createMany?: CartelaConcluidaCreateManyCampanhaInputEnvelope
    set?: CartelaConcluidaWhereUniqueInput | CartelaConcluidaWhereUniqueInput[]
    disconnect?: CartelaConcluidaWhereUniqueInput | CartelaConcluidaWhereUniqueInput[]
    delete?: CartelaConcluidaWhereUniqueInput | CartelaConcluidaWhereUniqueInput[]
    connect?: CartelaConcluidaWhereUniqueInput | CartelaConcluidaWhereUniqueInput[]
    update?: CartelaConcluidaUpdateWithWhereUniqueWithoutCampanhaInput | CartelaConcluidaUpdateWithWhereUniqueWithoutCampanhaInput[]
    updateMany?: CartelaConcluidaUpdateManyWithWhereWithoutCampanhaInput | CartelaConcluidaUpdateManyWithWhereWithoutCampanhaInput[]
    deleteMany?: CartelaConcluidaScalarWhereInput | CartelaConcluidaScalarWhereInput[]
  }

  export type CampanhaCreateNestedOneWithoutCartelasInput = {
    create?: XOR<CampanhaCreateWithoutCartelasInput, CampanhaUncheckedCreateWithoutCartelasInput>
    connectOrCreate?: CampanhaCreateOrConnectWithoutCartelasInput
    connect?: CampanhaWhereUniqueInput
  }

  export type RequisitoCartelaCreateNestedManyWithoutRegraCartelaInput = {
    create?: XOR<RequisitoCartelaCreateWithoutRegraCartelaInput, RequisitoCartelaUncheckedCreateWithoutRegraCartelaInput> | RequisitoCartelaCreateWithoutRegraCartelaInput[] | RequisitoCartelaUncheckedCreateWithoutRegraCartelaInput[]
    connectOrCreate?: RequisitoCartelaCreateOrConnectWithoutRegraCartelaInput | RequisitoCartelaCreateOrConnectWithoutRegraCartelaInput[]
    createMany?: RequisitoCartelaCreateManyRegraCartelaInputEnvelope
    connect?: RequisitoCartelaWhereUniqueInput | RequisitoCartelaWhereUniqueInput[]
  }

  export type RequisitoCartelaUncheckedCreateNestedManyWithoutRegraCartelaInput = {
    create?: XOR<RequisitoCartelaCreateWithoutRegraCartelaInput, RequisitoCartelaUncheckedCreateWithoutRegraCartelaInput> | RequisitoCartelaCreateWithoutRegraCartelaInput[] | RequisitoCartelaUncheckedCreateWithoutRegraCartelaInput[]
    connectOrCreate?: RequisitoCartelaCreateOrConnectWithoutRegraCartelaInput | RequisitoCartelaCreateOrConnectWithoutRegraCartelaInput[]
    createMany?: RequisitoCartelaCreateManyRegraCartelaInputEnvelope
    connect?: RequisitoCartelaWhereUniqueInput | RequisitoCartelaWhereUniqueInput[]
  }

  export type CampanhaUpdateOneRequiredWithoutCartelasNestedInput = {
    create?: XOR<CampanhaCreateWithoutCartelasInput, CampanhaUncheckedCreateWithoutCartelasInput>
    connectOrCreate?: CampanhaCreateOrConnectWithoutCartelasInput
    upsert?: CampanhaUpsertWithoutCartelasInput
    connect?: CampanhaWhereUniqueInput
    update?: XOR<XOR<CampanhaUpdateToOneWithWhereWithoutCartelasInput, CampanhaUpdateWithoutCartelasInput>, CampanhaUncheckedUpdateWithoutCartelasInput>
  }

  export type RequisitoCartelaUpdateManyWithoutRegraCartelaNestedInput = {
    create?: XOR<RequisitoCartelaCreateWithoutRegraCartelaInput, RequisitoCartelaUncheckedCreateWithoutRegraCartelaInput> | RequisitoCartelaCreateWithoutRegraCartelaInput[] | RequisitoCartelaUncheckedCreateWithoutRegraCartelaInput[]
    connectOrCreate?: RequisitoCartelaCreateOrConnectWithoutRegraCartelaInput | RequisitoCartelaCreateOrConnectWithoutRegraCartelaInput[]
    upsert?: RequisitoCartelaUpsertWithWhereUniqueWithoutRegraCartelaInput | RequisitoCartelaUpsertWithWhereUniqueWithoutRegraCartelaInput[]
    createMany?: RequisitoCartelaCreateManyRegraCartelaInputEnvelope
    set?: RequisitoCartelaWhereUniqueInput | RequisitoCartelaWhereUniqueInput[]
    disconnect?: RequisitoCartelaWhereUniqueInput | RequisitoCartelaWhereUniqueInput[]
    delete?: RequisitoCartelaWhereUniqueInput | RequisitoCartelaWhereUniqueInput[]
    connect?: RequisitoCartelaWhereUniqueInput | RequisitoCartelaWhereUniqueInput[]
    update?: RequisitoCartelaUpdateWithWhereUniqueWithoutRegraCartelaInput | RequisitoCartelaUpdateWithWhereUniqueWithoutRegraCartelaInput[]
    updateMany?: RequisitoCartelaUpdateManyWithWhereWithoutRegraCartelaInput | RequisitoCartelaUpdateManyWithWhereWithoutRegraCartelaInput[]
    deleteMany?: RequisitoCartelaScalarWhereInput | RequisitoCartelaScalarWhereInput[]
  }

  export type RequisitoCartelaUncheckedUpdateManyWithoutRegraCartelaNestedInput = {
    create?: XOR<RequisitoCartelaCreateWithoutRegraCartelaInput, RequisitoCartelaUncheckedCreateWithoutRegraCartelaInput> | RequisitoCartelaCreateWithoutRegraCartelaInput[] | RequisitoCartelaUncheckedCreateWithoutRegraCartelaInput[]
    connectOrCreate?: RequisitoCartelaCreateOrConnectWithoutRegraCartelaInput | RequisitoCartelaCreateOrConnectWithoutRegraCartelaInput[]
    upsert?: RequisitoCartelaUpsertWithWhereUniqueWithoutRegraCartelaInput | RequisitoCartelaUpsertWithWhereUniqueWithoutRegraCartelaInput[]
    createMany?: RequisitoCartelaCreateManyRegraCartelaInputEnvelope
    set?: RequisitoCartelaWhereUniqueInput | RequisitoCartelaWhereUniqueInput[]
    disconnect?: RequisitoCartelaWhereUniqueInput | RequisitoCartelaWhereUniqueInput[]
    delete?: RequisitoCartelaWhereUniqueInput | RequisitoCartelaWhereUniqueInput[]
    connect?: RequisitoCartelaWhereUniqueInput | RequisitoCartelaWhereUniqueInput[]
    update?: RequisitoCartelaUpdateWithWhereUniqueWithoutRegraCartelaInput | RequisitoCartelaUpdateWithWhereUniqueWithoutRegraCartelaInput[]
    updateMany?: RequisitoCartelaUpdateManyWithWhereWithoutRegraCartelaInput | RequisitoCartelaUpdateManyWithWhereWithoutRegraCartelaInput[]
    deleteMany?: RequisitoCartelaScalarWhereInput | RequisitoCartelaScalarWhereInput[]
  }

  export type RegraCartelaCreateNestedOneWithoutRequisitosInput = {
    create?: XOR<RegraCartelaCreateWithoutRequisitosInput, RegraCartelaUncheckedCreateWithoutRequisitosInput>
    connectOrCreate?: RegraCartelaCreateOrConnectWithoutRequisitosInput
    connect?: RegraCartelaWhereUniqueInput
  }

  export type CondicaoRequisitoCreateNestedManyWithoutRequisitoInput = {
    create?: XOR<CondicaoRequisitoCreateWithoutRequisitoInput, CondicaoRequisitoUncheckedCreateWithoutRequisitoInput> | CondicaoRequisitoCreateWithoutRequisitoInput[] | CondicaoRequisitoUncheckedCreateWithoutRequisitoInput[]
    connectOrCreate?: CondicaoRequisitoCreateOrConnectWithoutRequisitoInput | CondicaoRequisitoCreateOrConnectWithoutRequisitoInput[]
    createMany?: CondicaoRequisitoCreateManyRequisitoInputEnvelope
    connect?: CondicaoRequisitoWhereUniqueInput | CondicaoRequisitoWhereUniqueInput[]
  }

  export type EnvioVendaCreateNestedManyWithoutRequisitoInput = {
    create?: XOR<EnvioVendaCreateWithoutRequisitoInput, EnvioVendaUncheckedCreateWithoutRequisitoInput> | EnvioVendaCreateWithoutRequisitoInput[] | EnvioVendaUncheckedCreateWithoutRequisitoInput[]
    connectOrCreate?: EnvioVendaCreateOrConnectWithoutRequisitoInput | EnvioVendaCreateOrConnectWithoutRequisitoInput[]
    createMany?: EnvioVendaCreateManyRequisitoInputEnvelope
    connect?: EnvioVendaWhereUniqueInput | EnvioVendaWhereUniqueInput[]
  }

  export type CondicaoRequisitoUncheckedCreateNestedManyWithoutRequisitoInput = {
    create?: XOR<CondicaoRequisitoCreateWithoutRequisitoInput, CondicaoRequisitoUncheckedCreateWithoutRequisitoInput> | CondicaoRequisitoCreateWithoutRequisitoInput[] | CondicaoRequisitoUncheckedCreateWithoutRequisitoInput[]
    connectOrCreate?: CondicaoRequisitoCreateOrConnectWithoutRequisitoInput | CondicaoRequisitoCreateOrConnectWithoutRequisitoInput[]
    createMany?: CondicaoRequisitoCreateManyRequisitoInputEnvelope
    connect?: CondicaoRequisitoWhereUniqueInput | CondicaoRequisitoWhereUniqueInput[]
  }

  export type EnvioVendaUncheckedCreateNestedManyWithoutRequisitoInput = {
    create?: XOR<EnvioVendaCreateWithoutRequisitoInput, EnvioVendaUncheckedCreateWithoutRequisitoInput> | EnvioVendaCreateWithoutRequisitoInput[] | EnvioVendaUncheckedCreateWithoutRequisitoInput[]
    connectOrCreate?: EnvioVendaCreateOrConnectWithoutRequisitoInput | EnvioVendaCreateOrConnectWithoutRequisitoInput[]
    createMany?: EnvioVendaCreateManyRequisitoInputEnvelope
    connect?: EnvioVendaWhereUniqueInput | EnvioVendaWhereUniqueInput[]
  }

  export type EnumTipoUnidadeFieldUpdateOperationsInput = {
    set?: $Enums.TipoUnidade
  }

  export type RegraCartelaUpdateOneRequiredWithoutRequisitosNestedInput = {
    create?: XOR<RegraCartelaCreateWithoutRequisitosInput, RegraCartelaUncheckedCreateWithoutRequisitosInput>
    connectOrCreate?: RegraCartelaCreateOrConnectWithoutRequisitosInput
    upsert?: RegraCartelaUpsertWithoutRequisitosInput
    connect?: RegraCartelaWhereUniqueInput
    update?: XOR<XOR<RegraCartelaUpdateToOneWithWhereWithoutRequisitosInput, RegraCartelaUpdateWithoutRequisitosInput>, RegraCartelaUncheckedUpdateWithoutRequisitosInput>
  }

  export type CondicaoRequisitoUpdateManyWithoutRequisitoNestedInput = {
    create?: XOR<CondicaoRequisitoCreateWithoutRequisitoInput, CondicaoRequisitoUncheckedCreateWithoutRequisitoInput> | CondicaoRequisitoCreateWithoutRequisitoInput[] | CondicaoRequisitoUncheckedCreateWithoutRequisitoInput[]
    connectOrCreate?: CondicaoRequisitoCreateOrConnectWithoutRequisitoInput | CondicaoRequisitoCreateOrConnectWithoutRequisitoInput[]
    upsert?: CondicaoRequisitoUpsertWithWhereUniqueWithoutRequisitoInput | CondicaoRequisitoUpsertWithWhereUniqueWithoutRequisitoInput[]
    createMany?: CondicaoRequisitoCreateManyRequisitoInputEnvelope
    set?: CondicaoRequisitoWhereUniqueInput | CondicaoRequisitoWhereUniqueInput[]
    disconnect?: CondicaoRequisitoWhereUniqueInput | CondicaoRequisitoWhereUniqueInput[]
    delete?: CondicaoRequisitoWhereUniqueInput | CondicaoRequisitoWhereUniqueInput[]
    connect?: CondicaoRequisitoWhereUniqueInput | CondicaoRequisitoWhereUniqueInput[]
    update?: CondicaoRequisitoUpdateWithWhereUniqueWithoutRequisitoInput | CondicaoRequisitoUpdateWithWhereUniqueWithoutRequisitoInput[]
    updateMany?: CondicaoRequisitoUpdateManyWithWhereWithoutRequisitoInput | CondicaoRequisitoUpdateManyWithWhereWithoutRequisitoInput[]
    deleteMany?: CondicaoRequisitoScalarWhereInput | CondicaoRequisitoScalarWhereInput[]
  }

  export type EnvioVendaUpdateManyWithoutRequisitoNestedInput = {
    create?: XOR<EnvioVendaCreateWithoutRequisitoInput, EnvioVendaUncheckedCreateWithoutRequisitoInput> | EnvioVendaCreateWithoutRequisitoInput[] | EnvioVendaUncheckedCreateWithoutRequisitoInput[]
    connectOrCreate?: EnvioVendaCreateOrConnectWithoutRequisitoInput | EnvioVendaCreateOrConnectWithoutRequisitoInput[]
    upsert?: EnvioVendaUpsertWithWhereUniqueWithoutRequisitoInput | EnvioVendaUpsertWithWhereUniqueWithoutRequisitoInput[]
    createMany?: EnvioVendaCreateManyRequisitoInputEnvelope
    set?: EnvioVendaWhereUniqueInput | EnvioVendaWhereUniqueInput[]
    disconnect?: EnvioVendaWhereUniqueInput | EnvioVendaWhereUniqueInput[]
    delete?: EnvioVendaWhereUniqueInput | EnvioVendaWhereUniqueInput[]
    connect?: EnvioVendaWhereUniqueInput | EnvioVendaWhereUniqueInput[]
    update?: EnvioVendaUpdateWithWhereUniqueWithoutRequisitoInput | EnvioVendaUpdateWithWhereUniqueWithoutRequisitoInput[]
    updateMany?: EnvioVendaUpdateManyWithWhereWithoutRequisitoInput | EnvioVendaUpdateManyWithWhereWithoutRequisitoInput[]
    deleteMany?: EnvioVendaScalarWhereInput | EnvioVendaScalarWhereInput[]
  }

  export type CondicaoRequisitoUncheckedUpdateManyWithoutRequisitoNestedInput = {
    create?: XOR<CondicaoRequisitoCreateWithoutRequisitoInput, CondicaoRequisitoUncheckedCreateWithoutRequisitoInput> | CondicaoRequisitoCreateWithoutRequisitoInput[] | CondicaoRequisitoUncheckedCreateWithoutRequisitoInput[]
    connectOrCreate?: CondicaoRequisitoCreateOrConnectWithoutRequisitoInput | CondicaoRequisitoCreateOrConnectWithoutRequisitoInput[]
    upsert?: CondicaoRequisitoUpsertWithWhereUniqueWithoutRequisitoInput | CondicaoRequisitoUpsertWithWhereUniqueWithoutRequisitoInput[]
    createMany?: CondicaoRequisitoCreateManyRequisitoInputEnvelope
    set?: CondicaoRequisitoWhereUniqueInput | CondicaoRequisitoWhereUniqueInput[]
    disconnect?: CondicaoRequisitoWhereUniqueInput | CondicaoRequisitoWhereUniqueInput[]
    delete?: CondicaoRequisitoWhereUniqueInput | CondicaoRequisitoWhereUniqueInput[]
    connect?: CondicaoRequisitoWhereUniqueInput | CondicaoRequisitoWhereUniqueInput[]
    update?: CondicaoRequisitoUpdateWithWhereUniqueWithoutRequisitoInput | CondicaoRequisitoUpdateWithWhereUniqueWithoutRequisitoInput[]
    updateMany?: CondicaoRequisitoUpdateManyWithWhereWithoutRequisitoInput | CondicaoRequisitoUpdateManyWithWhereWithoutRequisitoInput[]
    deleteMany?: CondicaoRequisitoScalarWhereInput | CondicaoRequisitoScalarWhereInput[]
  }

  export type EnvioVendaUncheckedUpdateManyWithoutRequisitoNestedInput = {
    create?: XOR<EnvioVendaCreateWithoutRequisitoInput, EnvioVendaUncheckedCreateWithoutRequisitoInput> | EnvioVendaCreateWithoutRequisitoInput[] | EnvioVendaUncheckedCreateWithoutRequisitoInput[]
    connectOrCreate?: EnvioVendaCreateOrConnectWithoutRequisitoInput | EnvioVendaCreateOrConnectWithoutRequisitoInput[]
    upsert?: EnvioVendaUpsertWithWhereUniqueWithoutRequisitoInput | EnvioVendaUpsertWithWhereUniqueWithoutRequisitoInput[]
    createMany?: EnvioVendaCreateManyRequisitoInputEnvelope
    set?: EnvioVendaWhereUniqueInput | EnvioVendaWhereUniqueInput[]
    disconnect?: EnvioVendaWhereUniqueInput | EnvioVendaWhereUniqueInput[]
    delete?: EnvioVendaWhereUniqueInput | EnvioVendaWhereUniqueInput[]
    connect?: EnvioVendaWhereUniqueInput | EnvioVendaWhereUniqueInput[]
    update?: EnvioVendaUpdateWithWhereUniqueWithoutRequisitoInput | EnvioVendaUpdateWithWhereUniqueWithoutRequisitoInput[]
    updateMany?: EnvioVendaUpdateManyWithWhereWithoutRequisitoInput | EnvioVendaUpdateManyWithWhereWithoutRequisitoInput[]
    deleteMany?: EnvioVendaScalarWhereInput | EnvioVendaScalarWhereInput[]
  }

  export type RequisitoCartelaCreateNestedOneWithoutCondicoesInput = {
    create?: XOR<RequisitoCartelaCreateWithoutCondicoesInput, RequisitoCartelaUncheckedCreateWithoutCondicoesInput>
    connectOrCreate?: RequisitoCartelaCreateOrConnectWithoutCondicoesInput
    connect?: RequisitoCartelaWhereUniqueInput
  }

  export type EnumCampoVerificacaoFieldUpdateOperationsInput = {
    set?: $Enums.CampoVerificacao
  }

  export type EnumOperadorCondicaoFieldUpdateOperationsInput = {
    set?: $Enums.OperadorCondicao
  }

  export type RequisitoCartelaUpdateOneRequiredWithoutCondicoesNestedInput = {
    create?: XOR<RequisitoCartelaCreateWithoutCondicoesInput, RequisitoCartelaUncheckedCreateWithoutCondicoesInput>
    connectOrCreate?: RequisitoCartelaCreateOrConnectWithoutCondicoesInput
    upsert?: RequisitoCartelaUpsertWithoutCondicoesInput
    connect?: RequisitoCartelaWhereUniqueInput
    update?: XOR<XOR<RequisitoCartelaUpdateToOneWithWhereWithoutCondicoesInput, RequisitoCartelaUpdateWithoutCondicoesInput>, RequisitoCartelaUncheckedUpdateWithoutCondicoesInput>
  }

  export type UsuarioCreateNestedOneWithoutEnviosVendaInput = {
    create?: XOR<UsuarioCreateWithoutEnviosVendaInput, UsuarioUncheckedCreateWithoutEnviosVendaInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutEnviosVendaInput
    connect?: UsuarioWhereUniqueInput
  }

  export type CampanhaCreateNestedOneWithoutEnviosVendaInput = {
    create?: XOR<CampanhaCreateWithoutEnviosVendaInput, CampanhaUncheckedCreateWithoutEnviosVendaInput>
    connectOrCreate?: CampanhaCreateOrConnectWithoutEnviosVendaInput
    connect?: CampanhaWhereUniqueInput
  }

  export type RequisitoCartelaCreateNestedOneWithoutEnviosVendaInput = {
    create?: XOR<RequisitoCartelaCreateWithoutEnviosVendaInput, RequisitoCartelaUncheckedCreateWithoutEnviosVendaInput>
    connectOrCreate?: RequisitoCartelaCreateOrConnectWithoutEnviosVendaInput
    connect?: RequisitoCartelaWhereUniqueInput
  }

  export type EnumStatusEnvioVendaFieldUpdateOperationsInput = {
    set?: $Enums.StatusEnvioVenda
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type UsuarioUpdateOneRequiredWithoutEnviosVendaNestedInput = {
    create?: XOR<UsuarioCreateWithoutEnviosVendaInput, UsuarioUncheckedCreateWithoutEnviosVendaInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutEnviosVendaInput
    upsert?: UsuarioUpsertWithoutEnviosVendaInput
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutEnviosVendaInput, UsuarioUpdateWithoutEnviosVendaInput>, UsuarioUncheckedUpdateWithoutEnviosVendaInput>
  }

  export type CampanhaUpdateOneRequiredWithoutEnviosVendaNestedInput = {
    create?: XOR<CampanhaCreateWithoutEnviosVendaInput, CampanhaUncheckedCreateWithoutEnviosVendaInput>
    connectOrCreate?: CampanhaCreateOrConnectWithoutEnviosVendaInput
    upsert?: CampanhaUpsertWithoutEnviosVendaInput
    connect?: CampanhaWhereUniqueInput
    update?: XOR<XOR<CampanhaUpdateToOneWithWhereWithoutEnviosVendaInput, CampanhaUpdateWithoutEnviosVendaInput>, CampanhaUncheckedUpdateWithoutEnviosVendaInput>
  }

  export type RequisitoCartelaUpdateOneRequiredWithoutEnviosVendaNestedInput = {
    create?: XOR<RequisitoCartelaCreateWithoutEnviosVendaInput, RequisitoCartelaUncheckedCreateWithoutEnviosVendaInput>
    connectOrCreate?: RequisitoCartelaCreateOrConnectWithoutEnviosVendaInput
    upsert?: RequisitoCartelaUpsertWithoutEnviosVendaInput
    connect?: RequisitoCartelaWhereUniqueInput
    update?: XOR<XOR<RequisitoCartelaUpdateToOneWithWhereWithoutEnviosVendaInput, RequisitoCartelaUpdateWithoutEnviosVendaInput>, RequisitoCartelaUncheckedUpdateWithoutEnviosVendaInput>
  }

  export type ResgatePremioCreateNestedManyWithoutPremioInput = {
    create?: XOR<ResgatePremioCreateWithoutPremioInput, ResgatePremioUncheckedCreateWithoutPremioInput> | ResgatePremioCreateWithoutPremioInput[] | ResgatePremioUncheckedCreateWithoutPremioInput[]
    connectOrCreate?: ResgatePremioCreateOrConnectWithoutPremioInput | ResgatePremioCreateOrConnectWithoutPremioInput[]
    createMany?: ResgatePremioCreateManyPremioInputEnvelope
    connect?: ResgatePremioWhereUniqueInput | ResgatePremioWhereUniqueInput[]
  }

  export type ResgatePremioUncheckedCreateNestedManyWithoutPremioInput = {
    create?: XOR<ResgatePremioCreateWithoutPremioInput, ResgatePremioUncheckedCreateWithoutPremioInput> | ResgatePremioCreateWithoutPremioInput[] | ResgatePremioUncheckedCreateWithoutPremioInput[]
    connectOrCreate?: ResgatePremioCreateOrConnectWithoutPremioInput | ResgatePremioCreateOrConnectWithoutPremioInput[]
    createMany?: ResgatePremioCreateManyPremioInputEnvelope
    connect?: ResgatePremioWhereUniqueInput | ResgatePremioWhereUniqueInput[]
  }

  export type ResgatePremioUpdateManyWithoutPremioNestedInput = {
    create?: XOR<ResgatePremioCreateWithoutPremioInput, ResgatePremioUncheckedCreateWithoutPremioInput> | ResgatePremioCreateWithoutPremioInput[] | ResgatePremioUncheckedCreateWithoutPremioInput[]
    connectOrCreate?: ResgatePremioCreateOrConnectWithoutPremioInput | ResgatePremioCreateOrConnectWithoutPremioInput[]
    upsert?: ResgatePremioUpsertWithWhereUniqueWithoutPremioInput | ResgatePremioUpsertWithWhereUniqueWithoutPremioInput[]
    createMany?: ResgatePremioCreateManyPremioInputEnvelope
    set?: ResgatePremioWhereUniqueInput | ResgatePremioWhereUniqueInput[]
    disconnect?: ResgatePremioWhereUniqueInput | ResgatePremioWhereUniqueInput[]
    delete?: ResgatePremioWhereUniqueInput | ResgatePremioWhereUniqueInput[]
    connect?: ResgatePremioWhereUniqueInput | ResgatePremioWhereUniqueInput[]
    update?: ResgatePremioUpdateWithWhereUniqueWithoutPremioInput | ResgatePremioUpdateWithWhereUniqueWithoutPremioInput[]
    updateMany?: ResgatePremioUpdateManyWithWhereWithoutPremioInput | ResgatePremioUpdateManyWithWhereWithoutPremioInput[]
    deleteMany?: ResgatePremioScalarWhereInput | ResgatePremioScalarWhereInput[]
  }

  export type ResgatePremioUncheckedUpdateManyWithoutPremioNestedInput = {
    create?: XOR<ResgatePremioCreateWithoutPremioInput, ResgatePremioUncheckedCreateWithoutPremioInput> | ResgatePremioCreateWithoutPremioInput[] | ResgatePremioUncheckedCreateWithoutPremioInput[]
    connectOrCreate?: ResgatePremioCreateOrConnectWithoutPremioInput | ResgatePremioCreateOrConnectWithoutPremioInput[]
    upsert?: ResgatePremioUpsertWithWhereUniqueWithoutPremioInput | ResgatePremioUpsertWithWhereUniqueWithoutPremioInput[]
    createMany?: ResgatePremioCreateManyPremioInputEnvelope
    set?: ResgatePremioWhereUniqueInput | ResgatePremioWhereUniqueInput[]
    disconnect?: ResgatePremioWhereUniqueInput | ResgatePremioWhereUniqueInput[]
    delete?: ResgatePremioWhereUniqueInput | ResgatePremioWhereUniqueInput[]
    connect?: ResgatePremioWhereUniqueInput | ResgatePremioWhereUniqueInput[]
    update?: ResgatePremioUpdateWithWhereUniqueWithoutPremioInput | ResgatePremioUpdateWithWhereUniqueWithoutPremioInput[]
    updateMany?: ResgatePremioUpdateManyWithWhereWithoutPremioInput | ResgatePremioUpdateManyWithWhereWithoutPremioInput[]
    deleteMany?: ResgatePremioScalarWhereInput | ResgatePremioScalarWhereInput[]
  }

  export type UsuarioCreateNestedOneWithoutResgatesPremiosInput = {
    create?: XOR<UsuarioCreateWithoutResgatesPremiosInput, UsuarioUncheckedCreateWithoutResgatesPremiosInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutResgatesPremiosInput
    connect?: UsuarioWhereUniqueInput
  }

  export type PremioCreateNestedOneWithoutResgatesInput = {
    create?: XOR<PremioCreateWithoutResgatesInput, PremioUncheckedCreateWithoutResgatesInput>
    connectOrCreate?: PremioCreateOrConnectWithoutResgatesInput
    connect?: PremioWhereUniqueInput
  }

  export type EnumStatusResgateFieldUpdateOperationsInput = {
    set?: $Enums.StatusResgate
  }

  export type UsuarioUpdateOneRequiredWithoutResgatesPremiosNestedInput = {
    create?: XOR<UsuarioCreateWithoutResgatesPremiosInput, UsuarioUncheckedCreateWithoutResgatesPremiosInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutResgatesPremiosInput
    upsert?: UsuarioUpsertWithoutResgatesPremiosInput
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutResgatesPremiosInput, UsuarioUpdateWithoutResgatesPremiosInput>, UsuarioUncheckedUpdateWithoutResgatesPremiosInput>
  }

  export type PremioUpdateOneRequiredWithoutResgatesNestedInput = {
    create?: XOR<PremioCreateWithoutResgatesInput, PremioUncheckedCreateWithoutResgatesInput>
    connectOrCreate?: PremioCreateOrConnectWithoutResgatesInput
    upsert?: PremioUpsertWithoutResgatesInput
    connect?: PremioWhereUniqueInput
    update?: XOR<XOR<PremioUpdateToOneWithWhereWithoutResgatesInput, PremioUpdateWithoutResgatesInput>, PremioUncheckedUpdateWithoutResgatesInput>
  }

  export type UsuarioCreateNestedOneWithoutRelatoriosFinanceirosInput = {
    create?: XOR<UsuarioCreateWithoutRelatoriosFinanceirosInput, UsuarioUncheckedCreateWithoutRelatoriosFinanceirosInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutRelatoriosFinanceirosInput
    connect?: UsuarioWhereUniqueInput
  }

  export type CampanhaCreateNestedOneWithoutRelatoriosFinanceirosInput = {
    create?: XOR<CampanhaCreateWithoutRelatoriosFinanceirosInput, CampanhaUncheckedCreateWithoutRelatoriosFinanceirosInput>
    connectOrCreate?: CampanhaCreateOrConnectWithoutRelatoriosFinanceirosInput
    connect?: CampanhaWhereUniqueInput
  }

  export type EnumStatusPagamentoFieldUpdateOperationsInput = {
    set?: $Enums.StatusPagamento
  }

  export type UsuarioUpdateOneRequiredWithoutRelatoriosFinanceirosNestedInput = {
    create?: XOR<UsuarioCreateWithoutRelatoriosFinanceirosInput, UsuarioUncheckedCreateWithoutRelatoriosFinanceirosInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutRelatoriosFinanceirosInput
    upsert?: UsuarioUpsertWithoutRelatoriosFinanceirosInput
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutRelatoriosFinanceirosInput, UsuarioUpdateWithoutRelatoriosFinanceirosInput>, UsuarioUncheckedUpdateWithoutRelatoriosFinanceirosInput>
  }

  export type CampanhaUpdateOneRequiredWithoutRelatoriosFinanceirosNestedInput = {
    create?: XOR<CampanhaCreateWithoutRelatoriosFinanceirosInput, CampanhaUncheckedCreateWithoutRelatoriosFinanceirosInput>
    connectOrCreate?: CampanhaCreateOrConnectWithoutRelatoriosFinanceirosInput
    upsert?: CampanhaUpsertWithoutRelatoriosFinanceirosInput
    connect?: CampanhaWhereUniqueInput
    update?: XOR<XOR<CampanhaUpdateToOneWithWhereWithoutRelatoriosFinanceirosInput, CampanhaUpdateWithoutRelatoriosFinanceirosInput>, CampanhaUncheckedUpdateWithoutRelatoriosFinanceirosInput>
  }

  export type UsuarioCreateNestedOneWithoutNotificacoesInput = {
    create?: XOR<UsuarioCreateWithoutNotificacoesInput, UsuarioUncheckedCreateWithoutNotificacoesInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutNotificacoesInput
    connect?: UsuarioWhereUniqueInput
  }

  export type UsuarioUpdateOneRequiredWithoutNotificacoesNestedInput = {
    create?: XOR<UsuarioCreateWithoutNotificacoesInput, UsuarioUncheckedCreateWithoutNotificacoesInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutNotificacoesInput
    upsert?: UsuarioUpsertWithoutNotificacoesInput
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutNotificacoesInput, UsuarioUpdateWithoutNotificacoesInput>, UsuarioUncheckedUpdateWithoutNotificacoesInput>
  }

  export type UsuarioCreateNestedOneWithoutCartelasConcluidasInput = {
    create?: XOR<UsuarioCreateWithoutCartelasConcluidasInput, UsuarioUncheckedCreateWithoutCartelasConcluidasInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutCartelasConcluidasInput
    connect?: UsuarioWhereUniqueInput
  }

  export type CampanhaCreateNestedOneWithoutCartelasConcluidasInput = {
    create?: XOR<CampanhaCreateWithoutCartelasConcluidasInput, CampanhaUncheckedCreateWithoutCartelasConcluidasInput>
    connectOrCreate?: CampanhaCreateOrConnectWithoutCartelasConcluidasInput
    connect?: CampanhaWhereUniqueInput
  }

  export type UsuarioUpdateOneRequiredWithoutCartelasConcluidasNestedInput = {
    create?: XOR<UsuarioCreateWithoutCartelasConcluidasInput, UsuarioUncheckedCreateWithoutCartelasConcluidasInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutCartelasConcluidasInput
    upsert?: UsuarioUpsertWithoutCartelasConcluidasInput
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutCartelasConcluidasInput, UsuarioUpdateWithoutCartelasConcluidasInput>, UsuarioUncheckedUpdateWithoutCartelasConcluidasInput>
  }

  export type CampanhaUpdateOneRequiredWithoutCartelasConcluidasNestedInput = {
    create?: XOR<CampanhaCreateWithoutCartelasConcluidasInput, CampanhaUncheckedCreateWithoutCartelasConcluidasInput>
    connectOrCreate?: CampanhaCreateOrConnectWithoutCartelasConcluidasInput
    upsert?: CampanhaUpsertWithoutCartelasConcluidasInput
    connect?: CampanhaWhereUniqueInput
    update?: XOR<XOR<CampanhaUpdateToOneWithWhereWithoutCartelasConcluidasInput, CampanhaUpdateWithoutCartelasConcluidasInput>, CampanhaUncheckedUpdateWithoutCartelasConcluidasInput>
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedEnumPapelUsuarioFilter<$PrismaModel = never> = {
    equals?: $Enums.PapelUsuario | EnumPapelUsuarioFieldRefInput<$PrismaModel>
    in?: $Enums.PapelUsuario[] | ListEnumPapelUsuarioFieldRefInput<$PrismaModel>
    notIn?: $Enums.PapelUsuario[] | ListEnumPapelUsuarioFieldRefInput<$PrismaModel>
    not?: NestedEnumPapelUsuarioFilter<$PrismaModel> | $Enums.PapelUsuario
  }

  export type NestedEnumStatusUsuarioFilter<$PrismaModel = never> = {
    equals?: $Enums.StatusUsuario | EnumStatusUsuarioFieldRefInput<$PrismaModel>
    in?: $Enums.StatusUsuario[] | ListEnumStatusUsuarioFieldRefInput<$PrismaModel>
    notIn?: $Enums.StatusUsuario[] | ListEnumStatusUsuarioFieldRefInput<$PrismaModel>
    not?: NestedEnumStatusUsuarioFilter<$PrismaModel> | $Enums.StatusUsuario
  }

  export type NestedEnumNivelVendedorFilter<$PrismaModel = never> = {
    equals?: $Enums.NivelVendedor | EnumNivelVendedorFieldRefInput<$PrismaModel>
    in?: $Enums.NivelVendedor[] | ListEnumNivelVendedorFieldRefInput<$PrismaModel>
    notIn?: $Enums.NivelVendedor[] | ListEnumNivelVendedorFieldRefInput<$PrismaModel>
    not?: NestedEnumNivelVendedorFilter<$PrismaModel> | $Enums.NivelVendedor
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedEnumPapelUsuarioWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.PapelUsuario | EnumPapelUsuarioFieldRefInput<$PrismaModel>
    in?: $Enums.PapelUsuario[] | ListEnumPapelUsuarioFieldRefInput<$PrismaModel>
    notIn?: $Enums.PapelUsuario[] | ListEnumPapelUsuarioFieldRefInput<$PrismaModel>
    not?: NestedEnumPapelUsuarioWithAggregatesFilter<$PrismaModel> | $Enums.PapelUsuario
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumPapelUsuarioFilter<$PrismaModel>
    _max?: NestedEnumPapelUsuarioFilter<$PrismaModel>
  }

  export type NestedEnumStatusUsuarioWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.StatusUsuario | EnumStatusUsuarioFieldRefInput<$PrismaModel>
    in?: $Enums.StatusUsuario[] | ListEnumStatusUsuarioFieldRefInput<$PrismaModel>
    notIn?: $Enums.StatusUsuario[] | ListEnumStatusUsuarioFieldRefInput<$PrismaModel>
    not?: NestedEnumStatusUsuarioWithAggregatesFilter<$PrismaModel> | $Enums.StatusUsuario
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumStatusUsuarioFilter<$PrismaModel>
    _max?: NestedEnumStatusUsuarioFilter<$PrismaModel>
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedEnumNivelVendedorWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.NivelVendedor | EnumNivelVendedorFieldRefInput<$PrismaModel>
    in?: $Enums.NivelVendedor[] | ListEnumNivelVendedorFieldRefInput<$PrismaModel>
    notIn?: $Enums.NivelVendedor[] | ListEnumNivelVendedorFieldRefInput<$PrismaModel>
    not?: NestedEnumNivelVendedorWithAggregatesFilter<$PrismaModel> | $Enums.NivelVendedor
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumNivelVendedorFilter<$PrismaModel>
    _max?: NestedEnumNivelVendedorFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }
  export type NestedJsonNullableFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<NestedJsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type NestedDecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type NestedDecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type NestedEnumTipoUnidadeFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoUnidade | EnumTipoUnidadeFieldRefInput<$PrismaModel>
    in?: $Enums.TipoUnidade[] | ListEnumTipoUnidadeFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoUnidade[] | ListEnumTipoUnidadeFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoUnidadeFilter<$PrismaModel> | $Enums.TipoUnidade
  }

  export type NestedEnumTipoUnidadeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoUnidade | EnumTipoUnidadeFieldRefInput<$PrismaModel>
    in?: $Enums.TipoUnidade[] | ListEnumTipoUnidadeFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoUnidade[] | ListEnumTipoUnidadeFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoUnidadeWithAggregatesFilter<$PrismaModel> | $Enums.TipoUnidade
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTipoUnidadeFilter<$PrismaModel>
    _max?: NestedEnumTipoUnidadeFilter<$PrismaModel>
  }

  export type NestedEnumCampoVerificacaoFilter<$PrismaModel = never> = {
    equals?: $Enums.CampoVerificacao | EnumCampoVerificacaoFieldRefInput<$PrismaModel>
    in?: $Enums.CampoVerificacao[] | ListEnumCampoVerificacaoFieldRefInput<$PrismaModel>
    notIn?: $Enums.CampoVerificacao[] | ListEnumCampoVerificacaoFieldRefInput<$PrismaModel>
    not?: NestedEnumCampoVerificacaoFilter<$PrismaModel> | $Enums.CampoVerificacao
  }

  export type NestedEnumOperadorCondicaoFilter<$PrismaModel = never> = {
    equals?: $Enums.OperadorCondicao | EnumOperadorCondicaoFieldRefInput<$PrismaModel>
    in?: $Enums.OperadorCondicao[] | ListEnumOperadorCondicaoFieldRefInput<$PrismaModel>
    notIn?: $Enums.OperadorCondicao[] | ListEnumOperadorCondicaoFieldRefInput<$PrismaModel>
    not?: NestedEnumOperadorCondicaoFilter<$PrismaModel> | $Enums.OperadorCondicao
  }

  export type NestedEnumCampoVerificacaoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.CampoVerificacao | EnumCampoVerificacaoFieldRefInput<$PrismaModel>
    in?: $Enums.CampoVerificacao[] | ListEnumCampoVerificacaoFieldRefInput<$PrismaModel>
    notIn?: $Enums.CampoVerificacao[] | ListEnumCampoVerificacaoFieldRefInput<$PrismaModel>
    not?: NestedEnumCampoVerificacaoWithAggregatesFilter<$PrismaModel> | $Enums.CampoVerificacao
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumCampoVerificacaoFilter<$PrismaModel>
    _max?: NestedEnumCampoVerificacaoFilter<$PrismaModel>
  }

  export type NestedEnumOperadorCondicaoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.OperadorCondicao | EnumOperadorCondicaoFieldRefInput<$PrismaModel>
    in?: $Enums.OperadorCondicao[] | ListEnumOperadorCondicaoFieldRefInput<$PrismaModel>
    notIn?: $Enums.OperadorCondicao[] | ListEnumOperadorCondicaoFieldRefInput<$PrismaModel>
    not?: NestedEnumOperadorCondicaoWithAggregatesFilter<$PrismaModel> | $Enums.OperadorCondicao
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumOperadorCondicaoFilter<$PrismaModel>
    _max?: NestedEnumOperadorCondicaoFilter<$PrismaModel>
  }

  export type NestedEnumStatusEnvioVendaFilter<$PrismaModel = never> = {
    equals?: $Enums.StatusEnvioVenda | EnumStatusEnvioVendaFieldRefInput<$PrismaModel>
    in?: $Enums.StatusEnvioVenda[] | ListEnumStatusEnvioVendaFieldRefInput<$PrismaModel>
    notIn?: $Enums.StatusEnvioVenda[] | ListEnumStatusEnvioVendaFieldRefInput<$PrismaModel>
    not?: NestedEnumStatusEnvioVendaFilter<$PrismaModel> | $Enums.StatusEnvioVenda
  }

  export type NestedEnumStatusEnvioVendaWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.StatusEnvioVenda | EnumStatusEnvioVendaFieldRefInput<$PrismaModel>
    in?: $Enums.StatusEnvioVenda[] | ListEnumStatusEnvioVendaFieldRefInput<$PrismaModel>
    notIn?: $Enums.StatusEnvioVenda[] | ListEnumStatusEnvioVendaFieldRefInput<$PrismaModel>
    not?: NestedEnumStatusEnvioVendaWithAggregatesFilter<$PrismaModel> | $Enums.StatusEnvioVenda
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumStatusEnvioVendaFilter<$PrismaModel>
    _max?: NestedEnumStatusEnvioVendaFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedEnumStatusResgateFilter<$PrismaModel = never> = {
    equals?: $Enums.StatusResgate | EnumStatusResgateFieldRefInput<$PrismaModel>
    in?: $Enums.StatusResgate[] | ListEnumStatusResgateFieldRefInput<$PrismaModel>
    notIn?: $Enums.StatusResgate[] | ListEnumStatusResgateFieldRefInput<$PrismaModel>
    not?: NestedEnumStatusResgateFilter<$PrismaModel> | $Enums.StatusResgate
  }

  export type NestedEnumStatusResgateWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.StatusResgate | EnumStatusResgateFieldRefInput<$PrismaModel>
    in?: $Enums.StatusResgate[] | ListEnumStatusResgateFieldRefInput<$PrismaModel>
    notIn?: $Enums.StatusResgate[] | ListEnumStatusResgateFieldRefInput<$PrismaModel>
    not?: NestedEnumStatusResgateWithAggregatesFilter<$PrismaModel> | $Enums.StatusResgate
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumStatusResgateFilter<$PrismaModel>
    _max?: NestedEnumStatusResgateFilter<$PrismaModel>
  }

  export type NestedEnumStatusPagamentoFilter<$PrismaModel = never> = {
    equals?: $Enums.StatusPagamento | EnumStatusPagamentoFieldRefInput<$PrismaModel>
    in?: $Enums.StatusPagamento[] | ListEnumStatusPagamentoFieldRefInput<$PrismaModel>
    notIn?: $Enums.StatusPagamento[] | ListEnumStatusPagamentoFieldRefInput<$PrismaModel>
    not?: NestedEnumStatusPagamentoFilter<$PrismaModel> | $Enums.StatusPagamento
  }

  export type NestedEnumStatusPagamentoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.StatusPagamento | EnumStatusPagamentoFieldRefInput<$PrismaModel>
    in?: $Enums.StatusPagamento[] | ListEnumStatusPagamentoFieldRefInput<$PrismaModel>
    notIn?: $Enums.StatusPagamento[] | ListEnumStatusPagamentoFieldRefInput<$PrismaModel>
    not?: NestedEnumStatusPagamentoWithAggregatesFilter<$PrismaModel> | $Enums.StatusPagamento
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumStatusPagamentoFilter<$PrismaModel>
    _max?: NestedEnumStatusPagamentoFilter<$PrismaModel>
  }

  export type OpticaCreateWithoutFiliaisInput = {
    id?: string
    cnpj: string
    nome: string
    endereco?: string | null
    cidade?: string | null
    estado?: string | null
    telefone?: string | null
    email?: string | null
    ativa?: boolean
    ehMatriz?: boolean
    criadoEm?: Date | string
    atualizadoEm?: Date | string
    matriz?: OpticaCreateNestedOneWithoutFiliaisInput
    usuarios?: UsuarioCreateNestedManyWithoutOpticaInput
    campanhasAlvo?: CampanhaCreateNestedManyWithoutOticasAlvoInput
  }

  export type OpticaUncheckedCreateWithoutFiliaisInput = {
    id?: string
    cnpj: string
    nome: string
    endereco?: string | null
    cidade?: string | null
    estado?: string | null
    telefone?: string | null
    email?: string | null
    ativa?: boolean
    ehMatriz?: boolean
    matrizId?: string | null
    criadoEm?: Date | string
    atualizadoEm?: Date | string
    usuarios?: UsuarioUncheckedCreateNestedManyWithoutOpticaInput
    campanhasAlvo?: CampanhaUncheckedCreateNestedManyWithoutOticasAlvoInput
  }

  export type OpticaCreateOrConnectWithoutFiliaisInput = {
    where: OpticaWhereUniqueInput
    create: XOR<OpticaCreateWithoutFiliaisInput, OpticaUncheckedCreateWithoutFiliaisInput>
  }

  export type OpticaCreateWithoutMatrizInput = {
    id?: string
    cnpj: string
    nome: string
    endereco?: string | null
    cidade?: string | null
    estado?: string | null
    telefone?: string | null
    email?: string | null
    ativa?: boolean
    ehMatriz?: boolean
    criadoEm?: Date | string
    atualizadoEm?: Date | string
    filiais?: OpticaCreateNestedManyWithoutMatrizInput
    usuarios?: UsuarioCreateNestedManyWithoutOpticaInput
    campanhasAlvo?: CampanhaCreateNestedManyWithoutOticasAlvoInput
  }

  export type OpticaUncheckedCreateWithoutMatrizInput = {
    id?: string
    cnpj: string
    nome: string
    endereco?: string | null
    cidade?: string | null
    estado?: string | null
    telefone?: string | null
    email?: string | null
    ativa?: boolean
    ehMatriz?: boolean
    criadoEm?: Date | string
    atualizadoEm?: Date | string
    filiais?: OpticaUncheckedCreateNestedManyWithoutMatrizInput
    usuarios?: UsuarioUncheckedCreateNestedManyWithoutOpticaInput
    campanhasAlvo?: CampanhaUncheckedCreateNestedManyWithoutOticasAlvoInput
  }

  export type OpticaCreateOrConnectWithoutMatrizInput = {
    where: OpticaWhereUniqueInput
    create: XOR<OpticaCreateWithoutMatrizInput, OpticaUncheckedCreateWithoutMatrizInput>
  }

  export type OpticaCreateManyMatrizInputEnvelope = {
    data: OpticaCreateManyMatrizInput | OpticaCreateManyMatrizInput[]
    skipDuplicates?: boolean
  }

  export type UsuarioCreateWithoutOpticaInput = {
    id?: string
    email: string
    cpf?: string | null
    nome: string
    whatsapp?: string | null
    senhaHash: string
    avatarUrl?: string | null
    papel: $Enums.PapelUsuario
    status?: $Enums.StatusUsuario
    saldoMoedinhas?: number
    rankingMoedinhas?: number
    nivel?: $Enums.NivelVendedor
    tokenResetarSenha?: string | null
    tokenResetarSenhaExpira?: Date | string | null
    mapeamentoPlanilhaSalvo?: NullableJsonNullValueInput | InputJsonValue
    criadoEm?: Date | string
    atualizadoEm?: Date | string
    gerente?: UsuarioCreateNestedOneWithoutVendedoresInput
    vendedores?: UsuarioCreateNestedManyWithoutGerenteInput
    enviosVenda?: EnvioVendaCreateNestedManyWithoutVendedorInput
    resgatesPremios?: ResgatePremioCreateNestedManyWithoutVendedorInput
    relatoriosFinanceiros?: RelatorioFinanceiroCreateNestedManyWithoutUsuarioInput
    notificacoes?: NotificacaoCreateNestedManyWithoutUsuarioInput
    cartelasConcluidas?: CartelaConcluidaCreateNestedManyWithoutVendedorInput
  }

  export type UsuarioUncheckedCreateWithoutOpticaInput = {
    id?: string
    email: string
    cpf?: string | null
    nome: string
    whatsapp?: string | null
    senhaHash: string
    avatarUrl?: string | null
    papel: $Enums.PapelUsuario
    status?: $Enums.StatusUsuario
    saldoMoedinhas?: number
    rankingMoedinhas?: number
    nivel?: $Enums.NivelVendedor
    tokenResetarSenha?: string | null
    tokenResetarSenhaExpira?: Date | string | null
    mapeamentoPlanilhaSalvo?: NullableJsonNullValueInput | InputJsonValue
    gerenteId?: string | null
    criadoEm?: Date | string
    atualizadoEm?: Date | string
    vendedores?: UsuarioUncheckedCreateNestedManyWithoutGerenteInput
    enviosVenda?: EnvioVendaUncheckedCreateNestedManyWithoutVendedorInput
    resgatesPremios?: ResgatePremioUncheckedCreateNestedManyWithoutVendedorInput
    relatoriosFinanceiros?: RelatorioFinanceiroUncheckedCreateNestedManyWithoutUsuarioInput
    notificacoes?: NotificacaoUncheckedCreateNestedManyWithoutUsuarioInput
    cartelasConcluidas?: CartelaConcluidaUncheckedCreateNestedManyWithoutVendedorInput
  }

  export type UsuarioCreateOrConnectWithoutOpticaInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutOpticaInput, UsuarioUncheckedCreateWithoutOpticaInput>
  }

  export type UsuarioCreateManyOpticaInputEnvelope = {
    data: UsuarioCreateManyOpticaInput | UsuarioCreateManyOpticaInput[]
    skipDuplicates?: boolean
  }

  export type CampanhaCreateWithoutOticasAlvoInput = {
    id?: string
    titulo: string
    descricao: string
    dataInicio: Date | string
    dataFim: Date | string
    moedinhasPorCartela: number
    pontosReaisPorCartela: Decimal | DecimalJsLike | number | string
    status?: string
    percentualGerente?: Decimal | DecimalJsLike | number | string
    paraTodasOticas?: boolean
    criadoEm?: Date | string
    atualizadoEm?: Date | string
    cartelas?: RegraCartelaCreateNestedManyWithoutCampanhaInput
    enviosVenda?: EnvioVendaCreateNestedManyWithoutCampanhaInput
    relatoriosFinanceiros?: RelatorioFinanceiroCreateNestedManyWithoutCampanhaInput
    cartelasConcluidas?: CartelaConcluidaCreateNestedManyWithoutCampanhaInput
  }

  export type CampanhaUncheckedCreateWithoutOticasAlvoInput = {
    id?: string
    titulo: string
    descricao: string
    dataInicio: Date | string
    dataFim: Date | string
    moedinhasPorCartela: number
    pontosReaisPorCartela: Decimal | DecimalJsLike | number | string
    status?: string
    percentualGerente?: Decimal | DecimalJsLike | number | string
    paraTodasOticas?: boolean
    criadoEm?: Date | string
    atualizadoEm?: Date | string
    cartelas?: RegraCartelaUncheckedCreateNestedManyWithoutCampanhaInput
    enviosVenda?: EnvioVendaUncheckedCreateNestedManyWithoutCampanhaInput
    relatoriosFinanceiros?: RelatorioFinanceiroUncheckedCreateNestedManyWithoutCampanhaInput
    cartelasConcluidas?: CartelaConcluidaUncheckedCreateNestedManyWithoutCampanhaInput
  }

  export type CampanhaCreateOrConnectWithoutOticasAlvoInput = {
    where: CampanhaWhereUniqueInput
    create: XOR<CampanhaCreateWithoutOticasAlvoInput, CampanhaUncheckedCreateWithoutOticasAlvoInput>
  }

  export type OpticaUpsertWithoutFiliaisInput = {
    update: XOR<OpticaUpdateWithoutFiliaisInput, OpticaUncheckedUpdateWithoutFiliaisInput>
    create: XOR<OpticaCreateWithoutFiliaisInput, OpticaUncheckedCreateWithoutFiliaisInput>
    where?: OpticaWhereInput
  }

  export type OpticaUpdateToOneWithWhereWithoutFiliaisInput = {
    where?: OpticaWhereInput
    data: XOR<OpticaUpdateWithoutFiliaisInput, OpticaUncheckedUpdateWithoutFiliaisInput>
  }

  export type OpticaUpdateWithoutFiliaisInput = {
    id?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    endereco?: NullableStringFieldUpdateOperationsInput | string | null
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    ativa?: BoolFieldUpdateOperationsInput | boolean
    ehMatriz?: BoolFieldUpdateOperationsInput | boolean
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    matriz?: OpticaUpdateOneWithoutFiliaisNestedInput
    usuarios?: UsuarioUpdateManyWithoutOpticaNestedInput
    campanhasAlvo?: CampanhaUpdateManyWithoutOticasAlvoNestedInput
  }

  export type OpticaUncheckedUpdateWithoutFiliaisInput = {
    id?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    endereco?: NullableStringFieldUpdateOperationsInput | string | null
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    ativa?: BoolFieldUpdateOperationsInput | boolean
    ehMatriz?: BoolFieldUpdateOperationsInput | boolean
    matrizId?: NullableStringFieldUpdateOperationsInput | string | null
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarios?: UsuarioUncheckedUpdateManyWithoutOpticaNestedInput
    campanhasAlvo?: CampanhaUncheckedUpdateManyWithoutOticasAlvoNestedInput
  }

  export type OpticaUpsertWithWhereUniqueWithoutMatrizInput = {
    where: OpticaWhereUniqueInput
    update: XOR<OpticaUpdateWithoutMatrizInput, OpticaUncheckedUpdateWithoutMatrizInput>
    create: XOR<OpticaCreateWithoutMatrizInput, OpticaUncheckedCreateWithoutMatrizInput>
  }

  export type OpticaUpdateWithWhereUniqueWithoutMatrizInput = {
    where: OpticaWhereUniqueInput
    data: XOR<OpticaUpdateWithoutMatrizInput, OpticaUncheckedUpdateWithoutMatrizInput>
  }

  export type OpticaUpdateManyWithWhereWithoutMatrizInput = {
    where: OpticaScalarWhereInput
    data: XOR<OpticaUpdateManyMutationInput, OpticaUncheckedUpdateManyWithoutMatrizInput>
  }

  export type OpticaScalarWhereInput = {
    AND?: OpticaScalarWhereInput | OpticaScalarWhereInput[]
    OR?: OpticaScalarWhereInput[]
    NOT?: OpticaScalarWhereInput | OpticaScalarWhereInput[]
    id?: StringFilter<"Optica"> | string
    cnpj?: StringFilter<"Optica"> | string
    nome?: StringFilter<"Optica"> | string
    endereco?: StringNullableFilter<"Optica"> | string | null
    cidade?: StringNullableFilter<"Optica"> | string | null
    estado?: StringNullableFilter<"Optica"> | string | null
    telefone?: StringNullableFilter<"Optica"> | string | null
    email?: StringNullableFilter<"Optica"> | string | null
    ativa?: BoolFilter<"Optica"> | boolean
    ehMatriz?: BoolFilter<"Optica"> | boolean
    matrizId?: StringNullableFilter<"Optica"> | string | null
    criadoEm?: DateTimeFilter<"Optica"> | Date | string
    atualizadoEm?: DateTimeFilter<"Optica"> | Date | string
  }

  export type UsuarioUpsertWithWhereUniqueWithoutOpticaInput = {
    where: UsuarioWhereUniqueInput
    update: XOR<UsuarioUpdateWithoutOpticaInput, UsuarioUncheckedUpdateWithoutOpticaInput>
    create: XOR<UsuarioCreateWithoutOpticaInput, UsuarioUncheckedCreateWithoutOpticaInput>
  }

  export type UsuarioUpdateWithWhereUniqueWithoutOpticaInput = {
    where: UsuarioWhereUniqueInput
    data: XOR<UsuarioUpdateWithoutOpticaInput, UsuarioUncheckedUpdateWithoutOpticaInput>
  }

  export type UsuarioUpdateManyWithWhereWithoutOpticaInput = {
    where: UsuarioScalarWhereInput
    data: XOR<UsuarioUpdateManyMutationInput, UsuarioUncheckedUpdateManyWithoutOpticaInput>
  }

  export type UsuarioScalarWhereInput = {
    AND?: UsuarioScalarWhereInput | UsuarioScalarWhereInput[]
    OR?: UsuarioScalarWhereInput[]
    NOT?: UsuarioScalarWhereInput | UsuarioScalarWhereInput[]
    id?: StringFilter<"Usuario"> | string
    email?: StringFilter<"Usuario"> | string
    cpf?: StringNullableFilter<"Usuario"> | string | null
    nome?: StringFilter<"Usuario"> | string
    whatsapp?: StringNullableFilter<"Usuario"> | string | null
    senhaHash?: StringFilter<"Usuario"> | string
    avatarUrl?: StringNullableFilter<"Usuario"> | string | null
    papel?: EnumPapelUsuarioFilter<"Usuario"> | $Enums.PapelUsuario
    status?: EnumStatusUsuarioFilter<"Usuario"> | $Enums.StatusUsuario
    saldoMoedinhas?: IntFilter<"Usuario"> | number
    rankingMoedinhas?: IntFilter<"Usuario"> | number
    nivel?: EnumNivelVendedorFilter<"Usuario"> | $Enums.NivelVendedor
    tokenResetarSenha?: StringNullableFilter<"Usuario"> | string | null
    tokenResetarSenhaExpira?: DateTimeNullableFilter<"Usuario"> | Date | string | null
    mapeamentoPlanilhaSalvo?: JsonNullableFilter<"Usuario">
    opticaId?: StringNullableFilter<"Usuario"> | string | null
    gerenteId?: StringNullableFilter<"Usuario"> | string | null
    criadoEm?: DateTimeFilter<"Usuario"> | Date | string
    atualizadoEm?: DateTimeFilter<"Usuario"> | Date | string
  }

  export type CampanhaUpsertWithWhereUniqueWithoutOticasAlvoInput = {
    where: CampanhaWhereUniqueInput
    update: XOR<CampanhaUpdateWithoutOticasAlvoInput, CampanhaUncheckedUpdateWithoutOticasAlvoInput>
    create: XOR<CampanhaCreateWithoutOticasAlvoInput, CampanhaUncheckedCreateWithoutOticasAlvoInput>
  }

  export type CampanhaUpdateWithWhereUniqueWithoutOticasAlvoInput = {
    where: CampanhaWhereUniqueInput
    data: XOR<CampanhaUpdateWithoutOticasAlvoInput, CampanhaUncheckedUpdateWithoutOticasAlvoInput>
  }

  export type CampanhaUpdateManyWithWhereWithoutOticasAlvoInput = {
    where: CampanhaScalarWhereInput
    data: XOR<CampanhaUpdateManyMutationInput, CampanhaUncheckedUpdateManyWithoutOticasAlvoInput>
  }

  export type CampanhaScalarWhereInput = {
    AND?: CampanhaScalarWhereInput | CampanhaScalarWhereInput[]
    OR?: CampanhaScalarWhereInput[]
    NOT?: CampanhaScalarWhereInput | CampanhaScalarWhereInput[]
    id?: StringFilter<"Campanha"> | string
    titulo?: StringFilter<"Campanha"> | string
    descricao?: StringFilter<"Campanha"> | string
    dataInicio?: DateTimeFilter<"Campanha"> | Date | string
    dataFim?: DateTimeFilter<"Campanha"> | Date | string
    moedinhasPorCartela?: IntFilter<"Campanha"> | number
    pontosReaisPorCartela?: DecimalFilter<"Campanha"> | Decimal | DecimalJsLike | number | string
    status?: StringFilter<"Campanha"> | string
    percentualGerente?: DecimalFilter<"Campanha"> | Decimal | DecimalJsLike | number | string
    paraTodasOticas?: BoolFilter<"Campanha"> | boolean
    criadoEm?: DateTimeFilter<"Campanha"> | Date | string
    atualizadoEm?: DateTimeFilter<"Campanha"> | Date | string
  }

  export type OpticaCreateWithoutUsuariosInput = {
    id?: string
    cnpj: string
    nome: string
    endereco?: string | null
    cidade?: string | null
    estado?: string | null
    telefone?: string | null
    email?: string | null
    ativa?: boolean
    ehMatriz?: boolean
    criadoEm?: Date | string
    atualizadoEm?: Date | string
    matriz?: OpticaCreateNestedOneWithoutFiliaisInput
    filiais?: OpticaCreateNestedManyWithoutMatrizInput
    campanhasAlvo?: CampanhaCreateNestedManyWithoutOticasAlvoInput
  }

  export type OpticaUncheckedCreateWithoutUsuariosInput = {
    id?: string
    cnpj: string
    nome: string
    endereco?: string | null
    cidade?: string | null
    estado?: string | null
    telefone?: string | null
    email?: string | null
    ativa?: boolean
    ehMatriz?: boolean
    matrizId?: string | null
    criadoEm?: Date | string
    atualizadoEm?: Date | string
    filiais?: OpticaUncheckedCreateNestedManyWithoutMatrizInput
    campanhasAlvo?: CampanhaUncheckedCreateNestedManyWithoutOticasAlvoInput
  }

  export type OpticaCreateOrConnectWithoutUsuariosInput = {
    where: OpticaWhereUniqueInput
    create: XOR<OpticaCreateWithoutUsuariosInput, OpticaUncheckedCreateWithoutUsuariosInput>
  }

  export type UsuarioCreateWithoutVendedoresInput = {
    id?: string
    email: string
    cpf?: string | null
    nome: string
    whatsapp?: string | null
    senhaHash: string
    avatarUrl?: string | null
    papel: $Enums.PapelUsuario
    status?: $Enums.StatusUsuario
    saldoMoedinhas?: number
    rankingMoedinhas?: number
    nivel?: $Enums.NivelVendedor
    tokenResetarSenha?: string | null
    tokenResetarSenhaExpira?: Date | string | null
    mapeamentoPlanilhaSalvo?: NullableJsonNullValueInput | InputJsonValue
    criadoEm?: Date | string
    atualizadoEm?: Date | string
    optica?: OpticaCreateNestedOneWithoutUsuariosInput
    gerente?: UsuarioCreateNestedOneWithoutVendedoresInput
    enviosVenda?: EnvioVendaCreateNestedManyWithoutVendedorInput
    resgatesPremios?: ResgatePremioCreateNestedManyWithoutVendedorInput
    relatoriosFinanceiros?: RelatorioFinanceiroCreateNestedManyWithoutUsuarioInput
    notificacoes?: NotificacaoCreateNestedManyWithoutUsuarioInput
    cartelasConcluidas?: CartelaConcluidaCreateNestedManyWithoutVendedorInput
  }

  export type UsuarioUncheckedCreateWithoutVendedoresInput = {
    id?: string
    email: string
    cpf?: string | null
    nome: string
    whatsapp?: string | null
    senhaHash: string
    avatarUrl?: string | null
    papel: $Enums.PapelUsuario
    status?: $Enums.StatusUsuario
    saldoMoedinhas?: number
    rankingMoedinhas?: number
    nivel?: $Enums.NivelVendedor
    tokenResetarSenha?: string | null
    tokenResetarSenhaExpira?: Date | string | null
    mapeamentoPlanilhaSalvo?: NullableJsonNullValueInput | InputJsonValue
    opticaId?: string | null
    gerenteId?: string | null
    criadoEm?: Date | string
    atualizadoEm?: Date | string
    enviosVenda?: EnvioVendaUncheckedCreateNestedManyWithoutVendedorInput
    resgatesPremios?: ResgatePremioUncheckedCreateNestedManyWithoutVendedorInput
    relatoriosFinanceiros?: RelatorioFinanceiroUncheckedCreateNestedManyWithoutUsuarioInput
    notificacoes?: NotificacaoUncheckedCreateNestedManyWithoutUsuarioInput
    cartelasConcluidas?: CartelaConcluidaUncheckedCreateNestedManyWithoutVendedorInput
  }

  export type UsuarioCreateOrConnectWithoutVendedoresInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutVendedoresInput, UsuarioUncheckedCreateWithoutVendedoresInput>
  }

  export type UsuarioCreateWithoutGerenteInput = {
    id?: string
    email: string
    cpf?: string | null
    nome: string
    whatsapp?: string | null
    senhaHash: string
    avatarUrl?: string | null
    papel: $Enums.PapelUsuario
    status?: $Enums.StatusUsuario
    saldoMoedinhas?: number
    rankingMoedinhas?: number
    nivel?: $Enums.NivelVendedor
    tokenResetarSenha?: string | null
    tokenResetarSenhaExpira?: Date | string | null
    mapeamentoPlanilhaSalvo?: NullableJsonNullValueInput | InputJsonValue
    criadoEm?: Date | string
    atualizadoEm?: Date | string
    optica?: OpticaCreateNestedOneWithoutUsuariosInput
    vendedores?: UsuarioCreateNestedManyWithoutGerenteInput
    enviosVenda?: EnvioVendaCreateNestedManyWithoutVendedorInput
    resgatesPremios?: ResgatePremioCreateNestedManyWithoutVendedorInput
    relatoriosFinanceiros?: RelatorioFinanceiroCreateNestedManyWithoutUsuarioInput
    notificacoes?: NotificacaoCreateNestedManyWithoutUsuarioInput
    cartelasConcluidas?: CartelaConcluidaCreateNestedManyWithoutVendedorInput
  }

  export type UsuarioUncheckedCreateWithoutGerenteInput = {
    id?: string
    email: string
    cpf?: string | null
    nome: string
    whatsapp?: string | null
    senhaHash: string
    avatarUrl?: string | null
    papel: $Enums.PapelUsuario
    status?: $Enums.StatusUsuario
    saldoMoedinhas?: number
    rankingMoedinhas?: number
    nivel?: $Enums.NivelVendedor
    tokenResetarSenha?: string | null
    tokenResetarSenhaExpira?: Date | string | null
    mapeamentoPlanilhaSalvo?: NullableJsonNullValueInput | InputJsonValue
    opticaId?: string | null
    criadoEm?: Date | string
    atualizadoEm?: Date | string
    vendedores?: UsuarioUncheckedCreateNestedManyWithoutGerenteInput
    enviosVenda?: EnvioVendaUncheckedCreateNestedManyWithoutVendedorInput
    resgatesPremios?: ResgatePremioUncheckedCreateNestedManyWithoutVendedorInput
    relatoriosFinanceiros?: RelatorioFinanceiroUncheckedCreateNestedManyWithoutUsuarioInput
    notificacoes?: NotificacaoUncheckedCreateNestedManyWithoutUsuarioInput
    cartelasConcluidas?: CartelaConcluidaUncheckedCreateNestedManyWithoutVendedorInput
  }

  export type UsuarioCreateOrConnectWithoutGerenteInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutGerenteInput, UsuarioUncheckedCreateWithoutGerenteInput>
  }

  export type UsuarioCreateManyGerenteInputEnvelope = {
    data: UsuarioCreateManyGerenteInput | UsuarioCreateManyGerenteInput[]
    skipDuplicates?: boolean
  }

  export type EnvioVendaCreateWithoutVendedorInput = {
    id?: string
    numeroPedido: string
    status?: $Enums.StatusEnvioVenda
    dataEnvio?: Date | string
    motivoRejeicao?: string | null
    infoConflito?: string | null
    numeroCartelaAtendida?: number | null
    dataValidacao?: Date | string | null
    criadoEm?: Date | string
    atualizadoEm?: Date | string
    campanha: CampanhaCreateNestedOneWithoutEnviosVendaInput
    requisito: RequisitoCartelaCreateNestedOneWithoutEnviosVendaInput
  }

  export type EnvioVendaUncheckedCreateWithoutVendedorInput = {
    id?: string
    numeroPedido: string
    status?: $Enums.StatusEnvioVenda
    dataEnvio?: Date | string
    motivoRejeicao?: string | null
    infoConflito?: string | null
    numeroCartelaAtendida?: number | null
    dataValidacao?: Date | string | null
    campanhaId: string
    requisitoId: string
    criadoEm?: Date | string
    atualizadoEm?: Date | string
  }

  export type EnvioVendaCreateOrConnectWithoutVendedorInput = {
    where: EnvioVendaWhereUniqueInput
    create: XOR<EnvioVendaCreateWithoutVendedorInput, EnvioVendaUncheckedCreateWithoutVendedorInput>
  }

  export type EnvioVendaCreateManyVendedorInputEnvelope = {
    data: EnvioVendaCreateManyVendedorInput | EnvioVendaCreateManyVendedorInput[]
    skipDuplicates?: boolean
  }

  export type ResgatePremioCreateWithoutVendedorInput = {
    id?: string
    dataSolicitacao?: Date | string
    status?: $Enums.StatusResgate
    dataAtualizacao?: Date | string
    motivoCancelamento?: string | null
    criadoEm?: Date | string
    atualizadoEm?: Date | string
    premio: PremioCreateNestedOneWithoutResgatesInput
  }

  export type ResgatePremioUncheckedCreateWithoutVendedorInput = {
    id?: string
    dataSolicitacao?: Date | string
    status?: $Enums.StatusResgate
    dataAtualizacao?: Date | string
    motivoCancelamento?: string | null
    premioId: string
    criadoEm?: Date | string
    atualizadoEm?: Date | string
  }

  export type ResgatePremioCreateOrConnectWithoutVendedorInput = {
    where: ResgatePremioWhereUniqueInput
    create: XOR<ResgatePremioCreateWithoutVendedorInput, ResgatePremioUncheckedCreateWithoutVendedorInput>
  }

  export type ResgatePremioCreateManyVendedorInputEnvelope = {
    data: ResgatePremioCreateManyVendedorInput | ResgatePremioCreateManyVendedorInput[]
    skipDuplicates?: boolean
  }

  export type RelatorioFinanceiroCreateWithoutUsuarioInput = {
    id?: string
    valor: Decimal | DecimalJsLike | number | string
    status?: $Enums.StatusPagamento
    tipo: string
    dataGerado?: Date | string
    dataPagamento?: Date | string | null
    observacoes?: string | null
    criadoEm?: Date | string
    atualizadoEm?: Date | string
    campanha: CampanhaCreateNestedOneWithoutRelatoriosFinanceirosInput
  }

  export type RelatorioFinanceiroUncheckedCreateWithoutUsuarioInput = {
    id?: string
    valor: Decimal | DecimalJsLike | number | string
    status?: $Enums.StatusPagamento
    tipo: string
    dataGerado?: Date | string
    dataPagamento?: Date | string | null
    observacoes?: string | null
    campanhaId: string
    criadoEm?: Date | string
    atualizadoEm?: Date | string
  }

  export type RelatorioFinanceiroCreateOrConnectWithoutUsuarioInput = {
    where: RelatorioFinanceiroWhereUniqueInput
    create: XOR<RelatorioFinanceiroCreateWithoutUsuarioInput, RelatorioFinanceiroUncheckedCreateWithoutUsuarioInput>
  }

  export type RelatorioFinanceiroCreateManyUsuarioInputEnvelope = {
    data: RelatorioFinanceiroCreateManyUsuarioInput | RelatorioFinanceiroCreateManyUsuarioInput[]
    skipDuplicates?: boolean
  }

  export type NotificacaoCreateWithoutUsuarioInput = {
    id?: string
    mensagem: string
    lida?: boolean
    linkUrl?: string | null
    dataCriacao?: Date | string
    criadoEm?: Date | string
    atualizadoEm?: Date | string
  }

  export type NotificacaoUncheckedCreateWithoutUsuarioInput = {
    id?: string
    mensagem: string
    lida?: boolean
    linkUrl?: string | null
    dataCriacao?: Date | string
    criadoEm?: Date | string
    atualizadoEm?: Date | string
  }

  export type NotificacaoCreateOrConnectWithoutUsuarioInput = {
    where: NotificacaoWhereUniqueInput
    create: XOR<NotificacaoCreateWithoutUsuarioInput, NotificacaoUncheckedCreateWithoutUsuarioInput>
  }

  export type NotificacaoCreateManyUsuarioInputEnvelope = {
    data: NotificacaoCreateManyUsuarioInput | NotificacaoCreateManyUsuarioInput[]
    skipDuplicates?: boolean
  }

  export type CartelaConcluidaCreateWithoutVendedorInput = {
    id?: string
    dataConclusao?: Date | string
    numeroCartela: number
    campanha: CampanhaCreateNestedOneWithoutCartelasConcluidasInput
  }

  export type CartelaConcluidaUncheckedCreateWithoutVendedorInput = {
    id?: string
    dataConclusao?: Date | string
    numeroCartela: number
    campanhaId: string
  }

  export type CartelaConcluidaCreateOrConnectWithoutVendedorInput = {
    where: CartelaConcluidaWhereUniqueInput
    create: XOR<CartelaConcluidaCreateWithoutVendedorInput, CartelaConcluidaUncheckedCreateWithoutVendedorInput>
  }

  export type CartelaConcluidaCreateManyVendedorInputEnvelope = {
    data: CartelaConcluidaCreateManyVendedorInput | CartelaConcluidaCreateManyVendedorInput[]
    skipDuplicates?: boolean
  }

  export type OpticaUpsertWithoutUsuariosInput = {
    update: XOR<OpticaUpdateWithoutUsuariosInput, OpticaUncheckedUpdateWithoutUsuariosInput>
    create: XOR<OpticaCreateWithoutUsuariosInput, OpticaUncheckedCreateWithoutUsuariosInput>
    where?: OpticaWhereInput
  }

  export type OpticaUpdateToOneWithWhereWithoutUsuariosInput = {
    where?: OpticaWhereInput
    data: XOR<OpticaUpdateWithoutUsuariosInput, OpticaUncheckedUpdateWithoutUsuariosInput>
  }

  export type OpticaUpdateWithoutUsuariosInput = {
    id?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    endereco?: NullableStringFieldUpdateOperationsInput | string | null
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    ativa?: BoolFieldUpdateOperationsInput | boolean
    ehMatriz?: BoolFieldUpdateOperationsInput | boolean
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    matriz?: OpticaUpdateOneWithoutFiliaisNestedInput
    filiais?: OpticaUpdateManyWithoutMatrizNestedInput
    campanhasAlvo?: CampanhaUpdateManyWithoutOticasAlvoNestedInput
  }

  export type OpticaUncheckedUpdateWithoutUsuariosInput = {
    id?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    endereco?: NullableStringFieldUpdateOperationsInput | string | null
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    ativa?: BoolFieldUpdateOperationsInput | boolean
    ehMatriz?: BoolFieldUpdateOperationsInput | boolean
    matrizId?: NullableStringFieldUpdateOperationsInput | string | null
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    filiais?: OpticaUncheckedUpdateManyWithoutMatrizNestedInput
    campanhasAlvo?: CampanhaUncheckedUpdateManyWithoutOticasAlvoNestedInput
  }

  export type UsuarioUpsertWithoutVendedoresInput = {
    update: XOR<UsuarioUpdateWithoutVendedoresInput, UsuarioUncheckedUpdateWithoutVendedoresInput>
    create: XOR<UsuarioCreateWithoutVendedoresInput, UsuarioUncheckedCreateWithoutVendedoresInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutVendedoresInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutVendedoresInput, UsuarioUncheckedUpdateWithoutVendedoresInput>
  }

  export type UsuarioUpdateWithoutVendedoresInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    nome?: StringFieldUpdateOperationsInput | string
    whatsapp?: NullableStringFieldUpdateOperationsInput | string | null
    senhaHash?: StringFieldUpdateOperationsInput | string
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    papel?: EnumPapelUsuarioFieldUpdateOperationsInput | $Enums.PapelUsuario
    status?: EnumStatusUsuarioFieldUpdateOperationsInput | $Enums.StatusUsuario
    saldoMoedinhas?: IntFieldUpdateOperationsInput | number
    rankingMoedinhas?: IntFieldUpdateOperationsInput | number
    nivel?: EnumNivelVendedorFieldUpdateOperationsInput | $Enums.NivelVendedor
    tokenResetarSenha?: NullableStringFieldUpdateOperationsInput | string | null
    tokenResetarSenhaExpira?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    mapeamentoPlanilhaSalvo?: NullableJsonNullValueInput | InputJsonValue
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    optica?: OpticaUpdateOneWithoutUsuariosNestedInput
    gerente?: UsuarioUpdateOneWithoutVendedoresNestedInput
    enviosVenda?: EnvioVendaUpdateManyWithoutVendedorNestedInput
    resgatesPremios?: ResgatePremioUpdateManyWithoutVendedorNestedInput
    relatoriosFinanceiros?: RelatorioFinanceiroUpdateManyWithoutUsuarioNestedInput
    notificacoes?: NotificacaoUpdateManyWithoutUsuarioNestedInput
    cartelasConcluidas?: CartelaConcluidaUpdateManyWithoutVendedorNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutVendedoresInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    nome?: StringFieldUpdateOperationsInput | string
    whatsapp?: NullableStringFieldUpdateOperationsInput | string | null
    senhaHash?: StringFieldUpdateOperationsInput | string
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    papel?: EnumPapelUsuarioFieldUpdateOperationsInput | $Enums.PapelUsuario
    status?: EnumStatusUsuarioFieldUpdateOperationsInput | $Enums.StatusUsuario
    saldoMoedinhas?: IntFieldUpdateOperationsInput | number
    rankingMoedinhas?: IntFieldUpdateOperationsInput | number
    nivel?: EnumNivelVendedorFieldUpdateOperationsInput | $Enums.NivelVendedor
    tokenResetarSenha?: NullableStringFieldUpdateOperationsInput | string | null
    tokenResetarSenhaExpira?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    mapeamentoPlanilhaSalvo?: NullableJsonNullValueInput | InputJsonValue
    opticaId?: NullableStringFieldUpdateOperationsInput | string | null
    gerenteId?: NullableStringFieldUpdateOperationsInput | string | null
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    enviosVenda?: EnvioVendaUncheckedUpdateManyWithoutVendedorNestedInput
    resgatesPremios?: ResgatePremioUncheckedUpdateManyWithoutVendedorNestedInput
    relatoriosFinanceiros?: RelatorioFinanceiroUncheckedUpdateManyWithoutUsuarioNestedInput
    notificacoes?: NotificacaoUncheckedUpdateManyWithoutUsuarioNestedInput
    cartelasConcluidas?: CartelaConcluidaUncheckedUpdateManyWithoutVendedorNestedInput
  }

  export type UsuarioUpsertWithWhereUniqueWithoutGerenteInput = {
    where: UsuarioWhereUniqueInput
    update: XOR<UsuarioUpdateWithoutGerenteInput, UsuarioUncheckedUpdateWithoutGerenteInput>
    create: XOR<UsuarioCreateWithoutGerenteInput, UsuarioUncheckedCreateWithoutGerenteInput>
  }

  export type UsuarioUpdateWithWhereUniqueWithoutGerenteInput = {
    where: UsuarioWhereUniqueInput
    data: XOR<UsuarioUpdateWithoutGerenteInput, UsuarioUncheckedUpdateWithoutGerenteInput>
  }

  export type UsuarioUpdateManyWithWhereWithoutGerenteInput = {
    where: UsuarioScalarWhereInput
    data: XOR<UsuarioUpdateManyMutationInput, UsuarioUncheckedUpdateManyWithoutGerenteInput>
  }

  export type EnvioVendaUpsertWithWhereUniqueWithoutVendedorInput = {
    where: EnvioVendaWhereUniqueInput
    update: XOR<EnvioVendaUpdateWithoutVendedorInput, EnvioVendaUncheckedUpdateWithoutVendedorInput>
    create: XOR<EnvioVendaCreateWithoutVendedorInput, EnvioVendaUncheckedCreateWithoutVendedorInput>
  }

  export type EnvioVendaUpdateWithWhereUniqueWithoutVendedorInput = {
    where: EnvioVendaWhereUniqueInput
    data: XOR<EnvioVendaUpdateWithoutVendedorInput, EnvioVendaUncheckedUpdateWithoutVendedorInput>
  }

  export type EnvioVendaUpdateManyWithWhereWithoutVendedorInput = {
    where: EnvioVendaScalarWhereInput
    data: XOR<EnvioVendaUpdateManyMutationInput, EnvioVendaUncheckedUpdateManyWithoutVendedorInput>
  }

  export type EnvioVendaScalarWhereInput = {
    AND?: EnvioVendaScalarWhereInput | EnvioVendaScalarWhereInput[]
    OR?: EnvioVendaScalarWhereInput[]
    NOT?: EnvioVendaScalarWhereInput | EnvioVendaScalarWhereInput[]
    id?: StringFilter<"EnvioVenda"> | string
    numeroPedido?: StringFilter<"EnvioVenda"> | string
    status?: EnumStatusEnvioVendaFilter<"EnvioVenda"> | $Enums.StatusEnvioVenda
    dataEnvio?: DateTimeFilter<"EnvioVenda"> | Date | string
    motivoRejeicao?: StringNullableFilter<"EnvioVenda"> | string | null
    infoConflito?: StringNullableFilter<"EnvioVenda"> | string | null
    numeroCartelaAtendida?: IntNullableFilter<"EnvioVenda"> | number | null
    dataValidacao?: DateTimeNullableFilter<"EnvioVenda"> | Date | string | null
    vendedorId?: StringFilter<"EnvioVenda"> | string
    campanhaId?: StringFilter<"EnvioVenda"> | string
    requisitoId?: StringFilter<"EnvioVenda"> | string
    criadoEm?: DateTimeFilter<"EnvioVenda"> | Date | string
    atualizadoEm?: DateTimeFilter<"EnvioVenda"> | Date | string
  }

  export type ResgatePremioUpsertWithWhereUniqueWithoutVendedorInput = {
    where: ResgatePremioWhereUniqueInput
    update: XOR<ResgatePremioUpdateWithoutVendedorInput, ResgatePremioUncheckedUpdateWithoutVendedorInput>
    create: XOR<ResgatePremioCreateWithoutVendedorInput, ResgatePremioUncheckedCreateWithoutVendedorInput>
  }

  export type ResgatePremioUpdateWithWhereUniqueWithoutVendedorInput = {
    where: ResgatePremioWhereUniqueInput
    data: XOR<ResgatePremioUpdateWithoutVendedorInput, ResgatePremioUncheckedUpdateWithoutVendedorInput>
  }

  export type ResgatePremioUpdateManyWithWhereWithoutVendedorInput = {
    where: ResgatePremioScalarWhereInput
    data: XOR<ResgatePremioUpdateManyMutationInput, ResgatePremioUncheckedUpdateManyWithoutVendedorInput>
  }

  export type ResgatePremioScalarWhereInput = {
    AND?: ResgatePremioScalarWhereInput | ResgatePremioScalarWhereInput[]
    OR?: ResgatePremioScalarWhereInput[]
    NOT?: ResgatePremioScalarWhereInput | ResgatePremioScalarWhereInput[]
    id?: StringFilter<"ResgatePremio"> | string
    dataSolicitacao?: DateTimeFilter<"ResgatePremio"> | Date | string
    status?: EnumStatusResgateFilter<"ResgatePremio"> | $Enums.StatusResgate
    dataAtualizacao?: DateTimeFilter<"ResgatePremio"> | Date | string
    motivoCancelamento?: StringNullableFilter<"ResgatePremio"> | string | null
    vendedorId?: StringFilter<"ResgatePremio"> | string
    premioId?: StringFilter<"ResgatePremio"> | string
    criadoEm?: DateTimeFilter<"ResgatePremio"> | Date | string
    atualizadoEm?: DateTimeFilter<"ResgatePremio"> | Date | string
  }

  export type RelatorioFinanceiroUpsertWithWhereUniqueWithoutUsuarioInput = {
    where: RelatorioFinanceiroWhereUniqueInput
    update: XOR<RelatorioFinanceiroUpdateWithoutUsuarioInput, RelatorioFinanceiroUncheckedUpdateWithoutUsuarioInput>
    create: XOR<RelatorioFinanceiroCreateWithoutUsuarioInput, RelatorioFinanceiroUncheckedCreateWithoutUsuarioInput>
  }

  export type RelatorioFinanceiroUpdateWithWhereUniqueWithoutUsuarioInput = {
    where: RelatorioFinanceiroWhereUniqueInput
    data: XOR<RelatorioFinanceiroUpdateWithoutUsuarioInput, RelatorioFinanceiroUncheckedUpdateWithoutUsuarioInput>
  }

  export type RelatorioFinanceiroUpdateManyWithWhereWithoutUsuarioInput = {
    where: RelatorioFinanceiroScalarWhereInput
    data: XOR<RelatorioFinanceiroUpdateManyMutationInput, RelatorioFinanceiroUncheckedUpdateManyWithoutUsuarioInput>
  }

  export type RelatorioFinanceiroScalarWhereInput = {
    AND?: RelatorioFinanceiroScalarWhereInput | RelatorioFinanceiroScalarWhereInput[]
    OR?: RelatorioFinanceiroScalarWhereInput[]
    NOT?: RelatorioFinanceiroScalarWhereInput | RelatorioFinanceiroScalarWhereInput[]
    id?: StringFilter<"RelatorioFinanceiro"> | string
    valor?: DecimalFilter<"RelatorioFinanceiro"> | Decimal | DecimalJsLike | number | string
    status?: EnumStatusPagamentoFilter<"RelatorioFinanceiro"> | $Enums.StatusPagamento
    tipo?: StringFilter<"RelatorioFinanceiro"> | string
    dataGerado?: DateTimeFilter<"RelatorioFinanceiro"> | Date | string
    dataPagamento?: DateTimeNullableFilter<"RelatorioFinanceiro"> | Date | string | null
    observacoes?: StringNullableFilter<"RelatorioFinanceiro"> | string | null
    usuarioId?: StringFilter<"RelatorioFinanceiro"> | string
    campanhaId?: StringFilter<"RelatorioFinanceiro"> | string
    criadoEm?: DateTimeFilter<"RelatorioFinanceiro"> | Date | string
    atualizadoEm?: DateTimeFilter<"RelatorioFinanceiro"> | Date | string
  }

  export type NotificacaoUpsertWithWhereUniqueWithoutUsuarioInput = {
    where: NotificacaoWhereUniqueInput
    update: XOR<NotificacaoUpdateWithoutUsuarioInput, NotificacaoUncheckedUpdateWithoutUsuarioInput>
    create: XOR<NotificacaoCreateWithoutUsuarioInput, NotificacaoUncheckedCreateWithoutUsuarioInput>
  }

  export type NotificacaoUpdateWithWhereUniqueWithoutUsuarioInput = {
    where: NotificacaoWhereUniqueInput
    data: XOR<NotificacaoUpdateWithoutUsuarioInput, NotificacaoUncheckedUpdateWithoutUsuarioInput>
  }

  export type NotificacaoUpdateManyWithWhereWithoutUsuarioInput = {
    where: NotificacaoScalarWhereInput
    data: XOR<NotificacaoUpdateManyMutationInput, NotificacaoUncheckedUpdateManyWithoutUsuarioInput>
  }

  export type NotificacaoScalarWhereInput = {
    AND?: NotificacaoScalarWhereInput | NotificacaoScalarWhereInput[]
    OR?: NotificacaoScalarWhereInput[]
    NOT?: NotificacaoScalarWhereInput | NotificacaoScalarWhereInput[]
    id?: StringFilter<"Notificacao"> | string
    mensagem?: StringFilter<"Notificacao"> | string
    lida?: BoolFilter<"Notificacao"> | boolean
    linkUrl?: StringNullableFilter<"Notificacao"> | string | null
    dataCriacao?: DateTimeFilter<"Notificacao"> | Date | string
    usuarioId?: StringFilter<"Notificacao"> | string
    criadoEm?: DateTimeFilter<"Notificacao"> | Date | string
    atualizadoEm?: DateTimeFilter<"Notificacao"> | Date | string
  }

  export type CartelaConcluidaUpsertWithWhereUniqueWithoutVendedorInput = {
    where: CartelaConcluidaWhereUniqueInput
    update: XOR<CartelaConcluidaUpdateWithoutVendedorInput, CartelaConcluidaUncheckedUpdateWithoutVendedorInput>
    create: XOR<CartelaConcluidaCreateWithoutVendedorInput, CartelaConcluidaUncheckedCreateWithoutVendedorInput>
  }

  export type CartelaConcluidaUpdateWithWhereUniqueWithoutVendedorInput = {
    where: CartelaConcluidaWhereUniqueInput
    data: XOR<CartelaConcluidaUpdateWithoutVendedorInput, CartelaConcluidaUncheckedUpdateWithoutVendedorInput>
  }

  export type CartelaConcluidaUpdateManyWithWhereWithoutVendedorInput = {
    where: CartelaConcluidaScalarWhereInput
    data: XOR<CartelaConcluidaUpdateManyMutationInput, CartelaConcluidaUncheckedUpdateManyWithoutVendedorInput>
  }

  export type CartelaConcluidaScalarWhereInput = {
    AND?: CartelaConcluidaScalarWhereInput | CartelaConcluidaScalarWhereInput[]
    OR?: CartelaConcluidaScalarWhereInput[]
    NOT?: CartelaConcluidaScalarWhereInput | CartelaConcluidaScalarWhereInput[]
    id?: StringFilter<"CartelaConcluida"> | string
    dataConclusao?: DateTimeFilter<"CartelaConcluida"> | Date | string
    numeroCartela?: IntFilter<"CartelaConcluida"> | number
    vendedorId?: StringFilter<"CartelaConcluida"> | string
    campanhaId?: StringFilter<"CartelaConcluida"> | string
  }

  export type OpticaCreateWithoutCampanhasAlvoInput = {
    id?: string
    cnpj: string
    nome: string
    endereco?: string | null
    cidade?: string | null
    estado?: string | null
    telefone?: string | null
    email?: string | null
    ativa?: boolean
    ehMatriz?: boolean
    criadoEm?: Date | string
    atualizadoEm?: Date | string
    matriz?: OpticaCreateNestedOneWithoutFiliaisInput
    filiais?: OpticaCreateNestedManyWithoutMatrizInput
    usuarios?: UsuarioCreateNestedManyWithoutOpticaInput
  }

  export type OpticaUncheckedCreateWithoutCampanhasAlvoInput = {
    id?: string
    cnpj: string
    nome: string
    endereco?: string | null
    cidade?: string | null
    estado?: string | null
    telefone?: string | null
    email?: string | null
    ativa?: boolean
    ehMatriz?: boolean
    matrizId?: string | null
    criadoEm?: Date | string
    atualizadoEm?: Date | string
    filiais?: OpticaUncheckedCreateNestedManyWithoutMatrizInput
    usuarios?: UsuarioUncheckedCreateNestedManyWithoutOpticaInput
  }

  export type OpticaCreateOrConnectWithoutCampanhasAlvoInput = {
    where: OpticaWhereUniqueInput
    create: XOR<OpticaCreateWithoutCampanhasAlvoInput, OpticaUncheckedCreateWithoutCampanhasAlvoInput>
  }

  export type RegraCartelaCreateWithoutCampanhaInput = {
    id?: string
    numeroCartela: number
    descricao?: string | null
    criadoEm?: Date | string
    atualizadoEm?: Date | string
    requisitos?: RequisitoCartelaCreateNestedManyWithoutRegraCartelaInput
  }

  export type RegraCartelaUncheckedCreateWithoutCampanhaInput = {
    id?: string
    numeroCartela: number
    descricao?: string | null
    criadoEm?: Date | string
    atualizadoEm?: Date | string
    requisitos?: RequisitoCartelaUncheckedCreateNestedManyWithoutRegraCartelaInput
  }

  export type RegraCartelaCreateOrConnectWithoutCampanhaInput = {
    where: RegraCartelaWhereUniqueInput
    create: XOR<RegraCartelaCreateWithoutCampanhaInput, RegraCartelaUncheckedCreateWithoutCampanhaInput>
  }

  export type RegraCartelaCreateManyCampanhaInputEnvelope = {
    data: RegraCartelaCreateManyCampanhaInput | RegraCartelaCreateManyCampanhaInput[]
    skipDuplicates?: boolean
  }

  export type EnvioVendaCreateWithoutCampanhaInput = {
    id?: string
    numeroPedido: string
    status?: $Enums.StatusEnvioVenda
    dataEnvio?: Date | string
    motivoRejeicao?: string | null
    infoConflito?: string | null
    numeroCartelaAtendida?: number | null
    dataValidacao?: Date | string | null
    criadoEm?: Date | string
    atualizadoEm?: Date | string
    vendedor: UsuarioCreateNestedOneWithoutEnviosVendaInput
    requisito: RequisitoCartelaCreateNestedOneWithoutEnviosVendaInput
  }

  export type EnvioVendaUncheckedCreateWithoutCampanhaInput = {
    id?: string
    numeroPedido: string
    status?: $Enums.StatusEnvioVenda
    dataEnvio?: Date | string
    motivoRejeicao?: string | null
    infoConflito?: string | null
    numeroCartelaAtendida?: number | null
    dataValidacao?: Date | string | null
    vendedorId: string
    requisitoId: string
    criadoEm?: Date | string
    atualizadoEm?: Date | string
  }

  export type EnvioVendaCreateOrConnectWithoutCampanhaInput = {
    where: EnvioVendaWhereUniqueInput
    create: XOR<EnvioVendaCreateWithoutCampanhaInput, EnvioVendaUncheckedCreateWithoutCampanhaInput>
  }

  export type EnvioVendaCreateManyCampanhaInputEnvelope = {
    data: EnvioVendaCreateManyCampanhaInput | EnvioVendaCreateManyCampanhaInput[]
    skipDuplicates?: boolean
  }

  export type RelatorioFinanceiroCreateWithoutCampanhaInput = {
    id?: string
    valor: Decimal | DecimalJsLike | number | string
    status?: $Enums.StatusPagamento
    tipo: string
    dataGerado?: Date | string
    dataPagamento?: Date | string | null
    observacoes?: string | null
    criadoEm?: Date | string
    atualizadoEm?: Date | string
    usuario: UsuarioCreateNestedOneWithoutRelatoriosFinanceirosInput
  }

  export type RelatorioFinanceiroUncheckedCreateWithoutCampanhaInput = {
    id?: string
    valor: Decimal | DecimalJsLike | number | string
    status?: $Enums.StatusPagamento
    tipo: string
    dataGerado?: Date | string
    dataPagamento?: Date | string | null
    observacoes?: string | null
    usuarioId: string
    criadoEm?: Date | string
    atualizadoEm?: Date | string
  }

  export type RelatorioFinanceiroCreateOrConnectWithoutCampanhaInput = {
    where: RelatorioFinanceiroWhereUniqueInput
    create: XOR<RelatorioFinanceiroCreateWithoutCampanhaInput, RelatorioFinanceiroUncheckedCreateWithoutCampanhaInput>
  }

  export type RelatorioFinanceiroCreateManyCampanhaInputEnvelope = {
    data: RelatorioFinanceiroCreateManyCampanhaInput | RelatorioFinanceiroCreateManyCampanhaInput[]
    skipDuplicates?: boolean
  }

  export type CartelaConcluidaCreateWithoutCampanhaInput = {
    id?: string
    dataConclusao?: Date | string
    numeroCartela: number
    vendedor: UsuarioCreateNestedOneWithoutCartelasConcluidasInput
  }

  export type CartelaConcluidaUncheckedCreateWithoutCampanhaInput = {
    id?: string
    dataConclusao?: Date | string
    numeroCartela: number
    vendedorId: string
  }

  export type CartelaConcluidaCreateOrConnectWithoutCampanhaInput = {
    where: CartelaConcluidaWhereUniqueInput
    create: XOR<CartelaConcluidaCreateWithoutCampanhaInput, CartelaConcluidaUncheckedCreateWithoutCampanhaInput>
  }

  export type CartelaConcluidaCreateManyCampanhaInputEnvelope = {
    data: CartelaConcluidaCreateManyCampanhaInput | CartelaConcluidaCreateManyCampanhaInput[]
    skipDuplicates?: boolean
  }

  export type OpticaUpsertWithWhereUniqueWithoutCampanhasAlvoInput = {
    where: OpticaWhereUniqueInput
    update: XOR<OpticaUpdateWithoutCampanhasAlvoInput, OpticaUncheckedUpdateWithoutCampanhasAlvoInput>
    create: XOR<OpticaCreateWithoutCampanhasAlvoInput, OpticaUncheckedCreateWithoutCampanhasAlvoInput>
  }

  export type OpticaUpdateWithWhereUniqueWithoutCampanhasAlvoInput = {
    where: OpticaWhereUniqueInput
    data: XOR<OpticaUpdateWithoutCampanhasAlvoInput, OpticaUncheckedUpdateWithoutCampanhasAlvoInput>
  }

  export type OpticaUpdateManyWithWhereWithoutCampanhasAlvoInput = {
    where: OpticaScalarWhereInput
    data: XOR<OpticaUpdateManyMutationInput, OpticaUncheckedUpdateManyWithoutCampanhasAlvoInput>
  }

  export type RegraCartelaUpsertWithWhereUniqueWithoutCampanhaInput = {
    where: RegraCartelaWhereUniqueInput
    update: XOR<RegraCartelaUpdateWithoutCampanhaInput, RegraCartelaUncheckedUpdateWithoutCampanhaInput>
    create: XOR<RegraCartelaCreateWithoutCampanhaInput, RegraCartelaUncheckedCreateWithoutCampanhaInput>
  }

  export type RegraCartelaUpdateWithWhereUniqueWithoutCampanhaInput = {
    where: RegraCartelaWhereUniqueInput
    data: XOR<RegraCartelaUpdateWithoutCampanhaInput, RegraCartelaUncheckedUpdateWithoutCampanhaInput>
  }

  export type RegraCartelaUpdateManyWithWhereWithoutCampanhaInput = {
    where: RegraCartelaScalarWhereInput
    data: XOR<RegraCartelaUpdateManyMutationInput, RegraCartelaUncheckedUpdateManyWithoutCampanhaInput>
  }

  export type RegraCartelaScalarWhereInput = {
    AND?: RegraCartelaScalarWhereInput | RegraCartelaScalarWhereInput[]
    OR?: RegraCartelaScalarWhereInput[]
    NOT?: RegraCartelaScalarWhereInput | RegraCartelaScalarWhereInput[]
    id?: StringFilter<"RegraCartela"> | string
    numeroCartela?: IntFilter<"RegraCartela"> | number
    descricao?: StringNullableFilter<"RegraCartela"> | string | null
    campanhaId?: StringFilter<"RegraCartela"> | string
    criadoEm?: DateTimeFilter<"RegraCartela"> | Date | string
    atualizadoEm?: DateTimeFilter<"RegraCartela"> | Date | string
  }

  export type EnvioVendaUpsertWithWhereUniqueWithoutCampanhaInput = {
    where: EnvioVendaWhereUniqueInput
    update: XOR<EnvioVendaUpdateWithoutCampanhaInput, EnvioVendaUncheckedUpdateWithoutCampanhaInput>
    create: XOR<EnvioVendaCreateWithoutCampanhaInput, EnvioVendaUncheckedCreateWithoutCampanhaInput>
  }

  export type EnvioVendaUpdateWithWhereUniqueWithoutCampanhaInput = {
    where: EnvioVendaWhereUniqueInput
    data: XOR<EnvioVendaUpdateWithoutCampanhaInput, EnvioVendaUncheckedUpdateWithoutCampanhaInput>
  }

  export type EnvioVendaUpdateManyWithWhereWithoutCampanhaInput = {
    where: EnvioVendaScalarWhereInput
    data: XOR<EnvioVendaUpdateManyMutationInput, EnvioVendaUncheckedUpdateManyWithoutCampanhaInput>
  }

  export type RelatorioFinanceiroUpsertWithWhereUniqueWithoutCampanhaInput = {
    where: RelatorioFinanceiroWhereUniqueInput
    update: XOR<RelatorioFinanceiroUpdateWithoutCampanhaInput, RelatorioFinanceiroUncheckedUpdateWithoutCampanhaInput>
    create: XOR<RelatorioFinanceiroCreateWithoutCampanhaInput, RelatorioFinanceiroUncheckedCreateWithoutCampanhaInput>
  }

  export type RelatorioFinanceiroUpdateWithWhereUniqueWithoutCampanhaInput = {
    where: RelatorioFinanceiroWhereUniqueInput
    data: XOR<RelatorioFinanceiroUpdateWithoutCampanhaInput, RelatorioFinanceiroUncheckedUpdateWithoutCampanhaInput>
  }

  export type RelatorioFinanceiroUpdateManyWithWhereWithoutCampanhaInput = {
    where: RelatorioFinanceiroScalarWhereInput
    data: XOR<RelatorioFinanceiroUpdateManyMutationInput, RelatorioFinanceiroUncheckedUpdateManyWithoutCampanhaInput>
  }

  export type CartelaConcluidaUpsertWithWhereUniqueWithoutCampanhaInput = {
    where: CartelaConcluidaWhereUniqueInput
    update: XOR<CartelaConcluidaUpdateWithoutCampanhaInput, CartelaConcluidaUncheckedUpdateWithoutCampanhaInput>
    create: XOR<CartelaConcluidaCreateWithoutCampanhaInput, CartelaConcluidaUncheckedCreateWithoutCampanhaInput>
  }

  export type CartelaConcluidaUpdateWithWhereUniqueWithoutCampanhaInput = {
    where: CartelaConcluidaWhereUniqueInput
    data: XOR<CartelaConcluidaUpdateWithoutCampanhaInput, CartelaConcluidaUncheckedUpdateWithoutCampanhaInput>
  }

  export type CartelaConcluidaUpdateManyWithWhereWithoutCampanhaInput = {
    where: CartelaConcluidaScalarWhereInput
    data: XOR<CartelaConcluidaUpdateManyMutationInput, CartelaConcluidaUncheckedUpdateManyWithoutCampanhaInput>
  }

  export type CampanhaCreateWithoutCartelasInput = {
    id?: string
    titulo: string
    descricao: string
    dataInicio: Date | string
    dataFim: Date | string
    moedinhasPorCartela: number
    pontosReaisPorCartela: Decimal | DecimalJsLike | number | string
    status?: string
    percentualGerente?: Decimal | DecimalJsLike | number | string
    paraTodasOticas?: boolean
    criadoEm?: Date | string
    atualizadoEm?: Date | string
    oticasAlvo?: OpticaCreateNestedManyWithoutCampanhasAlvoInput
    enviosVenda?: EnvioVendaCreateNestedManyWithoutCampanhaInput
    relatoriosFinanceiros?: RelatorioFinanceiroCreateNestedManyWithoutCampanhaInput
    cartelasConcluidas?: CartelaConcluidaCreateNestedManyWithoutCampanhaInput
  }

  export type CampanhaUncheckedCreateWithoutCartelasInput = {
    id?: string
    titulo: string
    descricao: string
    dataInicio: Date | string
    dataFim: Date | string
    moedinhasPorCartela: number
    pontosReaisPorCartela: Decimal | DecimalJsLike | number | string
    status?: string
    percentualGerente?: Decimal | DecimalJsLike | number | string
    paraTodasOticas?: boolean
    criadoEm?: Date | string
    atualizadoEm?: Date | string
    oticasAlvo?: OpticaUncheckedCreateNestedManyWithoutCampanhasAlvoInput
    enviosVenda?: EnvioVendaUncheckedCreateNestedManyWithoutCampanhaInput
    relatoriosFinanceiros?: RelatorioFinanceiroUncheckedCreateNestedManyWithoutCampanhaInput
    cartelasConcluidas?: CartelaConcluidaUncheckedCreateNestedManyWithoutCampanhaInput
  }

  export type CampanhaCreateOrConnectWithoutCartelasInput = {
    where: CampanhaWhereUniqueInput
    create: XOR<CampanhaCreateWithoutCartelasInput, CampanhaUncheckedCreateWithoutCartelasInput>
  }

  export type RequisitoCartelaCreateWithoutRegraCartelaInput = {
    id?: string
    descricao: string
    quantidade: number
    tipoUnidade?: $Enums.TipoUnidade
    ordem: number
    criadoEm?: Date | string
    atualizadoEm?: Date | string
    condicoes?: CondicaoRequisitoCreateNestedManyWithoutRequisitoInput
    enviosVenda?: EnvioVendaCreateNestedManyWithoutRequisitoInput
  }

  export type RequisitoCartelaUncheckedCreateWithoutRegraCartelaInput = {
    id?: string
    descricao: string
    quantidade: number
    tipoUnidade?: $Enums.TipoUnidade
    ordem: number
    criadoEm?: Date | string
    atualizadoEm?: Date | string
    condicoes?: CondicaoRequisitoUncheckedCreateNestedManyWithoutRequisitoInput
    enviosVenda?: EnvioVendaUncheckedCreateNestedManyWithoutRequisitoInput
  }

  export type RequisitoCartelaCreateOrConnectWithoutRegraCartelaInput = {
    where: RequisitoCartelaWhereUniqueInput
    create: XOR<RequisitoCartelaCreateWithoutRegraCartelaInput, RequisitoCartelaUncheckedCreateWithoutRegraCartelaInput>
  }

  export type RequisitoCartelaCreateManyRegraCartelaInputEnvelope = {
    data: RequisitoCartelaCreateManyRegraCartelaInput | RequisitoCartelaCreateManyRegraCartelaInput[]
    skipDuplicates?: boolean
  }

  export type CampanhaUpsertWithoutCartelasInput = {
    update: XOR<CampanhaUpdateWithoutCartelasInput, CampanhaUncheckedUpdateWithoutCartelasInput>
    create: XOR<CampanhaCreateWithoutCartelasInput, CampanhaUncheckedCreateWithoutCartelasInput>
    where?: CampanhaWhereInput
  }

  export type CampanhaUpdateToOneWithWhereWithoutCartelasInput = {
    where?: CampanhaWhereInput
    data: XOR<CampanhaUpdateWithoutCartelasInput, CampanhaUncheckedUpdateWithoutCartelasInput>
  }

  export type CampanhaUpdateWithoutCartelasInput = {
    id?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    dataInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    dataFim?: DateTimeFieldUpdateOperationsInput | Date | string
    moedinhasPorCartela?: IntFieldUpdateOperationsInput | number
    pontosReaisPorCartela?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: StringFieldUpdateOperationsInput | string
    percentualGerente?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    paraTodasOticas?: BoolFieldUpdateOperationsInput | boolean
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    oticasAlvo?: OpticaUpdateManyWithoutCampanhasAlvoNestedInput
    enviosVenda?: EnvioVendaUpdateManyWithoutCampanhaNestedInput
    relatoriosFinanceiros?: RelatorioFinanceiroUpdateManyWithoutCampanhaNestedInput
    cartelasConcluidas?: CartelaConcluidaUpdateManyWithoutCampanhaNestedInput
  }

  export type CampanhaUncheckedUpdateWithoutCartelasInput = {
    id?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    dataInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    dataFim?: DateTimeFieldUpdateOperationsInput | Date | string
    moedinhasPorCartela?: IntFieldUpdateOperationsInput | number
    pontosReaisPorCartela?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: StringFieldUpdateOperationsInput | string
    percentualGerente?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    paraTodasOticas?: BoolFieldUpdateOperationsInput | boolean
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    oticasAlvo?: OpticaUncheckedUpdateManyWithoutCampanhasAlvoNestedInput
    enviosVenda?: EnvioVendaUncheckedUpdateManyWithoutCampanhaNestedInput
    relatoriosFinanceiros?: RelatorioFinanceiroUncheckedUpdateManyWithoutCampanhaNestedInput
    cartelasConcluidas?: CartelaConcluidaUncheckedUpdateManyWithoutCampanhaNestedInput
  }

  export type RequisitoCartelaUpsertWithWhereUniqueWithoutRegraCartelaInput = {
    where: RequisitoCartelaWhereUniqueInput
    update: XOR<RequisitoCartelaUpdateWithoutRegraCartelaInput, RequisitoCartelaUncheckedUpdateWithoutRegraCartelaInput>
    create: XOR<RequisitoCartelaCreateWithoutRegraCartelaInput, RequisitoCartelaUncheckedCreateWithoutRegraCartelaInput>
  }

  export type RequisitoCartelaUpdateWithWhereUniqueWithoutRegraCartelaInput = {
    where: RequisitoCartelaWhereUniqueInput
    data: XOR<RequisitoCartelaUpdateWithoutRegraCartelaInput, RequisitoCartelaUncheckedUpdateWithoutRegraCartelaInput>
  }

  export type RequisitoCartelaUpdateManyWithWhereWithoutRegraCartelaInput = {
    where: RequisitoCartelaScalarWhereInput
    data: XOR<RequisitoCartelaUpdateManyMutationInput, RequisitoCartelaUncheckedUpdateManyWithoutRegraCartelaInput>
  }

  export type RequisitoCartelaScalarWhereInput = {
    AND?: RequisitoCartelaScalarWhereInput | RequisitoCartelaScalarWhereInput[]
    OR?: RequisitoCartelaScalarWhereInput[]
    NOT?: RequisitoCartelaScalarWhereInput | RequisitoCartelaScalarWhereInput[]
    id?: StringFilter<"RequisitoCartela"> | string
    descricao?: StringFilter<"RequisitoCartela"> | string
    quantidade?: IntFilter<"RequisitoCartela"> | number
    tipoUnidade?: EnumTipoUnidadeFilter<"RequisitoCartela"> | $Enums.TipoUnidade
    ordem?: IntFilter<"RequisitoCartela"> | number
    regraCartelaId?: StringFilter<"RequisitoCartela"> | string
    criadoEm?: DateTimeFilter<"RequisitoCartela"> | Date | string
    atualizadoEm?: DateTimeFilter<"RequisitoCartela"> | Date | string
  }

  export type RegraCartelaCreateWithoutRequisitosInput = {
    id?: string
    numeroCartela: number
    descricao?: string | null
    criadoEm?: Date | string
    atualizadoEm?: Date | string
    campanha: CampanhaCreateNestedOneWithoutCartelasInput
  }

  export type RegraCartelaUncheckedCreateWithoutRequisitosInput = {
    id?: string
    numeroCartela: number
    descricao?: string | null
    campanhaId: string
    criadoEm?: Date | string
    atualizadoEm?: Date | string
  }

  export type RegraCartelaCreateOrConnectWithoutRequisitosInput = {
    where: RegraCartelaWhereUniqueInput
    create: XOR<RegraCartelaCreateWithoutRequisitosInput, RegraCartelaUncheckedCreateWithoutRequisitosInput>
  }

  export type CondicaoRequisitoCreateWithoutRequisitoInput = {
    id?: string
    campo: $Enums.CampoVerificacao
    operador: $Enums.OperadorCondicao
    valor: string
    criadoEm?: Date | string
    atualizadoEm?: Date | string
  }

  export type CondicaoRequisitoUncheckedCreateWithoutRequisitoInput = {
    id?: string
    campo: $Enums.CampoVerificacao
    operador: $Enums.OperadorCondicao
    valor: string
    criadoEm?: Date | string
    atualizadoEm?: Date | string
  }

  export type CondicaoRequisitoCreateOrConnectWithoutRequisitoInput = {
    where: CondicaoRequisitoWhereUniqueInput
    create: XOR<CondicaoRequisitoCreateWithoutRequisitoInput, CondicaoRequisitoUncheckedCreateWithoutRequisitoInput>
  }

  export type CondicaoRequisitoCreateManyRequisitoInputEnvelope = {
    data: CondicaoRequisitoCreateManyRequisitoInput | CondicaoRequisitoCreateManyRequisitoInput[]
    skipDuplicates?: boolean
  }

  export type EnvioVendaCreateWithoutRequisitoInput = {
    id?: string
    numeroPedido: string
    status?: $Enums.StatusEnvioVenda
    dataEnvio?: Date | string
    motivoRejeicao?: string | null
    infoConflito?: string | null
    numeroCartelaAtendida?: number | null
    dataValidacao?: Date | string | null
    criadoEm?: Date | string
    atualizadoEm?: Date | string
    vendedor: UsuarioCreateNestedOneWithoutEnviosVendaInput
    campanha: CampanhaCreateNestedOneWithoutEnviosVendaInput
  }

  export type EnvioVendaUncheckedCreateWithoutRequisitoInput = {
    id?: string
    numeroPedido: string
    status?: $Enums.StatusEnvioVenda
    dataEnvio?: Date | string
    motivoRejeicao?: string | null
    infoConflito?: string | null
    numeroCartelaAtendida?: number | null
    dataValidacao?: Date | string | null
    vendedorId: string
    campanhaId: string
    criadoEm?: Date | string
    atualizadoEm?: Date | string
  }

  export type EnvioVendaCreateOrConnectWithoutRequisitoInput = {
    where: EnvioVendaWhereUniqueInput
    create: XOR<EnvioVendaCreateWithoutRequisitoInput, EnvioVendaUncheckedCreateWithoutRequisitoInput>
  }

  export type EnvioVendaCreateManyRequisitoInputEnvelope = {
    data: EnvioVendaCreateManyRequisitoInput | EnvioVendaCreateManyRequisitoInput[]
    skipDuplicates?: boolean
  }

  export type RegraCartelaUpsertWithoutRequisitosInput = {
    update: XOR<RegraCartelaUpdateWithoutRequisitosInput, RegraCartelaUncheckedUpdateWithoutRequisitosInput>
    create: XOR<RegraCartelaCreateWithoutRequisitosInput, RegraCartelaUncheckedCreateWithoutRequisitosInput>
    where?: RegraCartelaWhereInput
  }

  export type RegraCartelaUpdateToOneWithWhereWithoutRequisitosInput = {
    where?: RegraCartelaWhereInput
    data: XOR<RegraCartelaUpdateWithoutRequisitosInput, RegraCartelaUncheckedUpdateWithoutRequisitosInput>
  }

  export type RegraCartelaUpdateWithoutRequisitosInput = {
    id?: StringFieldUpdateOperationsInput | string
    numeroCartela?: IntFieldUpdateOperationsInput | number
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    campanha?: CampanhaUpdateOneRequiredWithoutCartelasNestedInput
  }

  export type RegraCartelaUncheckedUpdateWithoutRequisitosInput = {
    id?: StringFieldUpdateOperationsInput | string
    numeroCartela?: IntFieldUpdateOperationsInput | number
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    campanhaId?: StringFieldUpdateOperationsInput | string
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CondicaoRequisitoUpsertWithWhereUniqueWithoutRequisitoInput = {
    where: CondicaoRequisitoWhereUniqueInput
    update: XOR<CondicaoRequisitoUpdateWithoutRequisitoInput, CondicaoRequisitoUncheckedUpdateWithoutRequisitoInput>
    create: XOR<CondicaoRequisitoCreateWithoutRequisitoInput, CondicaoRequisitoUncheckedCreateWithoutRequisitoInput>
  }

  export type CondicaoRequisitoUpdateWithWhereUniqueWithoutRequisitoInput = {
    where: CondicaoRequisitoWhereUniqueInput
    data: XOR<CondicaoRequisitoUpdateWithoutRequisitoInput, CondicaoRequisitoUncheckedUpdateWithoutRequisitoInput>
  }

  export type CondicaoRequisitoUpdateManyWithWhereWithoutRequisitoInput = {
    where: CondicaoRequisitoScalarWhereInput
    data: XOR<CondicaoRequisitoUpdateManyMutationInput, CondicaoRequisitoUncheckedUpdateManyWithoutRequisitoInput>
  }

  export type CondicaoRequisitoScalarWhereInput = {
    AND?: CondicaoRequisitoScalarWhereInput | CondicaoRequisitoScalarWhereInput[]
    OR?: CondicaoRequisitoScalarWhereInput[]
    NOT?: CondicaoRequisitoScalarWhereInput | CondicaoRequisitoScalarWhereInput[]
    id?: StringFilter<"CondicaoRequisito"> | string
    campo?: EnumCampoVerificacaoFilter<"CondicaoRequisito"> | $Enums.CampoVerificacao
    operador?: EnumOperadorCondicaoFilter<"CondicaoRequisito"> | $Enums.OperadorCondicao
    valor?: StringFilter<"CondicaoRequisito"> | string
    requisitoId?: StringFilter<"CondicaoRequisito"> | string
    criadoEm?: DateTimeFilter<"CondicaoRequisito"> | Date | string
    atualizadoEm?: DateTimeFilter<"CondicaoRequisito"> | Date | string
  }

  export type EnvioVendaUpsertWithWhereUniqueWithoutRequisitoInput = {
    where: EnvioVendaWhereUniqueInput
    update: XOR<EnvioVendaUpdateWithoutRequisitoInput, EnvioVendaUncheckedUpdateWithoutRequisitoInput>
    create: XOR<EnvioVendaCreateWithoutRequisitoInput, EnvioVendaUncheckedCreateWithoutRequisitoInput>
  }

  export type EnvioVendaUpdateWithWhereUniqueWithoutRequisitoInput = {
    where: EnvioVendaWhereUniqueInput
    data: XOR<EnvioVendaUpdateWithoutRequisitoInput, EnvioVendaUncheckedUpdateWithoutRequisitoInput>
  }

  export type EnvioVendaUpdateManyWithWhereWithoutRequisitoInput = {
    where: EnvioVendaScalarWhereInput
    data: XOR<EnvioVendaUpdateManyMutationInput, EnvioVendaUncheckedUpdateManyWithoutRequisitoInput>
  }

  export type RequisitoCartelaCreateWithoutCondicoesInput = {
    id?: string
    descricao: string
    quantidade: number
    tipoUnidade?: $Enums.TipoUnidade
    ordem: number
    criadoEm?: Date | string
    atualizadoEm?: Date | string
    regraCartela: RegraCartelaCreateNestedOneWithoutRequisitosInput
    enviosVenda?: EnvioVendaCreateNestedManyWithoutRequisitoInput
  }

  export type RequisitoCartelaUncheckedCreateWithoutCondicoesInput = {
    id?: string
    descricao: string
    quantidade: number
    tipoUnidade?: $Enums.TipoUnidade
    ordem: number
    regraCartelaId: string
    criadoEm?: Date | string
    atualizadoEm?: Date | string
    enviosVenda?: EnvioVendaUncheckedCreateNestedManyWithoutRequisitoInput
  }

  export type RequisitoCartelaCreateOrConnectWithoutCondicoesInput = {
    where: RequisitoCartelaWhereUniqueInput
    create: XOR<RequisitoCartelaCreateWithoutCondicoesInput, RequisitoCartelaUncheckedCreateWithoutCondicoesInput>
  }

  export type RequisitoCartelaUpsertWithoutCondicoesInput = {
    update: XOR<RequisitoCartelaUpdateWithoutCondicoesInput, RequisitoCartelaUncheckedUpdateWithoutCondicoesInput>
    create: XOR<RequisitoCartelaCreateWithoutCondicoesInput, RequisitoCartelaUncheckedCreateWithoutCondicoesInput>
    where?: RequisitoCartelaWhereInput
  }

  export type RequisitoCartelaUpdateToOneWithWhereWithoutCondicoesInput = {
    where?: RequisitoCartelaWhereInput
    data: XOR<RequisitoCartelaUpdateWithoutCondicoesInput, RequisitoCartelaUncheckedUpdateWithoutCondicoesInput>
  }

  export type RequisitoCartelaUpdateWithoutCondicoesInput = {
    id?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    quantidade?: IntFieldUpdateOperationsInput | number
    tipoUnidade?: EnumTipoUnidadeFieldUpdateOperationsInput | $Enums.TipoUnidade
    ordem?: IntFieldUpdateOperationsInput | number
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    regraCartela?: RegraCartelaUpdateOneRequiredWithoutRequisitosNestedInput
    enviosVenda?: EnvioVendaUpdateManyWithoutRequisitoNestedInput
  }

  export type RequisitoCartelaUncheckedUpdateWithoutCondicoesInput = {
    id?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    quantidade?: IntFieldUpdateOperationsInput | number
    tipoUnidade?: EnumTipoUnidadeFieldUpdateOperationsInput | $Enums.TipoUnidade
    ordem?: IntFieldUpdateOperationsInput | number
    regraCartelaId?: StringFieldUpdateOperationsInput | string
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    enviosVenda?: EnvioVendaUncheckedUpdateManyWithoutRequisitoNestedInput
  }

  export type UsuarioCreateWithoutEnviosVendaInput = {
    id?: string
    email: string
    cpf?: string | null
    nome: string
    whatsapp?: string | null
    senhaHash: string
    avatarUrl?: string | null
    papel: $Enums.PapelUsuario
    status?: $Enums.StatusUsuario
    saldoMoedinhas?: number
    rankingMoedinhas?: number
    nivel?: $Enums.NivelVendedor
    tokenResetarSenha?: string | null
    tokenResetarSenhaExpira?: Date | string | null
    mapeamentoPlanilhaSalvo?: NullableJsonNullValueInput | InputJsonValue
    criadoEm?: Date | string
    atualizadoEm?: Date | string
    optica?: OpticaCreateNestedOneWithoutUsuariosInput
    gerente?: UsuarioCreateNestedOneWithoutVendedoresInput
    vendedores?: UsuarioCreateNestedManyWithoutGerenteInput
    resgatesPremios?: ResgatePremioCreateNestedManyWithoutVendedorInput
    relatoriosFinanceiros?: RelatorioFinanceiroCreateNestedManyWithoutUsuarioInput
    notificacoes?: NotificacaoCreateNestedManyWithoutUsuarioInput
    cartelasConcluidas?: CartelaConcluidaCreateNestedManyWithoutVendedorInput
  }

  export type UsuarioUncheckedCreateWithoutEnviosVendaInput = {
    id?: string
    email: string
    cpf?: string | null
    nome: string
    whatsapp?: string | null
    senhaHash: string
    avatarUrl?: string | null
    papel: $Enums.PapelUsuario
    status?: $Enums.StatusUsuario
    saldoMoedinhas?: number
    rankingMoedinhas?: number
    nivel?: $Enums.NivelVendedor
    tokenResetarSenha?: string | null
    tokenResetarSenhaExpira?: Date | string | null
    mapeamentoPlanilhaSalvo?: NullableJsonNullValueInput | InputJsonValue
    opticaId?: string | null
    gerenteId?: string | null
    criadoEm?: Date | string
    atualizadoEm?: Date | string
    vendedores?: UsuarioUncheckedCreateNestedManyWithoutGerenteInput
    resgatesPremios?: ResgatePremioUncheckedCreateNestedManyWithoutVendedorInput
    relatoriosFinanceiros?: RelatorioFinanceiroUncheckedCreateNestedManyWithoutUsuarioInput
    notificacoes?: NotificacaoUncheckedCreateNestedManyWithoutUsuarioInput
    cartelasConcluidas?: CartelaConcluidaUncheckedCreateNestedManyWithoutVendedorInput
  }

  export type UsuarioCreateOrConnectWithoutEnviosVendaInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutEnviosVendaInput, UsuarioUncheckedCreateWithoutEnviosVendaInput>
  }

  export type CampanhaCreateWithoutEnviosVendaInput = {
    id?: string
    titulo: string
    descricao: string
    dataInicio: Date | string
    dataFim: Date | string
    moedinhasPorCartela: number
    pontosReaisPorCartela: Decimal | DecimalJsLike | number | string
    status?: string
    percentualGerente?: Decimal | DecimalJsLike | number | string
    paraTodasOticas?: boolean
    criadoEm?: Date | string
    atualizadoEm?: Date | string
    oticasAlvo?: OpticaCreateNestedManyWithoutCampanhasAlvoInput
    cartelas?: RegraCartelaCreateNestedManyWithoutCampanhaInput
    relatoriosFinanceiros?: RelatorioFinanceiroCreateNestedManyWithoutCampanhaInput
    cartelasConcluidas?: CartelaConcluidaCreateNestedManyWithoutCampanhaInput
  }

  export type CampanhaUncheckedCreateWithoutEnviosVendaInput = {
    id?: string
    titulo: string
    descricao: string
    dataInicio: Date | string
    dataFim: Date | string
    moedinhasPorCartela: number
    pontosReaisPorCartela: Decimal | DecimalJsLike | number | string
    status?: string
    percentualGerente?: Decimal | DecimalJsLike | number | string
    paraTodasOticas?: boolean
    criadoEm?: Date | string
    atualizadoEm?: Date | string
    oticasAlvo?: OpticaUncheckedCreateNestedManyWithoutCampanhasAlvoInput
    cartelas?: RegraCartelaUncheckedCreateNestedManyWithoutCampanhaInput
    relatoriosFinanceiros?: RelatorioFinanceiroUncheckedCreateNestedManyWithoutCampanhaInput
    cartelasConcluidas?: CartelaConcluidaUncheckedCreateNestedManyWithoutCampanhaInput
  }

  export type CampanhaCreateOrConnectWithoutEnviosVendaInput = {
    where: CampanhaWhereUniqueInput
    create: XOR<CampanhaCreateWithoutEnviosVendaInput, CampanhaUncheckedCreateWithoutEnviosVendaInput>
  }

  export type RequisitoCartelaCreateWithoutEnviosVendaInput = {
    id?: string
    descricao: string
    quantidade: number
    tipoUnidade?: $Enums.TipoUnidade
    ordem: number
    criadoEm?: Date | string
    atualizadoEm?: Date | string
    regraCartela: RegraCartelaCreateNestedOneWithoutRequisitosInput
    condicoes?: CondicaoRequisitoCreateNestedManyWithoutRequisitoInput
  }

  export type RequisitoCartelaUncheckedCreateWithoutEnviosVendaInput = {
    id?: string
    descricao: string
    quantidade: number
    tipoUnidade?: $Enums.TipoUnidade
    ordem: number
    regraCartelaId: string
    criadoEm?: Date | string
    atualizadoEm?: Date | string
    condicoes?: CondicaoRequisitoUncheckedCreateNestedManyWithoutRequisitoInput
  }

  export type RequisitoCartelaCreateOrConnectWithoutEnviosVendaInput = {
    where: RequisitoCartelaWhereUniqueInput
    create: XOR<RequisitoCartelaCreateWithoutEnviosVendaInput, RequisitoCartelaUncheckedCreateWithoutEnviosVendaInput>
  }

  export type UsuarioUpsertWithoutEnviosVendaInput = {
    update: XOR<UsuarioUpdateWithoutEnviosVendaInput, UsuarioUncheckedUpdateWithoutEnviosVendaInput>
    create: XOR<UsuarioCreateWithoutEnviosVendaInput, UsuarioUncheckedCreateWithoutEnviosVendaInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutEnviosVendaInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutEnviosVendaInput, UsuarioUncheckedUpdateWithoutEnviosVendaInput>
  }

  export type UsuarioUpdateWithoutEnviosVendaInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    nome?: StringFieldUpdateOperationsInput | string
    whatsapp?: NullableStringFieldUpdateOperationsInput | string | null
    senhaHash?: StringFieldUpdateOperationsInput | string
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    papel?: EnumPapelUsuarioFieldUpdateOperationsInput | $Enums.PapelUsuario
    status?: EnumStatusUsuarioFieldUpdateOperationsInput | $Enums.StatusUsuario
    saldoMoedinhas?: IntFieldUpdateOperationsInput | number
    rankingMoedinhas?: IntFieldUpdateOperationsInput | number
    nivel?: EnumNivelVendedorFieldUpdateOperationsInput | $Enums.NivelVendedor
    tokenResetarSenha?: NullableStringFieldUpdateOperationsInput | string | null
    tokenResetarSenhaExpira?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    mapeamentoPlanilhaSalvo?: NullableJsonNullValueInput | InputJsonValue
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    optica?: OpticaUpdateOneWithoutUsuariosNestedInput
    gerente?: UsuarioUpdateOneWithoutVendedoresNestedInput
    vendedores?: UsuarioUpdateManyWithoutGerenteNestedInput
    resgatesPremios?: ResgatePremioUpdateManyWithoutVendedorNestedInput
    relatoriosFinanceiros?: RelatorioFinanceiroUpdateManyWithoutUsuarioNestedInput
    notificacoes?: NotificacaoUpdateManyWithoutUsuarioNestedInput
    cartelasConcluidas?: CartelaConcluidaUpdateManyWithoutVendedorNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutEnviosVendaInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    nome?: StringFieldUpdateOperationsInput | string
    whatsapp?: NullableStringFieldUpdateOperationsInput | string | null
    senhaHash?: StringFieldUpdateOperationsInput | string
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    papel?: EnumPapelUsuarioFieldUpdateOperationsInput | $Enums.PapelUsuario
    status?: EnumStatusUsuarioFieldUpdateOperationsInput | $Enums.StatusUsuario
    saldoMoedinhas?: IntFieldUpdateOperationsInput | number
    rankingMoedinhas?: IntFieldUpdateOperationsInput | number
    nivel?: EnumNivelVendedorFieldUpdateOperationsInput | $Enums.NivelVendedor
    tokenResetarSenha?: NullableStringFieldUpdateOperationsInput | string | null
    tokenResetarSenhaExpira?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    mapeamentoPlanilhaSalvo?: NullableJsonNullValueInput | InputJsonValue
    opticaId?: NullableStringFieldUpdateOperationsInput | string | null
    gerenteId?: NullableStringFieldUpdateOperationsInput | string | null
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    vendedores?: UsuarioUncheckedUpdateManyWithoutGerenteNestedInput
    resgatesPremios?: ResgatePremioUncheckedUpdateManyWithoutVendedorNestedInput
    relatoriosFinanceiros?: RelatorioFinanceiroUncheckedUpdateManyWithoutUsuarioNestedInput
    notificacoes?: NotificacaoUncheckedUpdateManyWithoutUsuarioNestedInput
    cartelasConcluidas?: CartelaConcluidaUncheckedUpdateManyWithoutVendedorNestedInput
  }

  export type CampanhaUpsertWithoutEnviosVendaInput = {
    update: XOR<CampanhaUpdateWithoutEnviosVendaInput, CampanhaUncheckedUpdateWithoutEnviosVendaInput>
    create: XOR<CampanhaCreateWithoutEnviosVendaInput, CampanhaUncheckedCreateWithoutEnviosVendaInput>
    where?: CampanhaWhereInput
  }

  export type CampanhaUpdateToOneWithWhereWithoutEnviosVendaInput = {
    where?: CampanhaWhereInput
    data: XOR<CampanhaUpdateWithoutEnviosVendaInput, CampanhaUncheckedUpdateWithoutEnviosVendaInput>
  }

  export type CampanhaUpdateWithoutEnviosVendaInput = {
    id?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    dataInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    dataFim?: DateTimeFieldUpdateOperationsInput | Date | string
    moedinhasPorCartela?: IntFieldUpdateOperationsInput | number
    pontosReaisPorCartela?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: StringFieldUpdateOperationsInput | string
    percentualGerente?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    paraTodasOticas?: BoolFieldUpdateOperationsInput | boolean
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    oticasAlvo?: OpticaUpdateManyWithoutCampanhasAlvoNestedInput
    cartelas?: RegraCartelaUpdateManyWithoutCampanhaNestedInput
    relatoriosFinanceiros?: RelatorioFinanceiroUpdateManyWithoutCampanhaNestedInput
    cartelasConcluidas?: CartelaConcluidaUpdateManyWithoutCampanhaNestedInput
  }

  export type CampanhaUncheckedUpdateWithoutEnviosVendaInput = {
    id?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    dataInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    dataFim?: DateTimeFieldUpdateOperationsInput | Date | string
    moedinhasPorCartela?: IntFieldUpdateOperationsInput | number
    pontosReaisPorCartela?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: StringFieldUpdateOperationsInput | string
    percentualGerente?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    paraTodasOticas?: BoolFieldUpdateOperationsInput | boolean
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    oticasAlvo?: OpticaUncheckedUpdateManyWithoutCampanhasAlvoNestedInput
    cartelas?: RegraCartelaUncheckedUpdateManyWithoutCampanhaNestedInput
    relatoriosFinanceiros?: RelatorioFinanceiroUncheckedUpdateManyWithoutCampanhaNestedInput
    cartelasConcluidas?: CartelaConcluidaUncheckedUpdateManyWithoutCampanhaNestedInput
  }

  export type RequisitoCartelaUpsertWithoutEnviosVendaInput = {
    update: XOR<RequisitoCartelaUpdateWithoutEnviosVendaInput, RequisitoCartelaUncheckedUpdateWithoutEnviosVendaInput>
    create: XOR<RequisitoCartelaCreateWithoutEnviosVendaInput, RequisitoCartelaUncheckedCreateWithoutEnviosVendaInput>
    where?: RequisitoCartelaWhereInput
  }

  export type RequisitoCartelaUpdateToOneWithWhereWithoutEnviosVendaInput = {
    where?: RequisitoCartelaWhereInput
    data: XOR<RequisitoCartelaUpdateWithoutEnviosVendaInput, RequisitoCartelaUncheckedUpdateWithoutEnviosVendaInput>
  }

  export type RequisitoCartelaUpdateWithoutEnviosVendaInput = {
    id?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    quantidade?: IntFieldUpdateOperationsInput | number
    tipoUnidade?: EnumTipoUnidadeFieldUpdateOperationsInput | $Enums.TipoUnidade
    ordem?: IntFieldUpdateOperationsInput | number
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    regraCartela?: RegraCartelaUpdateOneRequiredWithoutRequisitosNestedInput
    condicoes?: CondicaoRequisitoUpdateManyWithoutRequisitoNestedInput
  }

  export type RequisitoCartelaUncheckedUpdateWithoutEnviosVendaInput = {
    id?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    quantidade?: IntFieldUpdateOperationsInput | number
    tipoUnidade?: EnumTipoUnidadeFieldUpdateOperationsInput | $Enums.TipoUnidade
    ordem?: IntFieldUpdateOperationsInput | number
    regraCartelaId?: StringFieldUpdateOperationsInput | string
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    condicoes?: CondicaoRequisitoUncheckedUpdateManyWithoutRequisitoNestedInput
  }

  export type ResgatePremioCreateWithoutPremioInput = {
    id?: string
    dataSolicitacao?: Date | string
    status?: $Enums.StatusResgate
    dataAtualizacao?: Date | string
    motivoCancelamento?: string | null
    criadoEm?: Date | string
    atualizadoEm?: Date | string
    vendedor: UsuarioCreateNestedOneWithoutResgatesPremiosInput
  }

  export type ResgatePremioUncheckedCreateWithoutPremioInput = {
    id?: string
    dataSolicitacao?: Date | string
    status?: $Enums.StatusResgate
    dataAtualizacao?: Date | string
    motivoCancelamento?: string | null
    vendedorId: string
    criadoEm?: Date | string
    atualizadoEm?: Date | string
  }

  export type ResgatePremioCreateOrConnectWithoutPremioInput = {
    where: ResgatePremioWhereUniqueInput
    create: XOR<ResgatePremioCreateWithoutPremioInput, ResgatePremioUncheckedCreateWithoutPremioInput>
  }

  export type ResgatePremioCreateManyPremioInputEnvelope = {
    data: ResgatePremioCreateManyPremioInput | ResgatePremioCreateManyPremioInput[]
    skipDuplicates?: boolean
  }

  export type ResgatePremioUpsertWithWhereUniqueWithoutPremioInput = {
    where: ResgatePremioWhereUniqueInput
    update: XOR<ResgatePremioUpdateWithoutPremioInput, ResgatePremioUncheckedUpdateWithoutPremioInput>
    create: XOR<ResgatePremioCreateWithoutPremioInput, ResgatePremioUncheckedCreateWithoutPremioInput>
  }

  export type ResgatePremioUpdateWithWhereUniqueWithoutPremioInput = {
    where: ResgatePremioWhereUniqueInput
    data: XOR<ResgatePremioUpdateWithoutPremioInput, ResgatePremioUncheckedUpdateWithoutPremioInput>
  }

  export type ResgatePremioUpdateManyWithWhereWithoutPremioInput = {
    where: ResgatePremioScalarWhereInput
    data: XOR<ResgatePremioUpdateManyMutationInput, ResgatePremioUncheckedUpdateManyWithoutPremioInput>
  }

  export type UsuarioCreateWithoutResgatesPremiosInput = {
    id?: string
    email: string
    cpf?: string | null
    nome: string
    whatsapp?: string | null
    senhaHash: string
    avatarUrl?: string | null
    papel: $Enums.PapelUsuario
    status?: $Enums.StatusUsuario
    saldoMoedinhas?: number
    rankingMoedinhas?: number
    nivel?: $Enums.NivelVendedor
    tokenResetarSenha?: string | null
    tokenResetarSenhaExpira?: Date | string | null
    mapeamentoPlanilhaSalvo?: NullableJsonNullValueInput | InputJsonValue
    criadoEm?: Date | string
    atualizadoEm?: Date | string
    optica?: OpticaCreateNestedOneWithoutUsuariosInput
    gerente?: UsuarioCreateNestedOneWithoutVendedoresInput
    vendedores?: UsuarioCreateNestedManyWithoutGerenteInput
    enviosVenda?: EnvioVendaCreateNestedManyWithoutVendedorInput
    relatoriosFinanceiros?: RelatorioFinanceiroCreateNestedManyWithoutUsuarioInput
    notificacoes?: NotificacaoCreateNestedManyWithoutUsuarioInput
    cartelasConcluidas?: CartelaConcluidaCreateNestedManyWithoutVendedorInput
  }

  export type UsuarioUncheckedCreateWithoutResgatesPremiosInput = {
    id?: string
    email: string
    cpf?: string | null
    nome: string
    whatsapp?: string | null
    senhaHash: string
    avatarUrl?: string | null
    papel: $Enums.PapelUsuario
    status?: $Enums.StatusUsuario
    saldoMoedinhas?: number
    rankingMoedinhas?: number
    nivel?: $Enums.NivelVendedor
    tokenResetarSenha?: string | null
    tokenResetarSenhaExpira?: Date | string | null
    mapeamentoPlanilhaSalvo?: NullableJsonNullValueInput | InputJsonValue
    opticaId?: string | null
    gerenteId?: string | null
    criadoEm?: Date | string
    atualizadoEm?: Date | string
    vendedores?: UsuarioUncheckedCreateNestedManyWithoutGerenteInput
    enviosVenda?: EnvioVendaUncheckedCreateNestedManyWithoutVendedorInput
    relatoriosFinanceiros?: RelatorioFinanceiroUncheckedCreateNestedManyWithoutUsuarioInput
    notificacoes?: NotificacaoUncheckedCreateNestedManyWithoutUsuarioInput
    cartelasConcluidas?: CartelaConcluidaUncheckedCreateNestedManyWithoutVendedorInput
  }

  export type UsuarioCreateOrConnectWithoutResgatesPremiosInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutResgatesPremiosInput, UsuarioUncheckedCreateWithoutResgatesPremiosInput>
  }

  export type PremioCreateWithoutResgatesInput = {
    id?: string
    nome: string
    descricao: string
    imageUrl?: string | null
    custoMoedinhas: number
    estoque?: number
    ativo?: boolean
    criadoEm?: Date | string
    atualizadoEm?: Date | string
  }

  export type PremioUncheckedCreateWithoutResgatesInput = {
    id?: string
    nome: string
    descricao: string
    imageUrl?: string | null
    custoMoedinhas: number
    estoque?: number
    ativo?: boolean
    criadoEm?: Date | string
    atualizadoEm?: Date | string
  }

  export type PremioCreateOrConnectWithoutResgatesInput = {
    where: PremioWhereUniqueInput
    create: XOR<PremioCreateWithoutResgatesInput, PremioUncheckedCreateWithoutResgatesInput>
  }

  export type UsuarioUpsertWithoutResgatesPremiosInput = {
    update: XOR<UsuarioUpdateWithoutResgatesPremiosInput, UsuarioUncheckedUpdateWithoutResgatesPremiosInput>
    create: XOR<UsuarioCreateWithoutResgatesPremiosInput, UsuarioUncheckedCreateWithoutResgatesPremiosInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutResgatesPremiosInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutResgatesPremiosInput, UsuarioUncheckedUpdateWithoutResgatesPremiosInput>
  }

  export type UsuarioUpdateWithoutResgatesPremiosInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    nome?: StringFieldUpdateOperationsInput | string
    whatsapp?: NullableStringFieldUpdateOperationsInput | string | null
    senhaHash?: StringFieldUpdateOperationsInput | string
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    papel?: EnumPapelUsuarioFieldUpdateOperationsInput | $Enums.PapelUsuario
    status?: EnumStatusUsuarioFieldUpdateOperationsInput | $Enums.StatusUsuario
    saldoMoedinhas?: IntFieldUpdateOperationsInput | number
    rankingMoedinhas?: IntFieldUpdateOperationsInput | number
    nivel?: EnumNivelVendedorFieldUpdateOperationsInput | $Enums.NivelVendedor
    tokenResetarSenha?: NullableStringFieldUpdateOperationsInput | string | null
    tokenResetarSenhaExpira?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    mapeamentoPlanilhaSalvo?: NullableJsonNullValueInput | InputJsonValue
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    optica?: OpticaUpdateOneWithoutUsuariosNestedInput
    gerente?: UsuarioUpdateOneWithoutVendedoresNestedInput
    vendedores?: UsuarioUpdateManyWithoutGerenteNestedInput
    enviosVenda?: EnvioVendaUpdateManyWithoutVendedorNestedInput
    relatoriosFinanceiros?: RelatorioFinanceiroUpdateManyWithoutUsuarioNestedInput
    notificacoes?: NotificacaoUpdateManyWithoutUsuarioNestedInput
    cartelasConcluidas?: CartelaConcluidaUpdateManyWithoutVendedorNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutResgatesPremiosInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    nome?: StringFieldUpdateOperationsInput | string
    whatsapp?: NullableStringFieldUpdateOperationsInput | string | null
    senhaHash?: StringFieldUpdateOperationsInput | string
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    papel?: EnumPapelUsuarioFieldUpdateOperationsInput | $Enums.PapelUsuario
    status?: EnumStatusUsuarioFieldUpdateOperationsInput | $Enums.StatusUsuario
    saldoMoedinhas?: IntFieldUpdateOperationsInput | number
    rankingMoedinhas?: IntFieldUpdateOperationsInput | number
    nivel?: EnumNivelVendedorFieldUpdateOperationsInput | $Enums.NivelVendedor
    tokenResetarSenha?: NullableStringFieldUpdateOperationsInput | string | null
    tokenResetarSenhaExpira?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    mapeamentoPlanilhaSalvo?: NullableJsonNullValueInput | InputJsonValue
    opticaId?: NullableStringFieldUpdateOperationsInput | string | null
    gerenteId?: NullableStringFieldUpdateOperationsInput | string | null
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    vendedores?: UsuarioUncheckedUpdateManyWithoutGerenteNestedInput
    enviosVenda?: EnvioVendaUncheckedUpdateManyWithoutVendedorNestedInput
    relatoriosFinanceiros?: RelatorioFinanceiroUncheckedUpdateManyWithoutUsuarioNestedInput
    notificacoes?: NotificacaoUncheckedUpdateManyWithoutUsuarioNestedInput
    cartelasConcluidas?: CartelaConcluidaUncheckedUpdateManyWithoutVendedorNestedInput
  }

  export type PremioUpsertWithoutResgatesInput = {
    update: XOR<PremioUpdateWithoutResgatesInput, PremioUncheckedUpdateWithoutResgatesInput>
    create: XOR<PremioCreateWithoutResgatesInput, PremioUncheckedCreateWithoutResgatesInput>
    where?: PremioWhereInput
  }

  export type PremioUpdateToOneWithWhereWithoutResgatesInput = {
    where?: PremioWhereInput
    data: XOR<PremioUpdateWithoutResgatesInput, PremioUncheckedUpdateWithoutResgatesInput>
  }

  export type PremioUpdateWithoutResgatesInput = {
    id?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    custoMoedinhas?: IntFieldUpdateOperationsInput | number
    estoque?: IntFieldUpdateOperationsInput | number
    ativo?: BoolFieldUpdateOperationsInput | boolean
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PremioUncheckedUpdateWithoutResgatesInput = {
    id?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    custoMoedinhas?: IntFieldUpdateOperationsInput | number
    estoque?: IntFieldUpdateOperationsInput | number
    ativo?: BoolFieldUpdateOperationsInput | boolean
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UsuarioCreateWithoutRelatoriosFinanceirosInput = {
    id?: string
    email: string
    cpf?: string | null
    nome: string
    whatsapp?: string | null
    senhaHash: string
    avatarUrl?: string | null
    papel: $Enums.PapelUsuario
    status?: $Enums.StatusUsuario
    saldoMoedinhas?: number
    rankingMoedinhas?: number
    nivel?: $Enums.NivelVendedor
    tokenResetarSenha?: string | null
    tokenResetarSenhaExpira?: Date | string | null
    mapeamentoPlanilhaSalvo?: NullableJsonNullValueInput | InputJsonValue
    criadoEm?: Date | string
    atualizadoEm?: Date | string
    optica?: OpticaCreateNestedOneWithoutUsuariosInput
    gerente?: UsuarioCreateNestedOneWithoutVendedoresInput
    vendedores?: UsuarioCreateNestedManyWithoutGerenteInput
    enviosVenda?: EnvioVendaCreateNestedManyWithoutVendedorInput
    resgatesPremios?: ResgatePremioCreateNestedManyWithoutVendedorInput
    notificacoes?: NotificacaoCreateNestedManyWithoutUsuarioInput
    cartelasConcluidas?: CartelaConcluidaCreateNestedManyWithoutVendedorInput
  }

  export type UsuarioUncheckedCreateWithoutRelatoriosFinanceirosInput = {
    id?: string
    email: string
    cpf?: string | null
    nome: string
    whatsapp?: string | null
    senhaHash: string
    avatarUrl?: string | null
    papel: $Enums.PapelUsuario
    status?: $Enums.StatusUsuario
    saldoMoedinhas?: number
    rankingMoedinhas?: number
    nivel?: $Enums.NivelVendedor
    tokenResetarSenha?: string | null
    tokenResetarSenhaExpira?: Date | string | null
    mapeamentoPlanilhaSalvo?: NullableJsonNullValueInput | InputJsonValue
    opticaId?: string | null
    gerenteId?: string | null
    criadoEm?: Date | string
    atualizadoEm?: Date | string
    vendedores?: UsuarioUncheckedCreateNestedManyWithoutGerenteInput
    enviosVenda?: EnvioVendaUncheckedCreateNestedManyWithoutVendedorInput
    resgatesPremios?: ResgatePremioUncheckedCreateNestedManyWithoutVendedorInput
    notificacoes?: NotificacaoUncheckedCreateNestedManyWithoutUsuarioInput
    cartelasConcluidas?: CartelaConcluidaUncheckedCreateNestedManyWithoutVendedorInput
  }

  export type UsuarioCreateOrConnectWithoutRelatoriosFinanceirosInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutRelatoriosFinanceirosInput, UsuarioUncheckedCreateWithoutRelatoriosFinanceirosInput>
  }

  export type CampanhaCreateWithoutRelatoriosFinanceirosInput = {
    id?: string
    titulo: string
    descricao: string
    dataInicio: Date | string
    dataFim: Date | string
    moedinhasPorCartela: number
    pontosReaisPorCartela: Decimal | DecimalJsLike | number | string
    status?: string
    percentualGerente?: Decimal | DecimalJsLike | number | string
    paraTodasOticas?: boolean
    criadoEm?: Date | string
    atualizadoEm?: Date | string
    oticasAlvo?: OpticaCreateNestedManyWithoutCampanhasAlvoInput
    cartelas?: RegraCartelaCreateNestedManyWithoutCampanhaInput
    enviosVenda?: EnvioVendaCreateNestedManyWithoutCampanhaInput
    cartelasConcluidas?: CartelaConcluidaCreateNestedManyWithoutCampanhaInput
  }

  export type CampanhaUncheckedCreateWithoutRelatoriosFinanceirosInput = {
    id?: string
    titulo: string
    descricao: string
    dataInicio: Date | string
    dataFim: Date | string
    moedinhasPorCartela: number
    pontosReaisPorCartela: Decimal | DecimalJsLike | number | string
    status?: string
    percentualGerente?: Decimal | DecimalJsLike | number | string
    paraTodasOticas?: boolean
    criadoEm?: Date | string
    atualizadoEm?: Date | string
    oticasAlvo?: OpticaUncheckedCreateNestedManyWithoutCampanhasAlvoInput
    cartelas?: RegraCartelaUncheckedCreateNestedManyWithoutCampanhaInput
    enviosVenda?: EnvioVendaUncheckedCreateNestedManyWithoutCampanhaInput
    cartelasConcluidas?: CartelaConcluidaUncheckedCreateNestedManyWithoutCampanhaInput
  }

  export type CampanhaCreateOrConnectWithoutRelatoriosFinanceirosInput = {
    where: CampanhaWhereUniqueInput
    create: XOR<CampanhaCreateWithoutRelatoriosFinanceirosInput, CampanhaUncheckedCreateWithoutRelatoriosFinanceirosInput>
  }

  export type UsuarioUpsertWithoutRelatoriosFinanceirosInput = {
    update: XOR<UsuarioUpdateWithoutRelatoriosFinanceirosInput, UsuarioUncheckedUpdateWithoutRelatoriosFinanceirosInput>
    create: XOR<UsuarioCreateWithoutRelatoriosFinanceirosInput, UsuarioUncheckedCreateWithoutRelatoriosFinanceirosInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutRelatoriosFinanceirosInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutRelatoriosFinanceirosInput, UsuarioUncheckedUpdateWithoutRelatoriosFinanceirosInput>
  }

  export type UsuarioUpdateWithoutRelatoriosFinanceirosInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    nome?: StringFieldUpdateOperationsInput | string
    whatsapp?: NullableStringFieldUpdateOperationsInput | string | null
    senhaHash?: StringFieldUpdateOperationsInput | string
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    papel?: EnumPapelUsuarioFieldUpdateOperationsInput | $Enums.PapelUsuario
    status?: EnumStatusUsuarioFieldUpdateOperationsInput | $Enums.StatusUsuario
    saldoMoedinhas?: IntFieldUpdateOperationsInput | number
    rankingMoedinhas?: IntFieldUpdateOperationsInput | number
    nivel?: EnumNivelVendedorFieldUpdateOperationsInput | $Enums.NivelVendedor
    tokenResetarSenha?: NullableStringFieldUpdateOperationsInput | string | null
    tokenResetarSenhaExpira?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    mapeamentoPlanilhaSalvo?: NullableJsonNullValueInput | InputJsonValue
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    optica?: OpticaUpdateOneWithoutUsuariosNestedInput
    gerente?: UsuarioUpdateOneWithoutVendedoresNestedInput
    vendedores?: UsuarioUpdateManyWithoutGerenteNestedInput
    enviosVenda?: EnvioVendaUpdateManyWithoutVendedorNestedInput
    resgatesPremios?: ResgatePremioUpdateManyWithoutVendedorNestedInput
    notificacoes?: NotificacaoUpdateManyWithoutUsuarioNestedInput
    cartelasConcluidas?: CartelaConcluidaUpdateManyWithoutVendedorNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutRelatoriosFinanceirosInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    nome?: StringFieldUpdateOperationsInput | string
    whatsapp?: NullableStringFieldUpdateOperationsInput | string | null
    senhaHash?: StringFieldUpdateOperationsInput | string
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    papel?: EnumPapelUsuarioFieldUpdateOperationsInput | $Enums.PapelUsuario
    status?: EnumStatusUsuarioFieldUpdateOperationsInput | $Enums.StatusUsuario
    saldoMoedinhas?: IntFieldUpdateOperationsInput | number
    rankingMoedinhas?: IntFieldUpdateOperationsInput | number
    nivel?: EnumNivelVendedorFieldUpdateOperationsInput | $Enums.NivelVendedor
    tokenResetarSenha?: NullableStringFieldUpdateOperationsInput | string | null
    tokenResetarSenhaExpira?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    mapeamentoPlanilhaSalvo?: NullableJsonNullValueInput | InputJsonValue
    opticaId?: NullableStringFieldUpdateOperationsInput | string | null
    gerenteId?: NullableStringFieldUpdateOperationsInput | string | null
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    vendedores?: UsuarioUncheckedUpdateManyWithoutGerenteNestedInput
    enviosVenda?: EnvioVendaUncheckedUpdateManyWithoutVendedorNestedInput
    resgatesPremios?: ResgatePremioUncheckedUpdateManyWithoutVendedorNestedInput
    notificacoes?: NotificacaoUncheckedUpdateManyWithoutUsuarioNestedInput
    cartelasConcluidas?: CartelaConcluidaUncheckedUpdateManyWithoutVendedorNestedInput
  }

  export type CampanhaUpsertWithoutRelatoriosFinanceirosInput = {
    update: XOR<CampanhaUpdateWithoutRelatoriosFinanceirosInput, CampanhaUncheckedUpdateWithoutRelatoriosFinanceirosInput>
    create: XOR<CampanhaCreateWithoutRelatoriosFinanceirosInput, CampanhaUncheckedCreateWithoutRelatoriosFinanceirosInput>
    where?: CampanhaWhereInput
  }

  export type CampanhaUpdateToOneWithWhereWithoutRelatoriosFinanceirosInput = {
    where?: CampanhaWhereInput
    data: XOR<CampanhaUpdateWithoutRelatoriosFinanceirosInput, CampanhaUncheckedUpdateWithoutRelatoriosFinanceirosInput>
  }

  export type CampanhaUpdateWithoutRelatoriosFinanceirosInput = {
    id?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    dataInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    dataFim?: DateTimeFieldUpdateOperationsInput | Date | string
    moedinhasPorCartela?: IntFieldUpdateOperationsInput | number
    pontosReaisPorCartela?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: StringFieldUpdateOperationsInput | string
    percentualGerente?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    paraTodasOticas?: BoolFieldUpdateOperationsInput | boolean
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    oticasAlvo?: OpticaUpdateManyWithoutCampanhasAlvoNestedInput
    cartelas?: RegraCartelaUpdateManyWithoutCampanhaNestedInput
    enviosVenda?: EnvioVendaUpdateManyWithoutCampanhaNestedInput
    cartelasConcluidas?: CartelaConcluidaUpdateManyWithoutCampanhaNestedInput
  }

  export type CampanhaUncheckedUpdateWithoutRelatoriosFinanceirosInput = {
    id?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    dataInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    dataFim?: DateTimeFieldUpdateOperationsInput | Date | string
    moedinhasPorCartela?: IntFieldUpdateOperationsInput | number
    pontosReaisPorCartela?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: StringFieldUpdateOperationsInput | string
    percentualGerente?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    paraTodasOticas?: BoolFieldUpdateOperationsInput | boolean
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    oticasAlvo?: OpticaUncheckedUpdateManyWithoutCampanhasAlvoNestedInput
    cartelas?: RegraCartelaUncheckedUpdateManyWithoutCampanhaNestedInput
    enviosVenda?: EnvioVendaUncheckedUpdateManyWithoutCampanhaNestedInput
    cartelasConcluidas?: CartelaConcluidaUncheckedUpdateManyWithoutCampanhaNestedInput
  }

  export type UsuarioCreateWithoutNotificacoesInput = {
    id?: string
    email: string
    cpf?: string | null
    nome: string
    whatsapp?: string | null
    senhaHash: string
    avatarUrl?: string | null
    papel: $Enums.PapelUsuario
    status?: $Enums.StatusUsuario
    saldoMoedinhas?: number
    rankingMoedinhas?: number
    nivel?: $Enums.NivelVendedor
    tokenResetarSenha?: string | null
    tokenResetarSenhaExpira?: Date | string | null
    mapeamentoPlanilhaSalvo?: NullableJsonNullValueInput | InputJsonValue
    criadoEm?: Date | string
    atualizadoEm?: Date | string
    optica?: OpticaCreateNestedOneWithoutUsuariosInput
    gerente?: UsuarioCreateNestedOneWithoutVendedoresInput
    vendedores?: UsuarioCreateNestedManyWithoutGerenteInput
    enviosVenda?: EnvioVendaCreateNestedManyWithoutVendedorInput
    resgatesPremios?: ResgatePremioCreateNestedManyWithoutVendedorInput
    relatoriosFinanceiros?: RelatorioFinanceiroCreateNestedManyWithoutUsuarioInput
    cartelasConcluidas?: CartelaConcluidaCreateNestedManyWithoutVendedorInput
  }

  export type UsuarioUncheckedCreateWithoutNotificacoesInput = {
    id?: string
    email: string
    cpf?: string | null
    nome: string
    whatsapp?: string | null
    senhaHash: string
    avatarUrl?: string | null
    papel: $Enums.PapelUsuario
    status?: $Enums.StatusUsuario
    saldoMoedinhas?: number
    rankingMoedinhas?: number
    nivel?: $Enums.NivelVendedor
    tokenResetarSenha?: string | null
    tokenResetarSenhaExpira?: Date | string | null
    mapeamentoPlanilhaSalvo?: NullableJsonNullValueInput | InputJsonValue
    opticaId?: string | null
    gerenteId?: string | null
    criadoEm?: Date | string
    atualizadoEm?: Date | string
    vendedores?: UsuarioUncheckedCreateNestedManyWithoutGerenteInput
    enviosVenda?: EnvioVendaUncheckedCreateNestedManyWithoutVendedorInput
    resgatesPremios?: ResgatePremioUncheckedCreateNestedManyWithoutVendedorInput
    relatoriosFinanceiros?: RelatorioFinanceiroUncheckedCreateNestedManyWithoutUsuarioInput
    cartelasConcluidas?: CartelaConcluidaUncheckedCreateNestedManyWithoutVendedorInput
  }

  export type UsuarioCreateOrConnectWithoutNotificacoesInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutNotificacoesInput, UsuarioUncheckedCreateWithoutNotificacoesInput>
  }

  export type UsuarioUpsertWithoutNotificacoesInput = {
    update: XOR<UsuarioUpdateWithoutNotificacoesInput, UsuarioUncheckedUpdateWithoutNotificacoesInput>
    create: XOR<UsuarioCreateWithoutNotificacoesInput, UsuarioUncheckedCreateWithoutNotificacoesInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutNotificacoesInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutNotificacoesInput, UsuarioUncheckedUpdateWithoutNotificacoesInput>
  }

  export type UsuarioUpdateWithoutNotificacoesInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    nome?: StringFieldUpdateOperationsInput | string
    whatsapp?: NullableStringFieldUpdateOperationsInput | string | null
    senhaHash?: StringFieldUpdateOperationsInput | string
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    papel?: EnumPapelUsuarioFieldUpdateOperationsInput | $Enums.PapelUsuario
    status?: EnumStatusUsuarioFieldUpdateOperationsInput | $Enums.StatusUsuario
    saldoMoedinhas?: IntFieldUpdateOperationsInput | number
    rankingMoedinhas?: IntFieldUpdateOperationsInput | number
    nivel?: EnumNivelVendedorFieldUpdateOperationsInput | $Enums.NivelVendedor
    tokenResetarSenha?: NullableStringFieldUpdateOperationsInput | string | null
    tokenResetarSenhaExpira?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    mapeamentoPlanilhaSalvo?: NullableJsonNullValueInput | InputJsonValue
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    optica?: OpticaUpdateOneWithoutUsuariosNestedInput
    gerente?: UsuarioUpdateOneWithoutVendedoresNestedInput
    vendedores?: UsuarioUpdateManyWithoutGerenteNestedInput
    enviosVenda?: EnvioVendaUpdateManyWithoutVendedorNestedInput
    resgatesPremios?: ResgatePremioUpdateManyWithoutVendedorNestedInput
    relatoriosFinanceiros?: RelatorioFinanceiroUpdateManyWithoutUsuarioNestedInput
    cartelasConcluidas?: CartelaConcluidaUpdateManyWithoutVendedorNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutNotificacoesInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    nome?: StringFieldUpdateOperationsInput | string
    whatsapp?: NullableStringFieldUpdateOperationsInput | string | null
    senhaHash?: StringFieldUpdateOperationsInput | string
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    papel?: EnumPapelUsuarioFieldUpdateOperationsInput | $Enums.PapelUsuario
    status?: EnumStatusUsuarioFieldUpdateOperationsInput | $Enums.StatusUsuario
    saldoMoedinhas?: IntFieldUpdateOperationsInput | number
    rankingMoedinhas?: IntFieldUpdateOperationsInput | number
    nivel?: EnumNivelVendedorFieldUpdateOperationsInput | $Enums.NivelVendedor
    tokenResetarSenha?: NullableStringFieldUpdateOperationsInput | string | null
    tokenResetarSenhaExpira?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    mapeamentoPlanilhaSalvo?: NullableJsonNullValueInput | InputJsonValue
    opticaId?: NullableStringFieldUpdateOperationsInput | string | null
    gerenteId?: NullableStringFieldUpdateOperationsInput | string | null
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    vendedores?: UsuarioUncheckedUpdateManyWithoutGerenteNestedInput
    enviosVenda?: EnvioVendaUncheckedUpdateManyWithoutVendedorNestedInput
    resgatesPremios?: ResgatePremioUncheckedUpdateManyWithoutVendedorNestedInput
    relatoriosFinanceiros?: RelatorioFinanceiroUncheckedUpdateManyWithoutUsuarioNestedInput
    cartelasConcluidas?: CartelaConcluidaUncheckedUpdateManyWithoutVendedorNestedInput
  }

  export type UsuarioCreateWithoutCartelasConcluidasInput = {
    id?: string
    email: string
    cpf?: string | null
    nome: string
    whatsapp?: string | null
    senhaHash: string
    avatarUrl?: string | null
    papel: $Enums.PapelUsuario
    status?: $Enums.StatusUsuario
    saldoMoedinhas?: number
    rankingMoedinhas?: number
    nivel?: $Enums.NivelVendedor
    tokenResetarSenha?: string | null
    tokenResetarSenhaExpira?: Date | string | null
    mapeamentoPlanilhaSalvo?: NullableJsonNullValueInput | InputJsonValue
    criadoEm?: Date | string
    atualizadoEm?: Date | string
    optica?: OpticaCreateNestedOneWithoutUsuariosInput
    gerente?: UsuarioCreateNestedOneWithoutVendedoresInput
    vendedores?: UsuarioCreateNestedManyWithoutGerenteInput
    enviosVenda?: EnvioVendaCreateNestedManyWithoutVendedorInput
    resgatesPremios?: ResgatePremioCreateNestedManyWithoutVendedorInput
    relatoriosFinanceiros?: RelatorioFinanceiroCreateNestedManyWithoutUsuarioInput
    notificacoes?: NotificacaoCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioUncheckedCreateWithoutCartelasConcluidasInput = {
    id?: string
    email: string
    cpf?: string | null
    nome: string
    whatsapp?: string | null
    senhaHash: string
    avatarUrl?: string | null
    papel: $Enums.PapelUsuario
    status?: $Enums.StatusUsuario
    saldoMoedinhas?: number
    rankingMoedinhas?: number
    nivel?: $Enums.NivelVendedor
    tokenResetarSenha?: string | null
    tokenResetarSenhaExpira?: Date | string | null
    mapeamentoPlanilhaSalvo?: NullableJsonNullValueInput | InputJsonValue
    opticaId?: string | null
    gerenteId?: string | null
    criadoEm?: Date | string
    atualizadoEm?: Date | string
    vendedores?: UsuarioUncheckedCreateNestedManyWithoutGerenteInput
    enviosVenda?: EnvioVendaUncheckedCreateNestedManyWithoutVendedorInput
    resgatesPremios?: ResgatePremioUncheckedCreateNestedManyWithoutVendedorInput
    relatoriosFinanceiros?: RelatorioFinanceiroUncheckedCreateNestedManyWithoutUsuarioInput
    notificacoes?: NotificacaoUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioCreateOrConnectWithoutCartelasConcluidasInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutCartelasConcluidasInput, UsuarioUncheckedCreateWithoutCartelasConcluidasInput>
  }

  export type CampanhaCreateWithoutCartelasConcluidasInput = {
    id?: string
    titulo: string
    descricao: string
    dataInicio: Date | string
    dataFim: Date | string
    moedinhasPorCartela: number
    pontosReaisPorCartela: Decimal | DecimalJsLike | number | string
    status?: string
    percentualGerente?: Decimal | DecimalJsLike | number | string
    paraTodasOticas?: boolean
    criadoEm?: Date | string
    atualizadoEm?: Date | string
    oticasAlvo?: OpticaCreateNestedManyWithoutCampanhasAlvoInput
    cartelas?: RegraCartelaCreateNestedManyWithoutCampanhaInput
    enviosVenda?: EnvioVendaCreateNestedManyWithoutCampanhaInput
    relatoriosFinanceiros?: RelatorioFinanceiroCreateNestedManyWithoutCampanhaInput
  }

  export type CampanhaUncheckedCreateWithoutCartelasConcluidasInput = {
    id?: string
    titulo: string
    descricao: string
    dataInicio: Date | string
    dataFim: Date | string
    moedinhasPorCartela: number
    pontosReaisPorCartela: Decimal | DecimalJsLike | number | string
    status?: string
    percentualGerente?: Decimal | DecimalJsLike | number | string
    paraTodasOticas?: boolean
    criadoEm?: Date | string
    atualizadoEm?: Date | string
    oticasAlvo?: OpticaUncheckedCreateNestedManyWithoutCampanhasAlvoInput
    cartelas?: RegraCartelaUncheckedCreateNestedManyWithoutCampanhaInput
    enviosVenda?: EnvioVendaUncheckedCreateNestedManyWithoutCampanhaInput
    relatoriosFinanceiros?: RelatorioFinanceiroUncheckedCreateNestedManyWithoutCampanhaInput
  }

  export type CampanhaCreateOrConnectWithoutCartelasConcluidasInput = {
    where: CampanhaWhereUniqueInput
    create: XOR<CampanhaCreateWithoutCartelasConcluidasInput, CampanhaUncheckedCreateWithoutCartelasConcluidasInput>
  }

  export type UsuarioUpsertWithoutCartelasConcluidasInput = {
    update: XOR<UsuarioUpdateWithoutCartelasConcluidasInput, UsuarioUncheckedUpdateWithoutCartelasConcluidasInput>
    create: XOR<UsuarioCreateWithoutCartelasConcluidasInput, UsuarioUncheckedCreateWithoutCartelasConcluidasInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutCartelasConcluidasInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutCartelasConcluidasInput, UsuarioUncheckedUpdateWithoutCartelasConcluidasInput>
  }

  export type UsuarioUpdateWithoutCartelasConcluidasInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    nome?: StringFieldUpdateOperationsInput | string
    whatsapp?: NullableStringFieldUpdateOperationsInput | string | null
    senhaHash?: StringFieldUpdateOperationsInput | string
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    papel?: EnumPapelUsuarioFieldUpdateOperationsInput | $Enums.PapelUsuario
    status?: EnumStatusUsuarioFieldUpdateOperationsInput | $Enums.StatusUsuario
    saldoMoedinhas?: IntFieldUpdateOperationsInput | number
    rankingMoedinhas?: IntFieldUpdateOperationsInput | number
    nivel?: EnumNivelVendedorFieldUpdateOperationsInput | $Enums.NivelVendedor
    tokenResetarSenha?: NullableStringFieldUpdateOperationsInput | string | null
    tokenResetarSenhaExpira?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    mapeamentoPlanilhaSalvo?: NullableJsonNullValueInput | InputJsonValue
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    optica?: OpticaUpdateOneWithoutUsuariosNestedInput
    gerente?: UsuarioUpdateOneWithoutVendedoresNestedInput
    vendedores?: UsuarioUpdateManyWithoutGerenteNestedInput
    enviosVenda?: EnvioVendaUpdateManyWithoutVendedorNestedInput
    resgatesPremios?: ResgatePremioUpdateManyWithoutVendedorNestedInput
    relatoriosFinanceiros?: RelatorioFinanceiroUpdateManyWithoutUsuarioNestedInput
    notificacoes?: NotificacaoUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutCartelasConcluidasInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    nome?: StringFieldUpdateOperationsInput | string
    whatsapp?: NullableStringFieldUpdateOperationsInput | string | null
    senhaHash?: StringFieldUpdateOperationsInput | string
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    papel?: EnumPapelUsuarioFieldUpdateOperationsInput | $Enums.PapelUsuario
    status?: EnumStatusUsuarioFieldUpdateOperationsInput | $Enums.StatusUsuario
    saldoMoedinhas?: IntFieldUpdateOperationsInput | number
    rankingMoedinhas?: IntFieldUpdateOperationsInput | number
    nivel?: EnumNivelVendedorFieldUpdateOperationsInput | $Enums.NivelVendedor
    tokenResetarSenha?: NullableStringFieldUpdateOperationsInput | string | null
    tokenResetarSenhaExpira?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    mapeamentoPlanilhaSalvo?: NullableJsonNullValueInput | InputJsonValue
    opticaId?: NullableStringFieldUpdateOperationsInput | string | null
    gerenteId?: NullableStringFieldUpdateOperationsInput | string | null
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    vendedores?: UsuarioUncheckedUpdateManyWithoutGerenteNestedInput
    enviosVenda?: EnvioVendaUncheckedUpdateManyWithoutVendedorNestedInput
    resgatesPremios?: ResgatePremioUncheckedUpdateManyWithoutVendedorNestedInput
    relatoriosFinanceiros?: RelatorioFinanceiroUncheckedUpdateManyWithoutUsuarioNestedInput
    notificacoes?: NotificacaoUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type CampanhaUpsertWithoutCartelasConcluidasInput = {
    update: XOR<CampanhaUpdateWithoutCartelasConcluidasInput, CampanhaUncheckedUpdateWithoutCartelasConcluidasInput>
    create: XOR<CampanhaCreateWithoutCartelasConcluidasInput, CampanhaUncheckedCreateWithoutCartelasConcluidasInput>
    where?: CampanhaWhereInput
  }

  export type CampanhaUpdateToOneWithWhereWithoutCartelasConcluidasInput = {
    where?: CampanhaWhereInput
    data: XOR<CampanhaUpdateWithoutCartelasConcluidasInput, CampanhaUncheckedUpdateWithoutCartelasConcluidasInput>
  }

  export type CampanhaUpdateWithoutCartelasConcluidasInput = {
    id?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    dataInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    dataFim?: DateTimeFieldUpdateOperationsInput | Date | string
    moedinhasPorCartela?: IntFieldUpdateOperationsInput | number
    pontosReaisPorCartela?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: StringFieldUpdateOperationsInput | string
    percentualGerente?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    paraTodasOticas?: BoolFieldUpdateOperationsInput | boolean
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    oticasAlvo?: OpticaUpdateManyWithoutCampanhasAlvoNestedInput
    cartelas?: RegraCartelaUpdateManyWithoutCampanhaNestedInput
    enviosVenda?: EnvioVendaUpdateManyWithoutCampanhaNestedInput
    relatoriosFinanceiros?: RelatorioFinanceiroUpdateManyWithoutCampanhaNestedInput
  }

  export type CampanhaUncheckedUpdateWithoutCartelasConcluidasInput = {
    id?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    dataInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    dataFim?: DateTimeFieldUpdateOperationsInput | Date | string
    moedinhasPorCartela?: IntFieldUpdateOperationsInput | number
    pontosReaisPorCartela?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: StringFieldUpdateOperationsInput | string
    percentualGerente?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    paraTodasOticas?: BoolFieldUpdateOperationsInput | boolean
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    oticasAlvo?: OpticaUncheckedUpdateManyWithoutCampanhasAlvoNestedInput
    cartelas?: RegraCartelaUncheckedUpdateManyWithoutCampanhaNestedInput
    enviosVenda?: EnvioVendaUncheckedUpdateManyWithoutCampanhaNestedInput
    relatoriosFinanceiros?: RelatorioFinanceiroUncheckedUpdateManyWithoutCampanhaNestedInput
  }

  export type OpticaCreateManyMatrizInput = {
    id?: string
    cnpj: string
    nome: string
    endereco?: string | null
    cidade?: string | null
    estado?: string | null
    telefone?: string | null
    email?: string | null
    ativa?: boolean
    ehMatriz?: boolean
    criadoEm?: Date | string
    atualizadoEm?: Date | string
  }

  export type UsuarioCreateManyOpticaInput = {
    id?: string
    email: string
    cpf?: string | null
    nome: string
    whatsapp?: string | null
    senhaHash: string
    avatarUrl?: string | null
    papel: $Enums.PapelUsuario
    status?: $Enums.StatusUsuario
    saldoMoedinhas?: number
    rankingMoedinhas?: number
    nivel?: $Enums.NivelVendedor
    tokenResetarSenha?: string | null
    tokenResetarSenhaExpira?: Date | string | null
    mapeamentoPlanilhaSalvo?: NullableJsonNullValueInput | InputJsonValue
    gerenteId?: string | null
    criadoEm?: Date | string
    atualizadoEm?: Date | string
  }

  export type OpticaUpdateWithoutMatrizInput = {
    id?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    endereco?: NullableStringFieldUpdateOperationsInput | string | null
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    ativa?: BoolFieldUpdateOperationsInput | boolean
    ehMatriz?: BoolFieldUpdateOperationsInput | boolean
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    filiais?: OpticaUpdateManyWithoutMatrizNestedInput
    usuarios?: UsuarioUpdateManyWithoutOpticaNestedInput
    campanhasAlvo?: CampanhaUpdateManyWithoutOticasAlvoNestedInput
  }

  export type OpticaUncheckedUpdateWithoutMatrizInput = {
    id?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    endereco?: NullableStringFieldUpdateOperationsInput | string | null
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    ativa?: BoolFieldUpdateOperationsInput | boolean
    ehMatriz?: BoolFieldUpdateOperationsInput | boolean
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    filiais?: OpticaUncheckedUpdateManyWithoutMatrizNestedInput
    usuarios?: UsuarioUncheckedUpdateManyWithoutOpticaNestedInput
    campanhasAlvo?: CampanhaUncheckedUpdateManyWithoutOticasAlvoNestedInput
  }

  export type OpticaUncheckedUpdateManyWithoutMatrizInput = {
    id?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    endereco?: NullableStringFieldUpdateOperationsInput | string | null
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    ativa?: BoolFieldUpdateOperationsInput | boolean
    ehMatriz?: BoolFieldUpdateOperationsInput | boolean
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UsuarioUpdateWithoutOpticaInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    nome?: StringFieldUpdateOperationsInput | string
    whatsapp?: NullableStringFieldUpdateOperationsInput | string | null
    senhaHash?: StringFieldUpdateOperationsInput | string
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    papel?: EnumPapelUsuarioFieldUpdateOperationsInput | $Enums.PapelUsuario
    status?: EnumStatusUsuarioFieldUpdateOperationsInput | $Enums.StatusUsuario
    saldoMoedinhas?: IntFieldUpdateOperationsInput | number
    rankingMoedinhas?: IntFieldUpdateOperationsInput | number
    nivel?: EnumNivelVendedorFieldUpdateOperationsInput | $Enums.NivelVendedor
    tokenResetarSenha?: NullableStringFieldUpdateOperationsInput | string | null
    tokenResetarSenhaExpira?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    mapeamentoPlanilhaSalvo?: NullableJsonNullValueInput | InputJsonValue
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    gerente?: UsuarioUpdateOneWithoutVendedoresNestedInput
    vendedores?: UsuarioUpdateManyWithoutGerenteNestedInput
    enviosVenda?: EnvioVendaUpdateManyWithoutVendedorNestedInput
    resgatesPremios?: ResgatePremioUpdateManyWithoutVendedorNestedInput
    relatoriosFinanceiros?: RelatorioFinanceiroUpdateManyWithoutUsuarioNestedInput
    notificacoes?: NotificacaoUpdateManyWithoutUsuarioNestedInput
    cartelasConcluidas?: CartelaConcluidaUpdateManyWithoutVendedorNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutOpticaInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    nome?: StringFieldUpdateOperationsInput | string
    whatsapp?: NullableStringFieldUpdateOperationsInput | string | null
    senhaHash?: StringFieldUpdateOperationsInput | string
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    papel?: EnumPapelUsuarioFieldUpdateOperationsInput | $Enums.PapelUsuario
    status?: EnumStatusUsuarioFieldUpdateOperationsInput | $Enums.StatusUsuario
    saldoMoedinhas?: IntFieldUpdateOperationsInput | number
    rankingMoedinhas?: IntFieldUpdateOperationsInput | number
    nivel?: EnumNivelVendedorFieldUpdateOperationsInput | $Enums.NivelVendedor
    tokenResetarSenha?: NullableStringFieldUpdateOperationsInput | string | null
    tokenResetarSenhaExpira?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    mapeamentoPlanilhaSalvo?: NullableJsonNullValueInput | InputJsonValue
    gerenteId?: NullableStringFieldUpdateOperationsInput | string | null
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    vendedores?: UsuarioUncheckedUpdateManyWithoutGerenteNestedInput
    enviosVenda?: EnvioVendaUncheckedUpdateManyWithoutVendedorNestedInput
    resgatesPremios?: ResgatePremioUncheckedUpdateManyWithoutVendedorNestedInput
    relatoriosFinanceiros?: RelatorioFinanceiroUncheckedUpdateManyWithoutUsuarioNestedInput
    notificacoes?: NotificacaoUncheckedUpdateManyWithoutUsuarioNestedInput
    cartelasConcluidas?: CartelaConcluidaUncheckedUpdateManyWithoutVendedorNestedInput
  }

  export type UsuarioUncheckedUpdateManyWithoutOpticaInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    nome?: StringFieldUpdateOperationsInput | string
    whatsapp?: NullableStringFieldUpdateOperationsInput | string | null
    senhaHash?: StringFieldUpdateOperationsInput | string
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    papel?: EnumPapelUsuarioFieldUpdateOperationsInput | $Enums.PapelUsuario
    status?: EnumStatusUsuarioFieldUpdateOperationsInput | $Enums.StatusUsuario
    saldoMoedinhas?: IntFieldUpdateOperationsInput | number
    rankingMoedinhas?: IntFieldUpdateOperationsInput | number
    nivel?: EnumNivelVendedorFieldUpdateOperationsInput | $Enums.NivelVendedor
    tokenResetarSenha?: NullableStringFieldUpdateOperationsInput | string | null
    tokenResetarSenhaExpira?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    mapeamentoPlanilhaSalvo?: NullableJsonNullValueInput | InputJsonValue
    gerenteId?: NullableStringFieldUpdateOperationsInput | string | null
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CampanhaUpdateWithoutOticasAlvoInput = {
    id?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    dataInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    dataFim?: DateTimeFieldUpdateOperationsInput | Date | string
    moedinhasPorCartela?: IntFieldUpdateOperationsInput | number
    pontosReaisPorCartela?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: StringFieldUpdateOperationsInput | string
    percentualGerente?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    paraTodasOticas?: BoolFieldUpdateOperationsInput | boolean
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    cartelas?: RegraCartelaUpdateManyWithoutCampanhaNestedInput
    enviosVenda?: EnvioVendaUpdateManyWithoutCampanhaNestedInput
    relatoriosFinanceiros?: RelatorioFinanceiroUpdateManyWithoutCampanhaNestedInput
    cartelasConcluidas?: CartelaConcluidaUpdateManyWithoutCampanhaNestedInput
  }

  export type CampanhaUncheckedUpdateWithoutOticasAlvoInput = {
    id?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    dataInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    dataFim?: DateTimeFieldUpdateOperationsInput | Date | string
    moedinhasPorCartela?: IntFieldUpdateOperationsInput | number
    pontosReaisPorCartela?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: StringFieldUpdateOperationsInput | string
    percentualGerente?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    paraTodasOticas?: BoolFieldUpdateOperationsInput | boolean
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    cartelas?: RegraCartelaUncheckedUpdateManyWithoutCampanhaNestedInput
    enviosVenda?: EnvioVendaUncheckedUpdateManyWithoutCampanhaNestedInput
    relatoriosFinanceiros?: RelatorioFinanceiroUncheckedUpdateManyWithoutCampanhaNestedInput
    cartelasConcluidas?: CartelaConcluidaUncheckedUpdateManyWithoutCampanhaNestedInput
  }

  export type CampanhaUncheckedUpdateManyWithoutOticasAlvoInput = {
    id?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    dataInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    dataFim?: DateTimeFieldUpdateOperationsInput | Date | string
    moedinhasPorCartela?: IntFieldUpdateOperationsInput | number
    pontosReaisPorCartela?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: StringFieldUpdateOperationsInput | string
    percentualGerente?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    paraTodasOticas?: BoolFieldUpdateOperationsInput | boolean
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UsuarioCreateManyGerenteInput = {
    id?: string
    email: string
    cpf?: string | null
    nome: string
    whatsapp?: string | null
    senhaHash: string
    avatarUrl?: string | null
    papel: $Enums.PapelUsuario
    status?: $Enums.StatusUsuario
    saldoMoedinhas?: number
    rankingMoedinhas?: number
    nivel?: $Enums.NivelVendedor
    tokenResetarSenha?: string | null
    tokenResetarSenhaExpira?: Date | string | null
    mapeamentoPlanilhaSalvo?: NullableJsonNullValueInput | InputJsonValue
    opticaId?: string | null
    criadoEm?: Date | string
    atualizadoEm?: Date | string
  }

  export type EnvioVendaCreateManyVendedorInput = {
    id?: string
    numeroPedido: string
    status?: $Enums.StatusEnvioVenda
    dataEnvio?: Date | string
    motivoRejeicao?: string | null
    infoConflito?: string | null
    numeroCartelaAtendida?: number | null
    dataValidacao?: Date | string | null
    campanhaId: string
    requisitoId: string
    criadoEm?: Date | string
    atualizadoEm?: Date | string
  }

  export type ResgatePremioCreateManyVendedorInput = {
    id?: string
    dataSolicitacao?: Date | string
    status?: $Enums.StatusResgate
    dataAtualizacao?: Date | string
    motivoCancelamento?: string | null
    premioId: string
    criadoEm?: Date | string
    atualizadoEm?: Date | string
  }

  export type RelatorioFinanceiroCreateManyUsuarioInput = {
    id?: string
    valor: Decimal | DecimalJsLike | number | string
    status?: $Enums.StatusPagamento
    tipo: string
    dataGerado?: Date | string
    dataPagamento?: Date | string | null
    observacoes?: string | null
    campanhaId: string
    criadoEm?: Date | string
    atualizadoEm?: Date | string
  }

  export type NotificacaoCreateManyUsuarioInput = {
    id?: string
    mensagem: string
    lida?: boolean
    linkUrl?: string | null
    dataCriacao?: Date | string
    criadoEm?: Date | string
    atualizadoEm?: Date | string
  }

  export type CartelaConcluidaCreateManyVendedorInput = {
    id?: string
    dataConclusao?: Date | string
    numeroCartela: number
    campanhaId: string
  }

  export type UsuarioUpdateWithoutGerenteInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    nome?: StringFieldUpdateOperationsInput | string
    whatsapp?: NullableStringFieldUpdateOperationsInput | string | null
    senhaHash?: StringFieldUpdateOperationsInput | string
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    papel?: EnumPapelUsuarioFieldUpdateOperationsInput | $Enums.PapelUsuario
    status?: EnumStatusUsuarioFieldUpdateOperationsInput | $Enums.StatusUsuario
    saldoMoedinhas?: IntFieldUpdateOperationsInput | number
    rankingMoedinhas?: IntFieldUpdateOperationsInput | number
    nivel?: EnumNivelVendedorFieldUpdateOperationsInput | $Enums.NivelVendedor
    tokenResetarSenha?: NullableStringFieldUpdateOperationsInput | string | null
    tokenResetarSenhaExpira?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    mapeamentoPlanilhaSalvo?: NullableJsonNullValueInput | InputJsonValue
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    optica?: OpticaUpdateOneWithoutUsuariosNestedInput
    vendedores?: UsuarioUpdateManyWithoutGerenteNestedInput
    enviosVenda?: EnvioVendaUpdateManyWithoutVendedorNestedInput
    resgatesPremios?: ResgatePremioUpdateManyWithoutVendedorNestedInput
    relatoriosFinanceiros?: RelatorioFinanceiroUpdateManyWithoutUsuarioNestedInput
    notificacoes?: NotificacaoUpdateManyWithoutUsuarioNestedInput
    cartelasConcluidas?: CartelaConcluidaUpdateManyWithoutVendedorNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutGerenteInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    nome?: StringFieldUpdateOperationsInput | string
    whatsapp?: NullableStringFieldUpdateOperationsInput | string | null
    senhaHash?: StringFieldUpdateOperationsInput | string
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    papel?: EnumPapelUsuarioFieldUpdateOperationsInput | $Enums.PapelUsuario
    status?: EnumStatusUsuarioFieldUpdateOperationsInput | $Enums.StatusUsuario
    saldoMoedinhas?: IntFieldUpdateOperationsInput | number
    rankingMoedinhas?: IntFieldUpdateOperationsInput | number
    nivel?: EnumNivelVendedorFieldUpdateOperationsInput | $Enums.NivelVendedor
    tokenResetarSenha?: NullableStringFieldUpdateOperationsInput | string | null
    tokenResetarSenhaExpira?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    mapeamentoPlanilhaSalvo?: NullableJsonNullValueInput | InputJsonValue
    opticaId?: NullableStringFieldUpdateOperationsInput | string | null
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    vendedores?: UsuarioUncheckedUpdateManyWithoutGerenteNestedInput
    enviosVenda?: EnvioVendaUncheckedUpdateManyWithoutVendedorNestedInput
    resgatesPremios?: ResgatePremioUncheckedUpdateManyWithoutVendedorNestedInput
    relatoriosFinanceiros?: RelatorioFinanceiroUncheckedUpdateManyWithoutUsuarioNestedInput
    notificacoes?: NotificacaoUncheckedUpdateManyWithoutUsuarioNestedInput
    cartelasConcluidas?: CartelaConcluidaUncheckedUpdateManyWithoutVendedorNestedInput
  }

  export type UsuarioUncheckedUpdateManyWithoutGerenteInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    nome?: StringFieldUpdateOperationsInput | string
    whatsapp?: NullableStringFieldUpdateOperationsInput | string | null
    senhaHash?: StringFieldUpdateOperationsInput | string
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    papel?: EnumPapelUsuarioFieldUpdateOperationsInput | $Enums.PapelUsuario
    status?: EnumStatusUsuarioFieldUpdateOperationsInput | $Enums.StatusUsuario
    saldoMoedinhas?: IntFieldUpdateOperationsInput | number
    rankingMoedinhas?: IntFieldUpdateOperationsInput | number
    nivel?: EnumNivelVendedorFieldUpdateOperationsInput | $Enums.NivelVendedor
    tokenResetarSenha?: NullableStringFieldUpdateOperationsInput | string | null
    tokenResetarSenhaExpira?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    mapeamentoPlanilhaSalvo?: NullableJsonNullValueInput | InputJsonValue
    opticaId?: NullableStringFieldUpdateOperationsInput | string | null
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EnvioVendaUpdateWithoutVendedorInput = {
    id?: StringFieldUpdateOperationsInput | string
    numeroPedido?: StringFieldUpdateOperationsInput | string
    status?: EnumStatusEnvioVendaFieldUpdateOperationsInput | $Enums.StatusEnvioVenda
    dataEnvio?: DateTimeFieldUpdateOperationsInput | Date | string
    motivoRejeicao?: NullableStringFieldUpdateOperationsInput | string | null
    infoConflito?: NullableStringFieldUpdateOperationsInput | string | null
    numeroCartelaAtendida?: NullableIntFieldUpdateOperationsInput | number | null
    dataValidacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    campanha?: CampanhaUpdateOneRequiredWithoutEnviosVendaNestedInput
    requisito?: RequisitoCartelaUpdateOneRequiredWithoutEnviosVendaNestedInput
  }

  export type EnvioVendaUncheckedUpdateWithoutVendedorInput = {
    id?: StringFieldUpdateOperationsInput | string
    numeroPedido?: StringFieldUpdateOperationsInput | string
    status?: EnumStatusEnvioVendaFieldUpdateOperationsInput | $Enums.StatusEnvioVenda
    dataEnvio?: DateTimeFieldUpdateOperationsInput | Date | string
    motivoRejeicao?: NullableStringFieldUpdateOperationsInput | string | null
    infoConflito?: NullableStringFieldUpdateOperationsInput | string | null
    numeroCartelaAtendida?: NullableIntFieldUpdateOperationsInput | number | null
    dataValidacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    campanhaId?: StringFieldUpdateOperationsInput | string
    requisitoId?: StringFieldUpdateOperationsInput | string
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EnvioVendaUncheckedUpdateManyWithoutVendedorInput = {
    id?: StringFieldUpdateOperationsInput | string
    numeroPedido?: StringFieldUpdateOperationsInput | string
    status?: EnumStatusEnvioVendaFieldUpdateOperationsInput | $Enums.StatusEnvioVenda
    dataEnvio?: DateTimeFieldUpdateOperationsInput | Date | string
    motivoRejeicao?: NullableStringFieldUpdateOperationsInput | string | null
    infoConflito?: NullableStringFieldUpdateOperationsInput | string | null
    numeroCartelaAtendida?: NullableIntFieldUpdateOperationsInput | number | null
    dataValidacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    campanhaId?: StringFieldUpdateOperationsInput | string
    requisitoId?: StringFieldUpdateOperationsInput | string
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ResgatePremioUpdateWithoutVendedorInput = {
    id?: StringFieldUpdateOperationsInput | string
    dataSolicitacao?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumStatusResgateFieldUpdateOperationsInput | $Enums.StatusResgate
    dataAtualizacao?: DateTimeFieldUpdateOperationsInput | Date | string
    motivoCancelamento?: NullableStringFieldUpdateOperationsInput | string | null
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    premio?: PremioUpdateOneRequiredWithoutResgatesNestedInput
  }

  export type ResgatePremioUncheckedUpdateWithoutVendedorInput = {
    id?: StringFieldUpdateOperationsInput | string
    dataSolicitacao?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumStatusResgateFieldUpdateOperationsInput | $Enums.StatusResgate
    dataAtualizacao?: DateTimeFieldUpdateOperationsInput | Date | string
    motivoCancelamento?: NullableStringFieldUpdateOperationsInput | string | null
    premioId?: StringFieldUpdateOperationsInput | string
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ResgatePremioUncheckedUpdateManyWithoutVendedorInput = {
    id?: StringFieldUpdateOperationsInput | string
    dataSolicitacao?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumStatusResgateFieldUpdateOperationsInput | $Enums.StatusResgate
    dataAtualizacao?: DateTimeFieldUpdateOperationsInput | Date | string
    motivoCancelamento?: NullableStringFieldUpdateOperationsInput | string | null
    premioId?: StringFieldUpdateOperationsInput | string
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RelatorioFinanceiroUpdateWithoutUsuarioInput = {
    id?: StringFieldUpdateOperationsInput | string
    valor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: EnumStatusPagamentoFieldUpdateOperationsInput | $Enums.StatusPagamento
    tipo?: StringFieldUpdateOperationsInput | string
    dataGerado?: DateTimeFieldUpdateOperationsInput | Date | string
    dataPagamento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    observacoes?: NullableStringFieldUpdateOperationsInput | string | null
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    campanha?: CampanhaUpdateOneRequiredWithoutRelatoriosFinanceirosNestedInput
  }

  export type RelatorioFinanceiroUncheckedUpdateWithoutUsuarioInput = {
    id?: StringFieldUpdateOperationsInput | string
    valor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: EnumStatusPagamentoFieldUpdateOperationsInput | $Enums.StatusPagamento
    tipo?: StringFieldUpdateOperationsInput | string
    dataGerado?: DateTimeFieldUpdateOperationsInput | Date | string
    dataPagamento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    observacoes?: NullableStringFieldUpdateOperationsInput | string | null
    campanhaId?: StringFieldUpdateOperationsInput | string
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RelatorioFinanceiroUncheckedUpdateManyWithoutUsuarioInput = {
    id?: StringFieldUpdateOperationsInput | string
    valor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: EnumStatusPagamentoFieldUpdateOperationsInput | $Enums.StatusPagamento
    tipo?: StringFieldUpdateOperationsInput | string
    dataGerado?: DateTimeFieldUpdateOperationsInput | Date | string
    dataPagamento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    observacoes?: NullableStringFieldUpdateOperationsInput | string | null
    campanhaId?: StringFieldUpdateOperationsInput | string
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type NotificacaoUpdateWithoutUsuarioInput = {
    id?: StringFieldUpdateOperationsInput | string
    mensagem?: StringFieldUpdateOperationsInput | string
    lida?: BoolFieldUpdateOperationsInput | boolean
    linkUrl?: NullableStringFieldUpdateOperationsInput | string | null
    dataCriacao?: DateTimeFieldUpdateOperationsInput | Date | string
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type NotificacaoUncheckedUpdateWithoutUsuarioInput = {
    id?: StringFieldUpdateOperationsInput | string
    mensagem?: StringFieldUpdateOperationsInput | string
    lida?: BoolFieldUpdateOperationsInput | boolean
    linkUrl?: NullableStringFieldUpdateOperationsInput | string | null
    dataCriacao?: DateTimeFieldUpdateOperationsInput | Date | string
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type NotificacaoUncheckedUpdateManyWithoutUsuarioInput = {
    id?: StringFieldUpdateOperationsInput | string
    mensagem?: StringFieldUpdateOperationsInput | string
    lida?: BoolFieldUpdateOperationsInput | boolean
    linkUrl?: NullableStringFieldUpdateOperationsInput | string | null
    dataCriacao?: DateTimeFieldUpdateOperationsInput | Date | string
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CartelaConcluidaUpdateWithoutVendedorInput = {
    id?: StringFieldUpdateOperationsInput | string
    dataConclusao?: DateTimeFieldUpdateOperationsInput | Date | string
    numeroCartela?: IntFieldUpdateOperationsInput | number
    campanha?: CampanhaUpdateOneRequiredWithoutCartelasConcluidasNestedInput
  }

  export type CartelaConcluidaUncheckedUpdateWithoutVendedorInput = {
    id?: StringFieldUpdateOperationsInput | string
    dataConclusao?: DateTimeFieldUpdateOperationsInput | Date | string
    numeroCartela?: IntFieldUpdateOperationsInput | number
    campanhaId?: StringFieldUpdateOperationsInput | string
  }

  export type CartelaConcluidaUncheckedUpdateManyWithoutVendedorInput = {
    id?: StringFieldUpdateOperationsInput | string
    dataConclusao?: DateTimeFieldUpdateOperationsInput | Date | string
    numeroCartela?: IntFieldUpdateOperationsInput | number
    campanhaId?: StringFieldUpdateOperationsInput | string
  }

  export type RegraCartelaCreateManyCampanhaInput = {
    id?: string
    numeroCartela: number
    descricao?: string | null
    criadoEm?: Date | string
    atualizadoEm?: Date | string
  }

  export type EnvioVendaCreateManyCampanhaInput = {
    id?: string
    numeroPedido: string
    status?: $Enums.StatusEnvioVenda
    dataEnvio?: Date | string
    motivoRejeicao?: string | null
    infoConflito?: string | null
    numeroCartelaAtendida?: number | null
    dataValidacao?: Date | string | null
    vendedorId: string
    requisitoId: string
    criadoEm?: Date | string
    atualizadoEm?: Date | string
  }

  export type RelatorioFinanceiroCreateManyCampanhaInput = {
    id?: string
    valor: Decimal | DecimalJsLike | number | string
    status?: $Enums.StatusPagamento
    tipo: string
    dataGerado?: Date | string
    dataPagamento?: Date | string | null
    observacoes?: string | null
    usuarioId: string
    criadoEm?: Date | string
    atualizadoEm?: Date | string
  }

  export type CartelaConcluidaCreateManyCampanhaInput = {
    id?: string
    dataConclusao?: Date | string
    numeroCartela: number
    vendedorId: string
  }

  export type OpticaUpdateWithoutCampanhasAlvoInput = {
    id?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    endereco?: NullableStringFieldUpdateOperationsInput | string | null
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    ativa?: BoolFieldUpdateOperationsInput | boolean
    ehMatriz?: BoolFieldUpdateOperationsInput | boolean
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    matriz?: OpticaUpdateOneWithoutFiliaisNestedInput
    filiais?: OpticaUpdateManyWithoutMatrizNestedInput
    usuarios?: UsuarioUpdateManyWithoutOpticaNestedInput
  }

  export type OpticaUncheckedUpdateWithoutCampanhasAlvoInput = {
    id?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    endereco?: NullableStringFieldUpdateOperationsInput | string | null
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    ativa?: BoolFieldUpdateOperationsInput | boolean
    ehMatriz?: BoolFieldUpdateOperationsInput | boolean
    matrizId?: NullableStringFieldUpdateOperationsInput | string | null
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    filiais?: OpticaUncheckedUpdateManyWithoutMatrizNestedInput
    usuarios?: UsuarioUncheckedUpdateManyWithoutOpticaNestedInput
  }

  export type OpticaUncheckedUpdateManyWithoutCampanhasAlvoInput = {
    id?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    endereco?: NullableStringFieldUpdateOperationsInput | string | null
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    ativa?: BoolFieldUpdateOperationsInput | boolean
    ehMatriz?: BoolFieldUpdateOperationsInput | boolean
    matrizId?: NullableStringFieldUpdateOperationsInput | string | null
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RegraCartelaUpdateWithoutCampanhaInput = {
    id?: StringFieldUpdateOperationsInput | string
    numeroCartela?: IntFieldUpdateOperationsInput | number
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    requisitos?: RequisitoCartelaUpdateManyWithoutRegraCartelaNestedInput
  }

  export type RegraCartelaUncheckedUpdateWithoutCampanhaInput = {
    id?: StringFieldUpdateOperationsInput | string
    numeroCartela?: IntFieldUpdateOperationsInput | number
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    requisitos?: RequisitoCartelaUncheckedUpdateManyWithoutRegraCartelaNestedInput
  }

  export type RegraCartelaUncheckedUpdateManyWithoutCampanhaInput = {
    id?: StringFieldUpdateOperationsInput | string
    numeroCartela?: IntFieldUpdateOperationsInput | number
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EnvioVendaUpdateWithoutCampanhaInput = {
    id?: StringFieldUpdateOperationsInput | string
    numeroPedido?: StringFieldUpdateOperationsInput | string
    status?: EnumStatusEnvioVendaFieldUpdateOperationsInput | $Enums.StatusEnvioVenda
    dataEnvio?: DateTimeFieldUpdateOperationsInput | Date | string
    motivoRejeicao?: NullableStringFieldUpdateOperationsInput | string | null
    infoConflito?: NullableStringFieldUpdateOperationsInput | string | null
    numeroCartelaAtendida?: NullableIntFieldUpdateOperationsInput | number | null
    dataValidacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    vendedor?: UsuarioUpdateOneRequiredWithoutEnviosVendaNestedInput
    requisito?: RequisitoCartelaUpdateOneRequiredWithoutEnviosVendaNestedInput
  }

  export type EnvioVendaUncheckedUpdateWithoutCampanhaInput = {
    id?: StringFieldUpdateOperationsInput | string
    numeroPedido?: StringFieldUpdateOperationsInput | string
    status?: EnumStatusEnvioVendaFieldUpdateOperationsInput | $Enums.StatusEnvioVenda
    dataEnvio?: DateTimeFieldUpdateOperationsInput | Date | string
    motivoRejeicao?: NullableStringFieldUpdateOperationsInput | string | null
    infoConflito?: NullableStringFieldUpdateOperationsInput | string | null
    numeroCartelaAtendida?: NullableIntFieldUpdateOperationsInput | number | null
    dataValidacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    vendedorId?: StringFieldUpdateOperationsInput | string
    requisitoId?: StringFieldUpdateOperationsInput | string
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EnvioVendaUncheckedUpdateManyWithoutCampanhaInput = {
    id?: StringFieldUpdateOperationsInput | string
    numeroPedido?: StringFieldUpdateOperationsInput | string
    status?: EnumStatusEnvioVendaFieldUpdateOperationsInput | $Enums.StatusEnvioVenda
    dataEnvio?: DateTimeFieldUpdateOperationsInput | Date | string
    motivoRejeicao?: NullableStringFieldUpdateOperationsInput | string | null
    infoConflito?: NullableStringFieldUpdateOperationsInput | string | null
    numeroCartelaAtendida?: NullableIntFieldUpdateOperationsInput | number | null
    dataValidacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    vendedorId?: StringFieldUpdateOperationsInput | string
    requisitoId?: StringFieldUpdateOperationsInput | string
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RelatorioFinanceiroUpdateWithoutCampanhaInput = {
    id?: StringFieldUpdateOperationsInput | string
    valor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: EnumStatusPagamentoFieldUpdateOperationsInput | $Enums.StatusPagamento
    tipo?: StringFieldUpdateOperationsInput | string
    dataGerado?: DateTimeFieldUpdateOperationsInput | Date | string
    dataPagamento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    observacoes?: NullableStringFieldUpdateOperationsInput | string | null
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    usuario?: UsuarioUpdateOneRequiredWithoutRelatoriosFinanceirosNestedInput
  }

  export type RelatorioFinanceiroUncheckedUpdateWithoutCampanhaInput = {
    id?: StringFieldUpdateOperationsInput | string
    valor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: EnumStatusPagamentoFieldUpdateOperationsInput | $Enums.StatusPagamento
    tipo?: StringFieldUpdateOperationsInput | string
    dataGerado?: DateTimeFieldUpdateOperationsInput | Date | string
    dataPagamento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    observacoes?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioId?: StringFieldUpdateOperationsInput | string
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RelatorioFinanceiroUncheckedUpdateManyWithoutCampanhaInput = {
    id?: StringFieldUpdateOperationsInput | string
    valor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: EnumStatusPagamentoFieldUpdateOperationsInput | $Enums.StatusPagamento
    tipo?: StringFieldUpdateOperationsInput | string
    dataGerado?: DateTimeFieldUpdateOperationsInput | Date | string
    dataPagamento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    observacoes?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioId?: StringFieldUpdateOperationsInput | string
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CartelaConcluidaUpdateWithoutCampanhaInput = {
    id?: StringFieldUpdateOperationsInput | string
    dataConclusao?: DateTimeFieldUpdateOperationsInput | Date | string
    numeroCartela?: IntFieldUpdateOperationsInput | number
    vendedor?: UsuarioUpdateOneRequiredWithoutCartelasConcluidasNestedInput
  }

  export type CartelaConcluidaUncheckedUpdateWithoutCampanhaInput = {
    id?: StringFieldUpdateOperationsInput | string
    dataConclusao?: DateTimeFieldUpdateOperationsInput | Date | string
    numeroCartela?: IntFieldUpdateOperationsInput | number
    vendedorId?: StringFieldUpdateOperationsInput | string
  }

  export type CartelaConcluidaUncheckedUpdateManyWithoutCampanhaInput = {
    id?: StringFieldUpdateOperationsInput | string
    dataConclusao?: DateTimeFieldUpdateOperationsInput | Date | string
    numeroCartela?: IntFieldUpdateOperationsInput | number
    vendedorId?: StringFieldUpdateOperationsInput | string
  }

  export type RequisitoCartelaCreateManyRegraCartelaInput = {
    id?: string
    descricao: string
    quantidade: number
    tipoUnidade?: $Enums.TipoUnidade
    ordem: number
    criadoEm?: Date | string
    atualizadoEm?: Date | string
  }

  export type RequisitoCartelaUpdateWithoutRegraCartelaInput = {
    id?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    quantidade?: IntFieldUpdateOperationsInput | number
    tipoUnidade?: EnumTipoUnidadeFieldUpdateOperationsInput | $Enums.TipoUnidade
    ordem?: IntFieldUpdateOperationsInput | number
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    condicoes?: CondicaoRequisitoUpdateManyWithoutRequisitoNestedInput
    enviosVenda?: EnvioVendaUpdateManyWithoutRequisitoNestedInput
  }

  export type RequisitoCartelaUncheckedUpdateWithoutRegraCartelaInput = {
    id?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    quantidade?: IntFieldUpdateOperationsInput | number
    tipoUnidade?: EnumTipoUnidadeFieldUpdateOperationsInput | $Enums.TipoUnidade
    ordem?: IntFieldUpdateOperationsInput | number
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    condicoes?: CondicaoRequisitoUncheckedUpdateManyWithoutRequisitoNestedInput
    enviosVenda?: EnvioVendaUncheckedUpdateManyWithoutRequisitoNestedInput
  }

  export type RequisitoCartelaUncheckedUpdateManyWithoutRegraCartelaInput = {
    id?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    quantidade?: IntFieldUpdateOperationsInput | number
    tipoUnidade?: EnumTipoUnidadeFieldUpdateOperationsInput | $Enums.TipoUnidade
    ordem?: IntFieldUpdateOperationsInput | number
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CondicaoRequisitoCreateManyRequisitoInput = {
    id?: string
    campo: $Enums.CampoVerificacao
    operador: $Enums.OperadorCondicao
    valor: string
    criadoEm?: Date | string
    atualizadoEm?: Date | string
  }

  export type EnvioVendaCreateManyRequisitoInput = {
    id?: string
    numeroPedido: string
    status?: $Enums.StatusEnvioVenda
    dataEnvio?: Date | string
    motivoRejeicao?: string | null
    infoConflito?: string | null
    numeroCartelaAtendida?: number | null
    dataValidacao?: Date | string | null
    vendedorId: string
    campanhaId: string
    criadoEm?: Date | string
    atualizadoEm?: Date | string
  }

  export type CondicaoRequisitoUpdateWithoutRequisitoInput = {
    id?: StringFieldUpdateOperationsInput | string
    campo?: EnumCampoVerificacaoFieldUpdateOperationsInput | $Enums.CampoVerificacao
    operador?: EnumOperadorCondicaoFieldUpdateOperationsInput | $Enums.OperadorCondicao
    valor?: StringFieldUpdateOperationsInput | string
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CondicaoRequisitoUncheckedUpdateWithoutRequisitoInput = {
    id?: StringFieldUpdateOperationsInput | string
    campo?: EnumCampoVerificacaoFieldUpdateOperationsInput | $Enums.CampoVerificacao
    operador?: EnumOperadorCondicaoFieldUpdateOperationsInput | $Enums.OperadorCondicao
    valor?: StringFieldUpdateOperationsInput | string
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CondicaoRequisitoUncheckedUpdateManyWithoutRequisitoInput = {
    id?: StringFieldUpdateOperationsInput | string
    campo?: EnumCampoVerificacaoFieldUpdateOperationsInput | $Enums.CampoVerificacao
    operador?: EnumOperadorCondicaoFieldUpdateOperationsInput | $Enums.OperadorCondicao
    valor?: StringFieldUpdateOperationsInput | string
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EnvioVendaUpdateWithoutRequisitoInput = {
    id?: StringFieldUpdateOperationsInput | string
    numeroPedido?: StringFieldUpdateOperationsInput | string
    status?: EnumStatusEnvioVendaFieldUpdateOperationsInput | $Enums.StatusEnvioVenda
    dataEnvio?: DateTimeFieldUpdateOperationsInput | Date | string
    motivoRejeicao?: NullableStringFieldUpdateOperationsInput | string | null
    infoConflito?: NullableStringFieldUpdateOperationsInput | string | null
    numeroCartelaAtendida?: NullableIntFieldUpdateOperationsInput | number | null
    dataValidacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    vendedor?: UsuarioUpdateOneRequiredWithoutEnviosVendaNestedInput
    campanha?: CampanhaUpdateOneRequiredWithoutEnviosVendaNestedInput
  }

  export type EnvioVendaUncheckedUpdateWithoutRequisitoInput = {
    id?: StringFieldUpdateOperationsInput | string
    numeroPedido?: StringFieldUpdateOperationsInput | string
    status?: EnumStatusEnvioVendaFieldUpdateOperationsInput | $Enums.StatusEnvioVenda
    dataEnvio?: DateTimeFieldUpdateOperationsInput | Date | string
    motivoRejeicao?: NullableStringFieldUpdateOperationsInput | string | null
    infoConflito?: NullableStringFieldUpdateOperationsInput | string | null
    numeroCartelaAtendida?: NullableIntFieldUpdateOperationsInput | number | null
    dataValidacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    vendedorId?: StringFieldUpdateOperationsInput | string
    campanhaId?: StringFieldUpdateOperationsInput | string
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EnvioVendaUncheckedUpdateManyWithoutRequisitoInput = {
    id?: StringFieldUpdateOperationsInput | string
    numeroPedido?: StringFieldUpdateOperationsInput | string
    status?: EnumStatusEnvioVendaFieldUpdateOperationsInput | $Enums.StatusEnvioVenda
    dataEnvio?: DateTimeFieldUpdateOperationsInput | Date | string
    motivoRejeicao?: NullableStringFieldUpdateOperationsInput | string | null
    infoConflito?: NullableStringFieldUpdateOperationsInput | string | null
    numeroCartelaAtendida?: NullableIntFieldUpdateOperationsInput | number | null
    dataValidacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    vendedorId?: StringFieldUpdateOperationsInput | string
    campanhaId?: StringFieldUpdateOperationsInput | string
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ResgatePremioCreateManyPremioInput = {
    id?: string
    dataSolicitacao?: Date | string
    status?: $Enums.StatusResgate
    dataAtualizacao?: Date | string
    motivoCancelamento?: string | null
    vendedorId: string
    criadoEm?: Date | string
    atualizadoEm?: Date | string
  }

  export type ResgatePremioUpdateWithoutPremioInput = {
    id?: StringFieldUpdateOperationsInput | string
    dataSolicitacao?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumStatusResgateFieldUpdateOperationsInput | $Enums.StatusResgate
    dataAtualizacao?: DateTimeFieldUpdateOperationsInput | Date | string
    motivoCancelamento?: NullableStringFieldUpdateOperationsInput | string | null
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    vendedor?: UsuarioUpdateOneRequiredWithoutResgatesPremiosNestedInput
  }

  export type ResgatePremioUncheckedUpdateWithoutPremioInput = {
    id?: StringFieldUpdateOperationsInput | string
    dataSolicitacao?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumStatusResgateFieldUpdateOperationsInput | $Enums.StatusResgate
    dataAtualizacao?: DateTimeFieldUpdateOperationsInput | Date | string
    motivoCancelamento?: NullableStringFieldUpdateOperationsInput | string | null
    vendedorId?: StringFieldUpdateOperationsInput | string
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ResgatePremioUncheckedUpdateManyWithoutPremioInput = {
    id?: StringFieldUpdateOperationsInput | string
    dataSolicitacao?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumStatusResgateFieldUpdateOperationsInput | $Enums.StatusResgate
    dataAtualizacao?: DateTimeFieldUpdateOperationsInput | Date | string
    motivoCancelamento?: NullableStringFieldUpdateOperationsInput | string | null
    vendedorId?: StringFieldUpdateOperationsInput | string
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}