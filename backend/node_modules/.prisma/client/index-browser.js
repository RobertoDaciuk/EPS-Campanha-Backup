
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('@prisma/client/runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.18.0
 * Query Engine version: 34b5a692b7bd79939a9a2c3ef97d816e749cda2f
 */
Prisma.prismaVersion = {
  client: "6.18.0",
  engine: "34b5a692b7bd79939a9a2c3ef97d816e749cda2f"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.OpticaScalarFieldEnum = {
  id: 'id',
  cnpj: 'cnpj',
  nome: 'nome',
  endereco: 'endereco',
  cidade: 'cidade',
  estado: 'estado',
  telefone: 'telefone',
  email: 'email',
  ativa: 'ativa',
  ehMatriz: 'ehMatriz',
  matrizId: 'matrizId',
  criadoEm: 'criadoEm',
  atualizadoEm: 'atualizadoEm'
};

exports.Prisma.UsuarioScalarFieldEnum = {
  id: 'id',
  email: 'email',
  cpf: 'cpf',
  nome: 'nome',
  whatsapp: 'whatsapp',
  senhaHash: 'senhaHash',
  avatarUrl: 'avatarUrl',
  papel: 'papel',
  status: 'status',
  saldoMoedinhas: 'saldoMoedinhas',
  rankingMoedinhas: 'rankingMoedinhas',
  nivel: 'nivel',
  tokenResetarSenha: 'tokenResetarSenha',
  tokenResetarSenhaExpira: 'tokenResetarSenhaExpira',
  mapeamentoPlanilhaSalvo: 'mapeamentoPlanilhaSalvo',
  opticaId: 'opticaId',
  gerenteId: 'gerenteId',
  criadoEm: 'criadoEm',
  atualizadoEm: 'atualizadoEm'
};

exports.Prisma.LogAutenticacaoScalarFieldEnum = {
  id: 'id',
  tipo: 'tipo',
  email: 'email',
  cpf: 'cpf',
  usuarioId: 'usuarioId',
  ipAddress: 'ipAddress',
  userAgent: 'userAgent',
  detalhes: 'detalhes',
  criadoEm: 'criadoEm'
};

exports.Prisma.CampanhaScalarFieldEnum = {
  id: 'id',
  titulo: 'titulo',
  descricao: 'descricao',
  dataInicio: 'dataInicio',
  dataFim: 'dataFim',
  moedinhasPorCartela: 'moedinhasPorCartela',
  pontosReaisPorCartela: 'pontosReaisPorCartela',
  status: 'status',
  percentualGerente: 'percentualGerente',
  paraTodasOticas: 'paraTodasOticas',
  criadoEm: 'criadoEm',
  atualizadoEm: 'atualizadoEm'
};

exports.Prisma.RegraCartelaScalarFieldEnum = {
  id: 'id',
  numeroCartela: 'numeroCartela',
  descricao: 'descricao',
  campanhaId: 'campanhaId',
  criadoEm: 'criadoEm',
  atualizadoEm: 'atualizadoEm'
};

exports.Prisma.RequisitoCartelaScalarFieldEnum = {
  id: 'id',
  descricao: 'descricao',
  quantidade: 'quantidade',
  tipoUnidade: 'tipoUnidade',
  ordem: 'ordem',
  regraCartelaId: 'regraCartelaId',
  criadoEm: 'criadoEm',
  atualizadoEm: 'atualizadoEm'
};

exports.Prisma.CondicaoRequisitoScalarFieldEnum = {
  id: 'id',
  campo: 'campo',
  operador: 'operador',
  valor: 'valor',
  requisitoId: 'requisitoId',
  criadoEm: 'criadoEm',
  atualizadoEm: 'atualizadoEm'
};

exports.Prisma.EnvioVendaScalarFieldEnum = {
  id: 'id',
  numeroPedido: 'numeroPedido',
  status: 'status',
  dataEnvio: 'dataEnvio',
  motivoRejeicao: 'motivoRejeicao',
  infoConflito: 'infoConflito',
  numeroCartelaAtendida: 'numeroCartelaAtendida',
  dataValidacao: 'dataValidacao',
  vendedorId: 'vendedorId',
  campanhaId: 'campanhaId',
  requisitoId: 'requisitoId',
  criadoEm: 'criadoEm',
  atualizadoEm: 'atualizadoEm'
};

exports.Prisma.PremioScalarFieldEnum = {
  id: 'id',
  nome: 'nome',
  descricao: 'descricao',
  imageUrl: 'imageUrl',
  custoMoedinhas: 'custoMoedinhas',
  estoque: 'estoque',
  ativo: 'ativo',
  criadoEm: 'criadoEm',
  atualizadoEm: 'atualizadoEm'
};

exports.Prisma.ResgatePremioScalarFieldEnum = {
  id: 'id',
  dataSolicitacao: 'dataSolicitacao',
  status: 'status',
  dataAtualizacao: 'dataAtualizacao',
  motivoCancelamento: 'motivoCancelamento',
  vendedorId: 'vendedorId',
  premioId: 'premioId',
  criadoEm: 'criadoEm',
  atualizadoEm: 'atualizadoEm'
};

exports.Prisma.RelatorioFinanceiroScalarFieldEnum = {
  id: 'id',
  valor: 'valor',
  status: 'status',
  tipo: 'tipo',
  dataGerado: 'dataGerado',
  dataPagamento: 'dataPagamento',
  observacoes: 'observacoes',
  usuarioId: 'usuarioId',
  campanhaId: 'campanhaId',
  criadoEm: 'criadoEm',
  atualizadoEm: 'atualizadoEm'
};

exports.Prisma.NotificacaoScalarFieldEnum = {
  id: 'id',
  mensagem: 'mensagem',
  lida: 'lida',
  linkUrl: 'linkUrl',
  dataCriacao: 'dataCriacao',
  usuarioId: 'usuarioId',
  criadoEm: 'criadoEm',
  atualizadoEm: 'atualizadoEm'
};

exports.Prisma.ConfiguracaoGlobalScalarFieldEnum = {
  id: 'id',
  chave: 'chave',
  valor: 'valor',
  descricao: 'descricao',
  criadoEm: 'criadoEm',
  atualizadoEm: 'atualizadoEm'
};

exports.Prisma.CartelaConcluidaScalarFieldEnum = {
  id: 'id',
  dataConclusao: 'dataConclusao',
  numeroCartela: 'numeroCartela',
  vendedorId: 'vendedorId',
  campanhaId: 'campanhaId'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};
exports.PapelUsuario = exports.$Enums.PapelUsuario = {
  ADMIN: 'ADMIN',
  GERENTE: 'GERENTE',
  VENDEDOR: 'VENDEDOR'
};

exports.StatusUsuario = exports.$Enums.StatusUsuario = {
  PENDENTE: 'PENDENTE',
  ATIVO: 'ATIVO',
  BLOQUEADO: 'BLOQUEADO'
};

exports.NivelVendedor = exports.$Enums.NivelVendedor = {
  BRONZE: 'BRONZE',
  PRATA: 'PRATA',
  OURO: 'OURO',
  DIAMANTE: 'DIAMANTE'
};

exports.TipoUnidade = exports.$Enums.TipoUnidade = {
  PAR: 'PAR',
  UNIDADE: 'UNIDADE'
};

exports.CampoVerificacao = exports.$Enums.CampoVerificacao = {
  NOME_PRODUTO: 'NOME_PRODUTO',
  CODIGO_PRODUTO: 'CODIGO_PRODUTO',
  VALOR_VENDA: 'VALOR_VENDA',
  CATEGORIA_PRODUTO: 'CATEGORIA_PRODUTO'
};

exports.OperadorCondicao = exports.$Enums.OperadorCondicao = {
  CONTEM: 'CONTEM',
  NAO_CONTEM: 'NAO_CONTEM',
  IGUAL_A: 'IGUAL_A',
  NAO_IGUAL_A: 'NAO_IGUAL_A',
  MAIOR_QUE: 'MAIOR_QUE',
  MENOR_QUE: 'MENOR_QUE'
};

exports.StatusEnvioVenda = exports.$Enums.StatusEnvioVenda = {
  EM_ANALISE: 'EM_ANALISE',
  VALIDADO: 'VALIDADO',
  REJEITADO: 'REJEITADO',
  CONFLITO_MANUAL: 'CONFLITO_MANUAL'
};

exports.StatusResgate = exports.$Enums.StatusResgate = {
  SOLICITADO: 'SOLICITADO',
  ENVIADO: 'ENVIADO',
  CANCELADO: 'CANCELADO'
};

exports.StatusPagamento = exports.$Enums.StatusPagamento = {
  PENDENTE: 'PENDENTE',
  PAGO: 'PAGO'
};

exports.Prisma.ModelName = {
  Optica: 'Optica',
  Usuario: 'Usuario',
  LogAutenticacao: 'LogAutenticacao',
  Campanha: 'Campanha',
  RegraCartela: 'RegraCartela',
  RequisitoCartela: 'RequisitoCartela',
  CondicaoRequisito: 'CondicaoRequisito',
  EnvioVenda: 'EnvioVenda',
  Premio: 'Premio',
  ResgatePremio: 'ResgatePremio',
  RelatorioFinanceiro: 'RelatorioFinanceiro',
  Notificacao: 'Notificacao',
  ConfiguracaoGlobal: 'ConfiguracaoGlobal',
  CartelaConcluida: 'CartelaConcluida'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
