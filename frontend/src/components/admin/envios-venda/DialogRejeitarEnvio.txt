/**
 * ============================================================================
 * COMPONENTE: DialogRejeitarEnvio (CRIAÇÃO - Admin Frontend) - Princípios 1, 3, 4, 5.2
 * ============================================================================
 * * Propósito:
 * Diálogo modal para o Admin inserir o motivo da rejeição manual de um Envio de Venda.
 * * Funcionalidades:
 * - Validação de formulário com Zod e React Hook Form.
 * - Envia o motivo para o `onSubmit` do componente pai.
 * - Design clean e focado na ação.
 * * @module AdminEnviosVenda
 * ============================================================================
 */
"use client";

import React from "react";
import {
  Dialog,
  DialogContent,
  DialogHeader,
  DialogTitle,
  DialogDescription,
  DialogFooter,
} from "@/components/ui/dialog";
import { Button } from "@/components/ui/button";
import { Textarea } from "@/components/ui/textarea";
import { XCircle, Loader2, AlertTriangle } from "lucide-react";
import { useForm } from "react-hook-form";
import { zodResolver } from "@hookform/resolvers/zod";
import * as z from "zod";

// ========================================
// VALIDAÇÃO ZOD (Princípio 5.2)
// ========================================

/**
 * Schema de validação para o motivo da rejeição.
 * Deve ser >= 5 caracteres e <= 500 caracteres (alinhado com DTO backend).
 */
const motivoSchema = z.object({
  motivo: z
    .string()
    .min(5, "O motivo deve ter no mínimo 5 caracteres.")
    .max(500, "O motivo não pode exceder 500 caracteres."),
});

type MotivoFormData = z.infer<typeof motivoSchema>;

// ========================================
// TIPAGEM
// ========================================

interface DialogRejeitarEnvioProps {
  isOpen: boolean;
  onClose: () => void;
  onSubmit: (motivo: string) => void;
  isSubmitting: boolean;
}

// ========================================
// COMPONENTE: DialogRejeitarEnvio
// ========================================

export function DialogRejeitarEnvio({
  isOpen,
  onClose,
  onSubmit,
  isSubmitting,
}: DialogRejeitarEnvioProps) {
  const {
    register,
    handleSubmit,
    formState: { errors },
    reset,
  } = useForm<MotivoFormData>({
    resolver: zodResolver(motivoSchema),
    defaultValues: {
      motivo: "",
    },
  });

  /**
   * Handler para submissão do formulário.
   */
  const handleFormSubmit = (dados: MotivoFormData) => {
    onSubmit(dados.motivo);
    // Não reseta aqui, o reset só acontece se o onSubmit for bem-sucedido
    // (A ser chamado pela função handleRejeitar do componente pai)
  };

  /**
   * Handler para fechar o diálogo e resetar o formulário.
   */
  const handleClose = () => {
    onClose();
    reset(); // Limpa o formulário ao fechar
  };

  // ========================================
  // RENDERIZAÇÃO
  // ========================================
  return (
    <Dialog open={isOpen} onOpenChange={handleClose}>
      <DialogContent className="sm:max-w-[425px] rounded-xl bg-card/90 backdrop-blur-lg">
        <DialogHeader>
          <DialogTitle className="flex items-center gap-2 text-destructive">
            <XCircle className="h-5 w-5" />
            Confirmar Rejeição
          </DialogTitle>
          <DialogDescription className="text-sm">
            Informe o **motivo claro e objetivo** da rejeição. Esta informação
            será exibida ao vendedor.
          </DialogDescription>
        </DialogHeader>
        <form onSubmit={handleSubmit(handleFormSubmit)}>
          <div className="grid gap-4 py-4">
            {/* Aviso de Rejeição */}
            <div className="flex items-start rounded-md border border-amber-400/50 bg-amber-50 p-3 text-sm text-amber-700 dark:bg-amber-900/20 dark:text-amber-300">
              <AlertTriangle className="mr-2 h-4 w-4 flex-shrink-0" />
              <p>
                Esta ação é irreversível e o vendedor **não receberá pontos**
                pelo envio.
              </p>
            </div>

            {/* Área de Texto para o Motivo */}
            <div className="space-y-1">
              <label htmlFor="motivo" className="text-sm font-medium">
                Motivo da Rejeição (Obrigatório)
              </label>
              <Textarea
                id="motivo"
                placeholder="Ex: Número do pedido não corresponde aos critérios de validação..."
                disabled={isSubmitting}
                {...register("motivo")}
                rows={4}
                className="input-glass"
              />
              {errors.motivo && (
                <p className="text-xs text-destructive">
                  {errors.motivo.message}
                </p>
              )}
            </div>
          </div>
          <DialogFooter>
            <Button
              variant="outline"
              onClick={handleClose}
              disabled={isSubmitting}
            >
              Cancelar
            </Button>
            <Button type="submit" disabled={isSubmitting} variant="destructive">
              {isSubmitting ? (
                <>
                  <Loader2 className="mr-2 h-4 w-4 animate-spin" />
                  Rejeitando...
                </>
              ) : (
                "Confirmar Rejeição"
              )}
            </Button>
          </DialogFooter>
        </form>
      </DialogContent>
    </Dialog>
  );
}